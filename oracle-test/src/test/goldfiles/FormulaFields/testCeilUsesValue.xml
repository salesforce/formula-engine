<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testCeilUsesValue">
   <testInstance formula="CEILING(VALUE(customtext1__c))" returntype="Double" precision="12" scale="2">
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN TO_NUMBER($!s0s!$.customtext1__c)&gt;=0 THEN CEIL(ROUND(TO_NUMBER($!s0s!$.customtext1__c),33)) ELSE FLOOR(ROUND(TO_NUMBER($!s0s!$.customtext1__c),33)) END</Sql>
       <Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN TO_NUMBER($!s0s!$.customtext1__c)&gt;=0 THEN CEIL(ROUND(TO_NUMBER($!s0s!$.customtext1__c),33)) ELSE FLOOR(ROUND(TO_NUMBER($!s0s!$.customtext1__c),33)) END</Sql>
       <Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">(context.record.customtext1__c!=null)?(($F.Decimal(context.record.customtext1__c).isPos()?$F.Decimal(context.record.customtext1__c).toDP(18).ceil():$F.Decimal(context.record.customtext1__c).toDP(18).floor())):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customtext1__c!=null)?(($F.Decimal(context.record.customtext1__c).isPos()?$F.Decimal(context.record.customtext1__c).toDP(18).ceil():$F.Decimal(context.record.customtext1__c).toDP(18).floor())):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(context.record.customtext1__c!=null)?(((Number(context.record.customtext1__c))&gt;=0?Math.ceil(Number(context.record.customtext1__c)):Math.floor(Number(context.record.customtext1__c)))):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customtext1__c!=null)?(((Number(context.record.customtext1__c))&gt;=0?Math.ceil(Number(context.record.customtext1__c)):Math.floor(Number(context.record.customtext1__c)))):null</JsOutput>
      <result>
      <inputvalues>[0]</inputvalues>
         <formula>0</formula>
         <sql>0</sql>
         <formulaNullAsNull>0</formulaNullAsNull>
         <sqlNullAsNull>0</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[1]</inputvalues>
         <formula>1</formula>
         <sql>1</sql>
         <formulaNullAsNull>1</formulaNullAsNull>
         <sqlNullAsNull>1</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[2]</inputvalues>
         <formula>2</formula>
         <sql>2</sql>
         <formulaNullAsNull>2</formulaNullAsNull>
         <sqlNullAsNull>2</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[-1]</inputvalues>
         <formula>-1</formula>
         <sql>-1</sql>
         <formulaNullAsNull>-1</formulaNullAsNull>
         <sqlNullAsNull>-1</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[-10]</inputvalues>
         <formula>-10</formula>
         <sql>-10</sql>
         <formulaNullAsNull>-10</formulaNullAsNull>
         <sqlNullAsNull>-10</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[-100]</inputvalues>
         <formula>-100</formula>
         <sql>-100</sql>
         <formulaNullAsNull>-100</formulaNullAsNull>
         <sqlNullAsNull>-100</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[56]</inputvalues>
         <formula>56</formula>
         <sql>56</sql>
         <formulaNullAsNull>56</formulaNullAsNull>
         <sqlNullAsNull>56</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[110]</inputvalues>
         <formula>110</formula>
         <sql>110</sql>
         <formulaNullAsNull>110</formulaNullAsNull>
         <sqlNullAsNull>110</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[20]</inputvalues>
         <formula>20</formula>
         <sql>20</sql>
         <formulaNullAsNull>20</formulaNullAsNull>
         <sqlNullAsNull>20</sqlNullAsNull>
      </result>
   </testInstance>
</testCase>
