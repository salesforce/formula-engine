<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE iniFile SYSTEM "labels.dtd">
<iniFile>
    <section name="Formula_General">
        <param name="BlankFieldHandlingTitle">공백 필드 처리</param>
        <param name="BlankFields">공백 필드</param>
        <param name="BlankFieldHandlingDescr">수식이 숫자, 통화 또는 백분율 필드를 참조하는 경우 수식 값이 공백일 때 수식 출력에 표시할 내용을 지정합니다.</param>
        <param name="TreatBlanksAsZeros">공백 필드를 0으로 처리합니다.</param>
        <param name="TreatBlanksAsNull">공백 필드를 공백으로 처리합니다.</param>
        <param name="DisabledFormula">이 수식은 필드를 삭제했을 때 비활성화되었습니다. 다시 사용하려면 수식을 편집하고 저장합니다.</param>
        <param name="MoreHelpOnFunction">이 기능에 대한 도움말</param>
        <param name="100ValidationRuleSamples">유용한 샘플 확인 규칙</param>
        <param name="UsingFunctions"><![CDATA[연산자 및 함수]]></param>
        <param name="ResourcesOnCRMSuccess">successforce.com의 자원</param>
        <param name="ResourcesOnCRMCommunity">CRM 커뮤니티의 자원</param>
        <param name="QuickReferenceGuide">수식 필드 빠른 참조 가이드</param>
        <param name="SimpleFormula">단순 수식</param>
        <param name="AdvancedFormula">고급 수식</param>
        <param name="FormulaEditorTitle">수식 편집기</param>   <!-- aliased across labels; do not change -->
        <param name="AddToFormula">선택한 함수 삽입</param>
        <param name="Functions">함수</param>
        <param name="Operators">연산자</param>
        <param name="ShowEditor">수식 편집기 표시</param>
        <param name="HideEditor">수식 편집기 숨기기</param>
        <param name="StandardFields">{0} 표준 필드</param>
        <param name="CustomFields">{0} 사용자 정의 필드</param>   <!-- aliased across labels; do not change -->
        <param name="StandardFields_NoContext">표준 필드</param>   <!-- aliased across labels; do not change -->
        <param name="InvalidFields">{0} 필드에 액세스할 수 없습니다. 수식에서 참조하는 모든 필드를 검토하십시오.</param>
        <param name="PolymorphicFieldLabel">{0} ({1})</param> <!-- {0} is the label for the field, {1} is the label for the domain it spans to -->
        <param name="SObjectRow">SObject 레코드</param> <!-- Added primarily for Flow Triggers -->
        <param name="SObjectRowField">* SObject 레코드({0})</param> <!-- Added primarily for Flow Triggers, {0} is entity type -->
        <param name="JSDetected">JavaScript는 보안상 취약하므로 이 하이퍼링크에서는 허용되지 않습니다. 도움이 필요하면 관리자에게 요청하십시오.</param>
    </section>
    <section name="FormulaFieldExceptionMessages">
        <param name="WrongArgumentTypeException">{0}에 대한 잘못된 매개변수 유형. {1}이(가) 필요한데 {2}을(를) 받았습니다.</param>
        <param name="WrongNumberOfArgumentsException">{0}에 대한 잘못된 매개변수 숫자. {1}이(가) 필요한데 {2}을(를) 받았습니다.</param>
        <param name="WrongExpressionTypeException">수식 결과가 필요한 데이터 유형({0})과 호환되지 않는 데이터 유형({1})입니다.</param>
        <param name="IllegalArgumentTypeException">{0}에 대한 잘못된 인수 유형. </param>
        <param name="IllegalArgumentValueException_JavascriptNotAllowed">{0}에 대해 올바르지 않은 인수 값입니다. Javascript는 허용되지 않습니다.</param> <!--  {0} is the name of a function/operator (like "function HYPERLINK()") -->
        <param name="InvalidFieldReferenceException">{0} 필드가 없습니다. 맞춤법을 확인하십시오.</param>
        <param name="InvalidDomainReferenceException">{1}이(가) {0} 필드에 대해 잘못된 개체 유형입니다. 맞춤법을 확인하십시오.</param>
        <param name="InvalidFunctionReferenceException">알 수 없는 함수 {0}입니다. 맞춤법을 확인하십시오.</param>
        <param name="InvalidFunctionReferenceForFunctionException">{0} 함수는 {1} 필드를 참조할 수 없습니다.</param>
        <param name="UnsupportedTypeException">다음 필드를 사용하여 지원되지 않는 필드 유형 &quot;{0}&quot;을(를) 참조했습니다. {1}</param>
        <param name="UnsupportedTypeException_ENCRYPTED">{1} 필드를 사용하여 지원되지 않는 필드 유형 &quot;{0}(암호화됨)&quot;을(를) 참조했습니다.</param>
        <param name="UnsupportedTypeException_ISPICKVAL">{0} 필드는 선택 목록 필드입니다. 선택 목록 필드는 특정 함수에서만 지원됩니다. &lt;a href="{1}"&gt;추가 정보&lt;/a&gt;</param>
        <param name="UnsupportedTypeException_ISMULTIPICKVAL">{0} 필드는 다중 선택 선택 목록 필드입니다. 다중 선택 선택 목록 필드는 특정 함수에서만 지원됩니다. &lt;a href="{1}"&gt;추가 정보&lt;/a&gt;</param>
        <param name="FormulaParseException">구문 오류</param>
        <param name="FormulaParseException_DETAILED">구문 오류입니다.  {2}이(가) 없습니다.</param>
        <param name="FormulaParseException_DETAILEDWITHTOKEN">구문 오류입니다.  ''{2}''이(가) 발견되었습니다.</param>
        <param name="FormulaParseException_DETAILEDWITHTEXT">구문 오류입니다.  ''{2}''</param>
        <param name="FormulaParseException_DETAILEDWITHEXTRA">구문 오류입니다. 추가 {0}</param>
        <param name="FormulaParseException_UNHANDLED">예기치 않은 오류가 발생했습니다. {0}</param>
        <param name="NestedFormulaException">참조된 수식에 오류가 있습니다. {0}, {1}</param>
        <param name="FormulaTooLongException">수식이 너무 깁니다({0}자).  최대 길이는 {1}자입니다.</param>
        <param name="SQLTooBigException">편집된 수식이 너무 커서 실행할 수 없습니다({0}자). 최대 크기는 {1}자입니다.</param>
        <param name="JSTooBigException">컴파일된 JavaScript 수식({0}자)의 길이가 {1}자 제한을 초과합니다. 자세히 알아보려면 Salesforce 도움말에서 &quot;수식 크기 줄이기&quot;를 검색하십시오.</param>
        <param name="JSTooBigException_INCOMPLETE">JavaScript 크기({0}자 이상)가 {1}자 제한을 초과해 JavaScript 수식을 컴파일할 수 없습니다. 자세히 알아보려면 Salesforce 도움말에서 &quot;수식 크기 줄이기&quot;를 검색하십시오.</param>
        <param name="FunctionNotAllowedException">{0} 함수는 이 수식 유형에 사용할 수 없습니다.</param>
        <param name="WrongMergeFieldTypeException">{0}에 대한 잘못된 매개변수. {1} 필드 참조 예상.</param>
        <param name="WrongArgumentException">{0}에 대한 잘못된 매개변수 값. {1}이(가) 필요한데 {2}을(를) 받았습니다.</param>
        <param name="WrongArgumentException_General">{0}에 대한 잘못된 매개변수.</param>
        <param name="FunctionIncludesWrongArgumentException">함수 INCLUDES()에 대한 잘못된 매개변수. 텍스트 리터럴은 이 다중 선택 선택 목록 필드에 대해 유효한 값이어야 합니다.</param>
        <param name="RegexTooComplicatedException">다음에 대한 정규식 런타임이 초과되었습니다: {0}</param>
        <param name="InvalidNumericValueException">값 ''{0}''은(는) 유효한 ID 값이 아닙니다.</param>
        <param name="InvalidValueException_ForOperator"><![CDATA[''{0}'' 값은 연산자 ''{1}''에 대해 유효한 값이 아닙니다.]]></param>
        <param name="SpanningRelationshipLimit_remove">이 {1}을(를) 저장하려면 {0}개 이상의 관계를 제거해야 합니다.</param>
        <param name="SpanningRelationshipLimit_thisFormula">이 {0}에서 참조된 관련 개체:</param>
        <param name="EndOfFormula">수식의 끝</param>
        <param name="FieldReference">field name</param>
        <param name="Evaluation_Exception">#오류!</param>
        <param name="Overflow_Exception">#너무 큽니다!</param>
        <param name="MaxEncodedSizeLimit">인코딩된 수식이 너무 깁니다({0}자). 값은 {1}을(를) 초과할 수 없습니다.</param>
        <param name="StaticResourceNotFound">{0}(이)라는 정적 자원이 없습니다. 맞춤법을 확인하십시오.</param>
        <param name="FilterNotFound">{0}(이)라는 필터 이름이 존재하지 않습니다. 맞춤법을 확인하십시오.</param>
        <param name="FilterFoundInaccessibleEntity">{0}(이)라는 필터 이름이 존재하지 않으나 {1}에 액세스할 수 있습니다.</param>
        <param name="RelatedObjectReference">관련 개체 참조</param>
        <param name="InvalidSubscriptBase">{0} 유형의 표현식에 아래 첨자를 지정할 수 없습니다.</param>
        <param name="FieldReferenceCycleDetectedException">수식은 직접 또는 간접적으로 자신을 참조하는 다른 수식 필드를 사용할 수 없습니다. {1}</param>
        <param name="EncodedByteLengthTooLong">문자열의 크기가 {0}바이트입니다. 크기는 {1}바이트를 초과할 수 없습니다.</param>
        <!--  these are used in exception messages to describe formula element -->
        <param name="function">함수 ''{0}()''</param>
        <param name="operator">연산자 ''{0}''</param>
        <param name="subscript">아래 첨자</param>
        <param name="detailLookup">({0})</param>
        <param name="detailLookupAbbr">{0}+{1}</param>
        <param name="detailLookupMore">(...)</param>
    </section>
    <section name="FormulaFieldExceptionMessages_runtime">
        <param name="InvalidFieldReferenceException">다음 필드에 액세스할 수 없습니다: {0}. 관리자에게 문의하십시오.</param>
        <param name="MissingFieldValueException">필드에 대한 값이 없습니다: {0}</param>
    </section>
    <section name="FormulaFieldExceptionDataTypes">
        <param name="java.lang.String">텍스트</param>
        <param name="java.math.BigDecimal">숫자</param>
        <param name="java.lang.Integer">숫자</param>
        <param name="java.util.Date">날짜</param>
        <param name="com.force.formula.FormulaDateTime">일자 시간</param>
        <param name="java.lang.Boolean">부울</param>
        <param name="common.config.currency.CurrencyData">통화</param>
        <param name="com.force.formula.commands.ConstantNull">Null</param>
        <param name="com.force.formula.commands.ConstantString">텍스트 리터럴</param>
        <param name="com.force.formula.commands.RuntimeType">런타임 유효성 확인 유형</param>
        <param name="java.util.Calendar">일자 시간</param>
        <param name="shared.xml.soap.DateOnlyWrapper">날짜</param>
    </section>
    <section name="FormulaFieldHelpMessage">
        <param name="ExampleString">텍스트 및 선택 목록 값 API 이름을 큰따옴표로 묶음 </param>
        <param name="ExampleStringValue">(&quot;the_text&quot;)</param>
        <param name="ExampleNumber">따옴표 없는 숫자 포함 </param>
        <param name="ExampleNumberValue">(25)</param>
        <param name="ExamplePercent">소수점으로 퍼센트 표시</param>
        <param name="ExamplePercentValue">(0.10)</param>
        <param name="ExampleDate">및 표준 형식으로 날짜 계산 표시</param>
        <param name="ExampleDateValue">(Today() + 7)</param>
        <param name="Use">사용</param>   <!-- aliased across labels; do not change -->
        <param name="FormulaSyntax">수식 구문:</param>
        <param name="Eg">예:</param>
        <param name="PicklistToolTip">기본값이 값에서 정의된 기본값을 재정의합니다. 기본값 수식으로 선택 목록의 활성 값을 확인할 수 없는 경우 값 레벨 기본값을 사용합니다.</param>
    </section>
    <section name="FormulaFieldFunctionCatagory">
        <param name="DateTime"><![CDATA[일자 및 시간]]></param>
        <param name="Logical">논리적</param>
        <param name="Math">수학</param>
        <param name="Text">텍스트</param>
        <param name="ReportSummaries">요약</param>
        <param name="Advanced">고급</param>   <!-- aliased across labels; do not change -->
    </section>
    <section name="FormulaFieldOperators">
        <param name="PLUS">더하기</param> <!-- This is used in the context of arithmetic. i.e. 1 + 1 = 2 -->
        <param name="MINUS">빼기</param>
        <param name="STAR">곱하기</param>
        <param name="DIVIDE">나누기</param>   <!-- aliased across labels; do not change -->
        <param name="LPAREN">왼쪽 괄호</param>
        <param name="RPAREN">오른쪽 괄호</param>
        <param name="EQUAL">같음</param>
        <param name="NE">같지 않음</param>
        <param name="LT">보다 작음</param>
        <param name="GT">보다 큼</param>
        <param name="LE">작거나 같음</param>
        <param name="GE">크거나 같음</param>
        <param name="CARET">제곱</param>
        <param name="AMPERSAND">연쇄화</param>
        <param name="CONTAINS">포함</param>
        <param name="AND">및</param>
        <param name="OR">또는</param>   <!-- aliased across labels; do not change -->
    </section>
    <section name="FormulaFieldFunctions">
        <param name="functions_title">함수</param>
        <param name="BR">BR()</param>
        <param name="BR_DESCR">문자열 수식에 HTML 줄 바꿈 태그를 삽입합니다.</param>
        <param name="DATE">DATE(year,month,day)</param>
        <param name="DATE_DESCR">연, 월, 일로 일자를 만듭니다.</param>
        <param name="DATEVALUE">DATEVALUE(expression)</param>
        <param name="DATEVALUE_DESCR">일자 시간 또는 텍스트 표시로 일자를 만듭니다.</param>
        <param name="DATETIMEVALUE">DATETIMEVALUE(expression)</param>
        <param name="DATETIMEVALUE_DESCR">연도, 월, 일 및 GMT 시간 값 반환</param>
        <param name="DAYS360">DAYS360(date1,date2)</param>
        <param name="DAYS360_DESCR">360일 연도를 기존으로 두 날짜 사이 일 수를 반환합니다.</param>
        <param name="MONTH">MONTH(date)</param>
        <param name="MONTH_DESCR">월 수를 나타내는 1(1월)과 12(12월) 사이의 숫자를 반환합니다.</param>
        <param name="NOW">NOW()</param>
        <param name="NOW_DESCR">지금 시각을 나타내는 일자 시간을 반환합니다.</param>
        <param name="TIMENOW">TIMENOW()</param>
        <param name="TIMENOW_DESCR">지금 시각을 나타내는 시간을 반환합니다</param>
        <param name="TIMEVALUE">TIMEVALUE()</param>
        <param name="TIMEVALUE_DESCR">시간 반환합니다 </param>
        <param name="HOUR">HOUR()</param>
        <param name="HOUR_DESCR">하루 중 시간을 반환합니다 </param>
        <param name="MINUTE">MINUTE()</param>
        <param name="MINUTE_DESCR">하루 중 분을 반환합니다 </param>
        <param name="SECOND">SECOND()</param>
        <param name="SECOND_DESCR">하루 중 초를 반환합니다 </param>
        <param name="MILLISECOND">MILLISECOND()</param>
        <param name="MILLISECOND_DESCR">하루 중 밀리초를 반환합니다 </param>
        <param name="TODAY">TODAY()</param>
        <param name="TODAY_DESCR">현재 일자를 반환합니다.</param>
        <param name="WEEKDAY">WEEKDAY(date,return_type)</param>
        <param name="WEEKDAY_DESCR">요일을 나타내는 1과 7 사이의 숫자를 반환합니다.</param>
        <param name="YEAR">YEAR(date)</param>
        <param name="YEAR_DESCR">일자의 연도를 나타내는 1900과 9999 사이의 숫자를 반환합니다.</param>
        <param name="DAY">DAY(date)</param>
        <param name="DAY_DESCR">날짜를 나타내는 1과 31 사이의 숫자를 반환합니다.</param>
        <param name="ISNULL">ISNULL(expression)</param>
        <param name="ISNULL_DESCR">표현식이 null이고 TRUE 또는 FALSE를 반환할 것인지 여부를 확인</param>
        <param name="ISBLANK">ISBLANK(expression)</param>
        <param name="ISBLANK_DESCR">표현식이 비어 있고 TRUE 또는 FALSE를 반환할 것인지 여부를 확인</param>
        <param name="AND">AND(logical1,logical2,...)</param>
        <param name="AND_DESCR">모든 인수가 참인지 확인하고 모든 인수가 참인 경우 TRUE를 반환합니다.</param>
        <param name="CASE">CASE(expression, value1, result1, value2, result2,...,else_result)</param>
        <param name="CASE_DESCR">연속 값에 대한 표현식을 확인합니다. 표현식이 어떠한 값과 같으면 해당 결과가 반환됩니다. 만약 표현식이 값과 같지 않으면 다른 결과가 반환됩니다.</param>
        <param name="IF">IF(logical_test, value_if_true, value_if_false)</param>
        <param name="IF_DESCR">조건이 참인지 확인하고 TRUE이면 하나의 값을, FALSE인 경우 다른 값을 반환합니다.</param>
        <param name="NOT">NOT(logical)</param>
        <param name="NOT_DESCR">FALSE에서 TRUE로 또는 TRUE에서 FALSE로 변경합니다.</param>
        <param name="OR">OR(logical1,logical2,...)</param>
        <param name="OR_DESCR">인수가 참인지 확인하고 TRUE 또는 FALSE를 반환합니다.  모든 인수가 거짓인 경우에만 FALSE를 반환합니다.</param>
        <param name="ABS">ABS(number)</param>
        <param name="ABS_DESCR">숫자의 절대값을 나타내는 부호 없는 숫자를 반환합니다.</param>
        <param name="CEILING">CEILING(number)</param>
        <param name="CEILING_DESCR">숫자를 가장 가까운 상위 정수(음수인 경우 0으로부터 먼 정수)로 반올림합니다.</param>
        <param name="MCEILING">MCEILING(숫자)</param>
        <param name="MCEILING_DESCR">숫자를 가장 가까운 상위 정수(음수인 경우 0에 가까운 정수)로 반올림합니다.</param>
        <param name="EXP">EXP(number)</param>
        <param name="EXP_DESCR">지정된 숫자의 제곱을 반환합니다.</param>
        <param name="FLOOR">FLOOR(number)</param>
        <param name="FLOOR_DESCR">숫자를 0을 기준으로 가장 가까운 정수로 내립니다.</param>
        <param name="MFLOOR">MFLOOR(숫자)</param>
        <param name="MFLOOR_DESCR">숫자를 가장 가까운 하위 정수(음수인 경우 0으로부터 먼 정수)로 반올림합니다.</param>
        <param name="INT">INT(number)</param>
        <param name="INT_DESCR">숫자를 가장 가까운 정수로 내립니다.</param>
        <param name="LN">LN(number)</param>
        <param name="LN_DESCR">숫자의 자연 로그를 반환합니다.</param>
        <param name="LOG">LOG(number)</param>
        <param name="LOG_DESCR">숫자의 10을 밑으로 하는 로그를 반환합니다.</param>
        <param name="MOD">MOD(number,divisor)</param>
        <param name="MOD_DESCR">숫자를 제수로 나눈 후의 나머지를 반환합니다.</param>
        <param name="MAX">MAX(number,number,...)</param>
        <param name="MAX_DESCR">모든 인수의 최대값을 반환합니다.</param>
        <param name="MIN">MIN(number,number,...)</param>
        <param name="MIN_DESCR">모든 인수의 최소값을 반환합니다.</param>
        <param name="NULLVALUE">NULLVALUE(expression, substitute_expression)</param>
        <param name="NULLVALUE_DESCR">표현식이 null이고 대체 표현식을 반환할 것인지 여부를 확인합니다. 표현식이 null이 아닌 경우 원래 표현식 값을 반환합니다.</param>
        <param name="BLANKVALUE">BLANKVALUE(expression, substitute_expression)</param>
        <param name="BLANKVALUE_DESCR">비어 있는 경우, 표현식이 비어 있고 대체 표현식을 반환할 것인지 여부를 확인합니다. 표현식이 비어있지 않은 경우 원래 표현식 값을 반환합니다.</param>
        <param name="ROUND">ROUND(number,num_digits)</param>
        <param name="ROUND_DESCR">숫자를 지정한 자릿수로 반올림합니다.</param>
        <param name="TRUNC">TRUNC(number,num_digits)</param>
        <param name="TRUNC_DESCR">숫자를 지정한 자릿수로 절삭합니다.</param>
        <param name="SQRT">SQRT(number)</param>
        <param name="SQRT_DESCR">숫자의 양의 제곱근을 반환합니다.</param>
        <param name="BEGINS">BEGINS(text, compare_text)</param>
        <param name="BEGINS_DESCR">텍스트가 지정한 문자로 시작하는지 확인하고 그런 경우 TRUE를 반환합니다. 그렇지 않으면 FALSE를 반환합니다.</param>
        <param name="CONTAINS">CONTAINS(text, compare_text)</param>
        <param name="CONTAINS_DESCR">텍스트가 지정한 문자를 포함하는지 확인하고 그런 경우 TRUE를 반환합니다.  그렇지 않으면 FALSE를 반환합니다.</param>
        <param name="LEFT">LEFT(text, num_chars)</param>
        <param name="LEFT_DESCR">텍스트 문자열 시작 부분에서 지정된 수의 문자를 반환합니다.</param>
        <param name="LEN">LEN(text)</param>
        <param name="LEN_DESCR">텍스트 문자열에 있는 문자 수를 반환합니다.</param>
        <param name="MID">MID(text, start_num, num_chars)</param>
        <param name="MID_DESCR">시작 위치와 길이를 지정한 경우 문자열 중간 부분의 문자를 반환합니다.</param>
        <param name="FIND">FIND(search_text, text [, start_num])</param>
        <param name="FIND_DESCR">텍스트에서 검색 문자열의 위치를 반환합니다.</param>
        <param name="PLVALUE">PLVALUE(field, text)</param>
        <param name="PLVALUE_DESCR">텍스트 문자열을 선택 목록 값으로 변환합니다.</param>
        <param name="RIGHT">RIGHT(text, num_chars)</param>
        <param name="RIGHT_DESCR">텍스트 문자열의 끝 부분에서 지정된 수의 문자를 반환합니다.</param>
        <param name="TEXT">TEXT(value)</param>
        <param name="TEXT_DESCR">값을 표준 표시 형식을 사용하는 텍스트로 전환합니다.</param>
        <param name="TRIM">TRIM(text)</param>
        <param name="TRIM_DESCR">텍스트 문자열에서 단어 사이의 공백 하나를 제외한 모든 공백을 제거합니다.</param>
        <param name="HYPERLINK">HYPERLINK(url, friendly_name [, target])</param>
        <param name="HYPERLINK_DESCR">하이퍼링크를 만듭니다.</param>
        <param name="IMAGE">IMAGE(image_url, alternate_text [, height, width])</param>
        <param name="IMAGE_DESCR">이미지를 삽입합니다.</param>
        <param name="VALUE">VALUE(text)</param>
        <param name="VALUE_DESCR">숫자를 나타내는 텍스트 문자열을 숫자로 변환합니다.</param>
        <param name="ISPICKVAL">ISPICKVAL(picklist_field, text_literal)</param>
        <param name="ISPICKVAL_DESCR">선택 목록 필드의 값이 문자열과 같은지 확인합니다.</param>
        <param name="INCLUDES">INCLUDES(multiselect_picklist_field, text_literal)</param>
        <param name="INCLUDES_DESCR">다중 선택 선택 목록 필드에서 선택한 값이 사용자가 지정한 텍스트 리터럴과 같은지 확인합니다.</param>
        <param name="GETSESSIONID">GETSESSIONID()</param>
        <param name="GETSESSIONID_DESCR">현재 세션 ID를 반환합니다. salesforce.com 증명서 인증을 사용하는 다른 응용 프로그램의 하이퍼링크에 유용합니다.</param>
        <param name="PRIORVALUE">PRIORVALUE(field)</param>
        <param name="PRIORVALUE_DESCR">필드의 이전 값을 반환합니다.</param>
        <param name="ISCHANGED">ISCHANGED(field)</param>
        <param name="ISCHANGED_DESCR">필드 값이 이전 값과 다른지 확인하고 값이 다른 경우 TRUE를 반환합니다.  그렇지 않으면 FALSE를 반환합니다.</param>
        <param name="ISNEW">ISNEW()</param>
        <param name="ISNEW_DESCR">레코드가 새 레코드인지 확인하고 그런 경우 TRUE를 반환합니다.  그렇지 않으면 FALSE를 반환합니다.</param>
        <param name="ISCLONE">ISCLONE()</param>
        <param name="ISCLONE_DESCR">레코드가 다른 레코드의 복제본인지 확인하고 복제본인 경우 TRUE를 반환합니다.  그렇지 않으면 FALSE를 반환합니다.</param>
        <param name="SUBSTITUTE">SUBSTITUTE(text, old_text, new_text) </param>
        <param name="SUBSTITUTE_DESCR">텍스트 문자열에서 이전 텍스트를 새 텍스트로 대체합니다. 텍스트 문자열에서 특정 텍스트를 교체하려면 SUBSTITUTE를 사용하십시오.</param>
        <param name="ISNUMBER">ISNUMBER(Text)</param>
        <param name="ISNUMBER_DESCR">텍스트 값이 숫자인 경우 TRUE를 반환합니다. 그렇지 않은 경우 FALSE를 반환합니다.</param>
        <param name="REGEX">REGEX(Text, RegEx_Text)</param>
        <param name="REGEX_DESCR">텍스트가 정규식 RegEx_Text와 일치할 경우 TRUE를 반환합니다. 그렇지 않은 경우 FALSE를 반환합니다.</param>
        <param name="DISTANCE">DISTANCE(location, location, unit)</param>
        <param name="DISTANCE_DESCR">제공된 유닛을 사용하여 두 위치 간의 거리를 반환합니다.</param>
        <param name="GEOLOCATION">GEOLOCATION(latitude, longitude)</param>
        <param name="GEOLOCATION_DESCR">제공된 위도와 경로를 기반으로 위치를 반환합니다.</param>

        <param name="LPAD">LPAD(text, padded_length [, pad_string])</param>
        <param name="LPAD_DESCR">길이가 padded_length가 되도록 값의 왼쪽을 공백 또는 선택적 패드 문자열로 채웁니다.</param>
        <param name="RPAD">RPAD(text, padded_length [, pad_string])</param>
        <param name="RPAD_DESCR">길이가 padded_length가 되도록 값의 오른쪽을 공백 또는 선택적 패드 문자열로 채웁니다.</param>
        <param name="LOWER">LOWER(text)</param>
        <param name="LOWER_DESCR">값의 모든 문자를 소문자로 변환합니다.</param>
        <param name="UPPER">UPPER(text)</param>
        <param name="UPPER_DESCR">값의 모든 문자를 대문자로 변환합니다.</param>

        <param name="URLENCODE">URLENCODE(text)</param>
        <param name="URLENCODE_DESCR">URL에 사용할 수 있도록 텍스트를 인코딩하고 필드 값을 병합합니다.</param>
        <param name="HTMLENCODE">HTMLENCODE(text)</param>
        <param name="HTMLENCODE_DESCR">HTML에 사용할 수 있도록 텍스트를 인코딩하고 필드 값을 병합합니다.</param>
        <param name="JSENCODE">JSENCODE(text)</param>
        <param name="JSENCODE_DESCR">JavaScript에 사용할 수 있도록 텍스트를 인코딩하고 필드 값을 병합합니다.</param>
        <param name="JSINHTMLENCODE">JSINHTMLENCODE(text)</param>
        <param name="JSINHTMLENCODE_DESCR">HTML 태그에 있는 JavaScript에 사용할 수 있도록 텍스트를 인코딩하고 필드 값을 병합합니다.</param>
        <param name="CASESAFEID">CASESAFEID(id)</param>
        <param name="CASESAFEID_DESCR">15자 ID를 대/소문자를 구분하지 않는 18자 ID로 변환</param>

        <param name="ADDMONTHS">ADDMONTHS(date,num)</param>
        <param name="ADDMONTHS_DESCR">date가 월의 마지막 날인 경우 월의 마지막 날짜를 사용하거나 일수가 더 적은 num개월을 추가하여 date에 num개월을 추가합니다.</param>
        <param name="WEEKDAY">WEEKDAY(date)</param>
        <param name="WEEKDAY_DESCR">일요일에 1, 월요일에 2, ... 토요일에 7을 사용하여 해당 일자의 요일을 반환합니다.</param>

        <param name="UNIXTIMESTAMP">UNIXTIMESTAMP(date/time)</param>
        <param name="UNIXTIMESTAMP_DESCR">지정된 날짜에 대해 1970년 1월 1일 이후 시간(초) 또는 하루 중 시간(초)를 반환합니다.</param>
        <param name="FROMUNIXTIME">FROMUNIXTIME(number)</param>
        <param name="FROMUNIXTIME_DESCR">지정된 숫자를 1970년 1월 1일 이후 경과된 시간(초)로 나타내는 날짜/시간을 반환합니다.</param>

        <param name="ISOWEEK">ISOWEEK(date)</param>
        <param name="ISOWEEK_DESCR">첫 번째 주가 월요일에 시작하도록 지정된 날짜(1~53)의 ISO 8601 주 번호를 반환합니다.</param>
        <param name="ISOYEAR">ISOYEAR(date)</param>
        <param name="ISOYEAR_DESCR">첫 번째 날이 월요일이 되도록 지정된 날짜에 대한 ISO 8601 주 번호 4자리 연도를 반환합니다.</param>
        <param name="DAYOFYEAR">DAYOFYEAR(date)</param>
        <param name="DAYOFYEAR_DESCR">달력 연도의 날짜를 반환합니다(1~366).</param>

        <param name="INITCAP">INITCAP(text)</param>
        <param name="INITCAP_DESCR">각 단어의 첫 번째 문자가 대문자인 텍스트를 소문자로 반환합니다.</param>

        <param name="CHR">CHR(number)</param>
        <param name="CHR_DESCR">첫 번째 문자의 코드 포인트가 주어진 숫자인 문자열을 반환합니다.</param>
        <param name="ASCII">CHR(text)</param>
        <param name="ASCII_DESCR">주어진 문자열의 첫 번째 코드 포인트를 숫자로 반환합니다.</param>

        <param name="FORMATCURRENCY">FORMATCURRENCY(currencyisocode, number)</param>
        <param name="FORMATCURRENCY_DESCR">주어진 통화 코드의 스케일을 사용해 해당 코드를 추가하여 주어진 숫자를 현재 형식으로 지정합니다.</param>

        <!-- Internal only.  Doesn't have to be translated-->
        <param name="FORMAT_ADDRESS">FORMAT_ADDRESS(street,city,state,zip,country[,lineSep])</param>
        <param name="FORMAT_ADDRESS_DESCR">Format the address in mailing format using the line separator provided if necessary.</param>
        <param name="FORMAT_ADDRESS2">FORMAT_ADDRESS2(street1,street2,city,state,zip,country[,lineSep])</param>
        <param name="FORMAT_ADDRESS2_DESCR">Format the address with two street lines in mailing format using the line separator provided if necessary.</param>
    </section>
</iniFile>
