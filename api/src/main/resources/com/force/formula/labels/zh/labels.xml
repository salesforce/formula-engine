<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE iniFile SYSTEM "labels.dtd">
<iniFile>
    <section name="Formula_General">
        <param name="BlankFieldHandlingTitle">空白字段处理</param>
        <param name="BlankFields">空白字段</param>
        <param name="BlankFieldHandlingDescr">如果您的公式引用了任何数字、货币和百分比字段，请指定当这些字段值为空时如何处理公式输出。</param>
        <param name="TreatBlanksAsZeros">将空白字段视为零</param>
        <param name="TreatBlanksAsNull">将空白字段视为空白</param>
        <param name="DisabledFormula">删除字段时此公式将被禁用。编辑并保存该字段以便重新启用公式。</param>
        <param name="MoreHelpOnFunction">有关此函数的帮助</param>
        <param name="100ValidationRuleSamples">实用的验证规则示例</param>
        <param name="UsingFunctions"><![CDATA[运算符和函数]]></param>
        <param name="ResourcesOnCRMSuccess">successforce.com 上的资源</param>
        <param name="ResourcesOnCRMCommunity">CRM 社区资源</param>
        <param name="QuickReferenceGuide">公式字段快速参考指南。</param>
        <param name="SimpleFormula">简单公式</param>
        <param name="AdvancedFormula">高级公式</param>
        <param name="FormulaEditorTitle">公式编辑器</param>   <!-- aliased across labels; do not change -->
        <param name="AddToFormula">插入所选函数</param>
        <param name="Functions">函数</param>
        <param name="Operators">运算符</param>
        <param name="ShowEditor">显示公式编辑器</param>
        <param name="HideEditor">隐藏公式编辑器</param>
        <param name="StandardFields">{0}标准字段</param>
        <param name="CustomFields">{0}自定义字段</param>   <!-- aliased across labels; do not change -->
        <param name="StandardFields_NoContext">标准字段</param>   <!-- aliased across labels; do not change -->
        <param name="InvalidFields">字段 {0} 无法访问。请检查公式引用的所有字段。</param>
        <param name="PolymorphicFieldLabel">{0} ({1})</param> <!-- {0} is the label for the field, {1} is the label for the domain it spans to -->
        <param name="SObjectRow">SObject 记录</param> <!-- Added primarily for Flow Triggers -->
        <param name="SObjectRowField">* SObject 记录 ({0})</param> <!-- Added primarily for Flow Triggers, {0} is entity type -->
        <param name="JSDetected">JavaScript 是安全漏洞，因此此超链接不允许。请向管理员寻求帮助。</param>
    </section>
    <section name="FormulaFieldExceptionMessages">
        <param name="WrongArgumentTypeException">{0} 参数类型错误。预期{1}，却收到{2}</param>
        <param name="WrongNumberOfArgumentsException">{0} 的参数数量错误。预期{1}，却收到{2}</param>
        <param name="WrongExpressionTypeException">公式结果为数据类型 ({1})，与期望的数据类型 ({0}) 不兼容。</param>
        <param name="IllegalArgumentTypeException">{0} 的参数类型错误。 </param>
        <param name="IllegalArgumentValueException_JavascriptNotAllowed">针对 {0} 参数值不正确。不允许 Javascript。</param> <!--  {0} is the name of a function/operator (like "function HYPERLINK()") -->
        <param name="InvalidFieldReferenceException">字段 {0} 不存在。检查拼写。</param>
        <param name="InvalidDomainReferenceException">{1} 对于 {0} 字段来说是无效对象类型。检查拼写。</param>
        <param name="InvalidFunctionReferenceException">未知函数 {0}。检查拼写。</param>
        <param name="InvalidFunctionReferenceForFunctionException">{0}功能不能引用 {1} 字段。</param>
        <param name="UnsupportedTypeException">您通过以下字段引用了名为的 "{0}" 不受支持的字段类型：{1}</param>
        <param name="UnsupportedTypeException_ENCRYPTED">您通过以下字段引用了名为 &quot;{0} (已加密)&quot; 的不受支持的字段类型：{1}</param>
        <param name="UnsupportedTypeException_ISPICKVAL">字段 {0} 是一个选项列表字段。只在某些功能中支持选项字段。&lt;a href="{1}"&gt;了解详细信息&lt;/a&gt;</param>
        <param name="UnsupportedTypeException_ISMULTIPICKVAL">字段 {0} 是一个多选选项列表字段。只在某些功能中支持多选选项字段。&lt;a href="{1}"&gt;了解详细信息&lt;/a&gt;</param>
        <param name="FormulaParseException">语法错误</param>
        <param name="FormulaParseException_DETAILED">语法错误。缺少 {2}</param>
        <param name="FormulaParseException_DETAILEDWITHTOKEN">语法错误。已找到 "{2}"</param>
        <param name="FormulaParseException_DETAILEDWITHTEXT">语法错误。  ''{2}''</param>
        <param name="FormulaParseException_DETAILEDWITHEXTRA">语法错误。多余的 {0}</param>
        <param name="FormulaParseException_UNHANDLED">遇到意料之外的异常错误 {0}</param>
        <param name="NestedFormulaException">引用公式 {0} 中的错误，{1}</param>
        <param name="FormulaTooLongException">公式太长（{0} 个字符）。最长为 {1} 个字符。</param>
        <param name="SQLTooBigException">编译的公式太长，无法执行（{0} 个字符）。最多 {1} 个字符</param>
        <param name="JSTooBigException">编译 JavaScript 公式的长度（{0} 个字符）超过 {1} 字符的限制。要了解更多信息，在 Salesforce 帮助中搜索&quot;减少公式大小&quot;。</param>
        <param name="JSTooBigException_INCOMPLETE">JavaScript 公式无法编译，因为公式大小（大于 {0} 个字符）超过 {1} 字符的限制。要了解更多信息，在 Salesforce 帮助中搜索&quot;减少公式大小&quot;。</param>
        <param name="FunctionNotAllowedException">函数 {0} 可能不能用于此类型的公式</param>
        <param name="WrongMergeFieldTypeException">{0} 参数错误。预期的 {1} 字段引用。</param>
        <param name="WrongArgumentException">{0} 参数值错误。预期{1}，却收到{2}</param>
        <param name="WrongArgumentException_General">{0} 的参数不正确。</param>
        <param name="FunctionIncludesWrongArgumentException">错误的功能 INCLUDES() 参数。此多选选项列表字段的“文本文字”必须是有效值。</param>
        <param name="RegexTooComplicatedException">正则表达式运行时间已超过：{0}</param>
        <param name="InvalidNumericValueException">值 "{0}" 不是一个有效地数字。</param>
        <param name="InvalidValueException_ForOperator"><![CDATA[值“{0}”对运算符“{1}”无效。]]></param>
        <param name="SpanningRelationshipLimit_remove">您必须移除至少 {0} 个关系，才可以保存此 {1}。</param>
        <param name="SpanningRelationshipLimit_thisFormula">此 {0} 中引用的相关对象：</param>
        <param name="EndOfFormula">公式结束</param>
        <param name="FieldReference">field name</param>
        <param name="Evaluation_Exception">#错误！</param>
        <param name="Overflow_Exception">#太大！</param>
        <param name="MaxEncodedSizeLimit">编码的公式太长（{0} 个字符）。值不能超过 {1}。</param>
        <param name="StaticResourceNotFound">名为 {0} 的静态资源不存在。检查拼写。</param>
        <param name="FilterNotFound">名称为 {0} 的筛选器不存在。检查拼写。</param>
        <param name="FilterFoundInaccessibleEntity">存在名称为 {0} 的筛选器，但 {1} 不可访问。</param>
        <param name="RelatedObjectReference">相关对象引用</param>
        <param name="InvalidSubscriptBase">类型的表达式 {0} 无法加下标。</param>
        <param name="FieldReferenceCycleDetectedException">公式无法使用直接或间接引用其自身的另一个公式字段。 {1}</param>
        <param name="EncodedByteLengthTooLong">字符串大小为 {0} 个位元组但不能超过 {1} 个位元组。</param>
        <!--  these are used in exception messages to describe formula element -->
        <param name="function">函数 "{0}()"</param>
        <param name="operator">运算符 "{0}"</param>
        <param name="subscript">订购</param>
        <param name="detailLookup">({0})</param>
        <param name="detailLookupAbbr">{0}+{1}</param>
        <param name="detailLookupMore">(...)</param>
    </section>
    <section name="FormulaFieldExceptionMessages_runtime">
        <param name="InvalidFieldReferenceException">无法访问下面的字段：{0}。请与您的管理员联系。</param>
        <param name="MissingFieldValueException">字段没有值：{0}</param>
    </section>
    <section name="FormulaFieldExceptionDataTypes">
        <param name="java.lang.String">文本</param>
        <param name="java.math.BigDecimal">数字</param>
        <param name="java.lang.Integer">数字</param>
        <param name="java.util.Date">日期</param>
        <param name="com.force.formula.FormulaDateTime">日期时间</param>
        <param name="java.lang.Boolean">布尔值</param>
        <param name="common.config.currency.CurrencyData">币种</param>
        <param name="com.force.formula.commands.ConstantNull">空值</param>
        <param name="com.force.formula.commands.ConstantString">文本文字</param>
        <param name="com.force.formula.commands.RuntimeType">运行时间验证类型</param>
        <param name="java.util.Calendar">日期时间</param>
        <param name="shared.xml.soap.DateOnlyWrapper">日期</param>
    </section>
    <section name="FormulaFieldHelpMessage">
        <param name="ExampleString">使用双引号，包括文本和选项列表值 API 名称 </param>
        <param name="ExampleStringValue">(&quot;the_text&quot;)</param>
        <param name="ExampleNumber">包含数字，没有引号 </param>
        <param name="ExampleNumberValue">(25)</param>
        <param name="ExamplePercent">将百分比显示为小数</param>
        <param name="ExamplePercentValue">(0.10)</param>
        <param name="ExampleDate">以标准格式表示日期计算</param>
        <param name="ExampleDateValue">(Today() + 7)</param>
        <param name="Use">使用</param>   <!-- aliased across labels; do not change -->
        <param name="FormulaSyntax">公式语法：</param>
        <param name="Eg">例如，</param>
        <param name="PicklistToolTip">默认值会覆盖在值中定义的默认设置。如果默认值公式未分解为选项列表中的有效值，则使用值级别的默认设置。</param>
    </section>
    <section name="FormulaFieldFunctionCatagory">
        <param name="DateTime"><![CDATA[日期和时间]]></param>
        <param name="Logical">逻辑</param>
        <param name="Math">数学</param>
        <param name="Text">文本</param>
        <param name="ReportSummaries">摘要</param>
        <param name="Advanced">高级</param>   <!-- aliased across labels; do not change -->
    </section>
    <section name="FormulaFieldOperators">
        <param name="PLUS">加</param> <!-- This is used in the context of arithmetic. i.e. 1 + 1 = 2 -->
        <param name="MINUS">减</param>
        <param name="STAR">乘</param>
        <param name="DIVIDE">除</param>   <!-- aliased across labels; do not change -->
        <param name="LPAREN">左括号</param>
        <param name="RPAREN">右括号</param>
        <param name="EQUAL">等于</param>
        <param name="NE">不等于</param>
        <param name="LT">小于</param>
        <param name="GT">大于</param>
        <param name="LE">小于或等于</param>
        <param name="GE">大于或等于</param>
        <param name="CARET">乘方</param>
        <param name="AMPERSAND">串联</param>
        <param name="CONTAINS">包含</param>
        <param name="AND">和</param>
        <param name="OR">或</param>   <!-- aliased across labels; do not change -->
    </section>
    <section name="FormulaFieldFunctions">
        <param name="functions_title">函数</param>
        <param name="BR">BR()</param>
        <param name="BR_DESCR">在字符串公式中插入 HTML 断行标记</param>
        <param name="DATE">DATE(year,month,day)</param>
        <param name="DATE_DESCR">通过年、月、日创建日期</param>
        <param name="DATEVALUE">DATEVALUE(expression)</param>
        <param name="DATEVALUE_DESCR">从日期时间或文本表示方式创建日期</param>
        <param name="DATETIMEVALUE">DATETIMEVALUE(expression)</param>
        <param name="DATETIMEVALUE_DESCR">返回年份、月份、日和 GMT 时间值</param>
        <param name="DAYS360">DAYS360(date1,date2)</param>
        <param name="DAYS360_DESCR">返回基于 360 天为一年的两个日期之间的天数</param>
        <param name="MONTH">MONTH(date)</param>
        <param name="MONTH_DESCR">返回月份，是 1（一月）与 12（十二月）之间的一个数字</param>
        <param name="NOW">NOW()</param>
        <param name="NOW_DESCR">返回表示当前时刻的日期时间</param>
        <param name="TIMENOW">TIMENOW()</param>
        <param name="TIMENOW_DESCR">返回表示当前时刻的时间</param>
        <param name="TIMEVALUE">TIMEVALUE()</param>
        <param name="TIMEVALUE_DESCR">返回时间 </param>
        <param name="HOUR">HOUR()</param>
        <param name="HOUR_DESCR">返回一天的小时数 </param>
        <param name="MINUTE">MINUTE()</param>
        <param name="MINUTE_DESCR">返回一天的分钟数 </param>
        <param name="SECOND">SECOND()</param>
        <param name="SECOND_DESCR">返回一天的秒数 </param>
        <param name="MILLISECOND">MILLISECOND()</param>
        <param name="MILLISECOND_DESCR">返回一天的微秒数 </param>
        <param name="TODAY">TODAY()</param>
        <param name="TODAY_DESCR">返回当前日期</param>
        <param name="WEEKDAY">WEEKDAY(date,return_type)</param>
        <param name="WEEKDAY_DESCR">返回 1 与 7 之间的一个数字，表示一个星期的某一天</param>
        <param name="YEAR">YEAR(date)</param>
        <param name="YEAR_DESCR">返回日期的年份，是 1900 与 9999 之间的一个数字</param>
        <param name="DAY">DAY(date)</param>
        <param name="DAY_DESCR">返回一个月中的某一天，是 1 与 31 之间的一个数字</param>
        <param name="ISNULL">ISNULL(expression)</param>
        <param name="ISNULL_DESCR">检查表达式是否为空以及是否返回 TRUE 或 FALSE</param>
        <param name="ISBLANK">ISBLANK(expression)</param>
        <param name="ISBLANK_DESCR">检查表达式是否为空以及是否返回 TRUE 或 FALSE</param>
        <param name="AND">AND(logical1,logical2,...)</param>
        <param name="AND_DESCR">检查是否所有参数均为真，如果所有参数均为真则返回 TRUE</param>
        <param name="CASE">CASE(expression, value1, result1, value2, result2,...,else_result)</param>
        <param name="CASE_DESCR">根据一系列值检查表达式。如果表达式比较等于任何值，则返回相应结果。如果不等于任何值，则返回 else（其他）结果</param>
        <param name="IF">IF(logical_test, value_if_true, value_if_false)</param>
        <param name="IF_DESCR">检查条件是否为真，如果条件为 TRUE 则返回一个值；如果条件为 FALSE 则返回另一个值。</param>
        <param name="NOT">NOT(logical)</param>
        <param name="NOT_DESCR">将 FALSE 改为 TRUE 或将 TRUE 改为 FALSE</param>
        <param name="OR">OR(logical1,logical2,...)</param>
        <param name="OR_DESCR">检查任何参数是否为真，并返回 TRUE 或 FALSE。仅当所有参数均为假时才返回 FALSE</param>
        <param name="ABS">ABS(number)</param>
        <param name="ABS_DESCR">返回数值的绝对值（不含正负号的数字）</param>
        <param name="CEILING">CEILING(number)</param>
        <param name="CEILING_DESCR">将数字向上四舍五入为最接近的整数；如果是负数，避免四舍五入为零。</param>
        <param name="MCEILING">MCEILING(number)</param>
        <param name="MCEILING_DESCR">将数字向上四舍五入为最接近的整数；如果是负数，四舍五入为零。</param>
        <param name="EXP">EXP(number)</param>
        <param name="EXP_DESCR">返回给定数字的以科学计数法表示的指数值</param>
        <param name="FLOOR">FLOOR(number)</param>
        <param name="FLOOR_DESCR">将数值舍入（趋于 0）为小于等于其本身的最大整数</param>
        <param name="MFLOOR">MFLOOR(number)</param>
        <param name="MFLOOR_DESCR">将数字向下四舍五入为最接近的整数；如果是负数，避免四舍五入为零。</param>
        <param name="INT">INT(number)</param>
        <param name="INT_DESCR">将数值舍入为小于等于其本身的最大整数</param>
        <param name="LN">LN(number)</param>
        <param name="LN_DESCR">返回数值的自然对数LOG(number)</param>
        <param name="LOG">LOG（number）</param>
        <param name="LOG_DESCR">返回 n 的以 10 为底的对数</param>
        <param name="MOD">MOD(number,divisor)</param>
        <param name="MOD_DESCR">返回一个数值除以除数后的余数</param>
        <param name="MAX">MAX(number,number,...)</param>
        <param name="MAX_DESCR">返回所有参数的最大值</param>
        <param name="MIN">MIN(number,number,...)</param>
        <param name="MIN_DESCR">返回所有参数的最小值</param>
        <param name="NULLVALUE">NULLVALUE(expression, substitute_expression)</param>
        <param name="NULLVALUE_DESCR">检查表达式是否为空，以及如果为空是否返回 substitute_expression。如果表达式不为空，返回原始表达式值。</param>
        <param name="BLANKVALUE">BLANKVALUE(expression, substitute_expression)</param>
        <param name="BLANKVALUE_DESCR">检查表达式是否为空，以及如果为空是否返回 substitute_expression。如果表达式不为空，返回原始表达式值。</param>
        <param name="ROUND">ROUND(number,num_digits)</param>
        <param name="ROUND_DESCR">按指定的位数舍入数值</param>
        <param name="TRUNC">TRUNC(number,num_digits)</param>
        <param name="TRUNC_DESCR">将数值截断为指定的位数</param>
        <param name="SQRT">SQRT(number)</param>
        <param name="SQRT_DESCR">返回数值的正平方根</param>
        <param name="BEGINS">BEGINS(text, compare_text)</param>
        <param name="BEGINS_DESCR">检查文本是否以特定字符开头，如果是则返回 TRUE。否则返回 FALSE。</param>
        <param name="CONTAINS">CONTAINS(text, compare_text)</param>
        <param name="CONTAINS_DESCR">检查文本是否包含特定字符，如果是则返回 TRUE。否则返回 FALSE。</param>
        <param name="LEFT">LEFT(text, num_chars)</param>
        <param name="LEFT_DESCR">返回从文本字符串左边算起的指定数量的字符</param>
        <param name="LEN">LEN(text)</param>
        <param name="LEN_DESCR">返回一个文本字符串所含的字符数</param>
        <param name="MID">MID(text, start_num, num_chars)</param>
        <param name="MID_DESCR">给定字符串的起始位置和长度，返回字符串中间的字符</param>
        <param name="FIND">FIND(search_text, text [, start_num])</param>
        <param name="FIND_DESCR">返回文本中 search_text 字符串的位置</param>
        <param name="PLVALUE">PLVALUE(field, text)</param>
        <param name="PLVALUE_DESCR">将文本字符串转换为选项列表值</param>
        <param name="RIGHT">RIGHT(text, num_chars)</param>
        <param name="RIGHT_DESCR">返回从文本字符串右边算起的指定数量的字符</param>
        <param name="TEXT">TEXT(value)</param>
        <param name="TEXT_DESCR">将一个值转换为使用标准显示格式的文本</param>
        <param name="TRIM">TRIM(text)</param>
        <param name="TRIM_DESCR">从文本字符串中删除所有空格，单词之间的单个空格除外</param>
        <param name="HYPERLINK">HYPERLINK(url, friendly_name [, target])</param>
        <param name="HYPERLINK_DESCR">创建超链接</param>
        <param name="IMAGE">IMAGE(image_url, alternate_text [, height, width])</param>
        <param name="IMAGE_DESCR">插入图像</param>
        <param name="VALUE">VALUE(text)</param>
        <param name="VALUE_DESCR">将表示数值的文本字符串转换为数值</param>
        <param name="ISPICKVAL">ISPICKVAL(picklist_field, text_literal)</param>
        <param name="ISPICKVAL_DESCR">检查选项列表字段的值是否等于一个字符串文字</param>
        <param name="INCLUDES">INCLUDES(multiselect_picklist_field, text_literal)</param>
        <param name="INCLUDES_DESCR">确定多选选项列表字段中的任何值是否等于您指定的文本文字。</param>
        <param name="GETSESSIONID">GETSESSIONID()</param>
        <param name="GETSESSIONID_DESCR">返回当前会话 ID。此函数可能对指向使用 salesforce.com 证书进行身份验证的其他应用程序的超链接有用</param>
        <param name="PRIORVALUE">PRIORVALUE(field)</param>
        <param name="PRIORVALUE_DESCR">返回字段的上一个值</param>
        <param name="ISCHANGED">ISCHANGED(field)</param>
        <param name="ISCHANGED_DESCR">检查字段值是否不同于上一个值，如果不同，则返回 TRUE。否则返回 FALSE。</param>
        <param name="ISNEW">ISNEW()</param>
        <param name="ISNEW_DESCR">检查记录是否是新的，如果是新的，则返回 TRUE。否则返回 FALSE。</param>
        <param name="ISCLONE">ISCLONE()</param>
        <param name="ISCLONE_DESCR">查看记录是否为另一个记录的副本，且如果是副本则返回 TRUE。否则返回 FALSE。</param>
        <param name="SUBSTITUTE">SUBSTITUTE(text, old_text, new_text) </param>
        <param name="SUBSTITUTE_DESCR">用 new_text 替换文本字符串中的 old_text。要替换文本字符串中的特定文本时，使用 SUBSTITUTE</param>
        <param name="ISNUMBER">ISNUMBER(Text)</param>
        <param name="ISNUMBER_DESCR">文本值为数字时，返回 TRUE。反之，返回 FALSE。</param>
        <param name="REGEX">REGEX(Text, RegEx_Text)</param>
        <param name="REGEX_DESCR">如果文本与正则表达式 egEx_Text 相匹配，则返回 TRUE。反之，返回 FALSE。</param>
        <param name="DISTANCE">DISTANCE(location, location, unit)</param>
        <param name="DISTANCE_DESCR">返回两个位置之间的距离，以所提供的单位表示。</param>
        <param name="GEOLOCATION">地理定位（纬度，经度）</param>
        <param name="GEOLOCATION_DESCR">根据所提供的纬度和经度，返回位置。</param>

        <param name="LPAD">LPAD(text, padded_length [, pad_string])</param>
        <param name="LPAD_DESCR">使用空格或可选填充字符串填充在该值的左侧以使其长度达到 padded_length</param>
        <param name="RPAD">RPAD(text, padded_length [, pad_string])</param>
        <param name="RPAD_DESCR">使用空格或可选填充字符串填充在该值的右侧以使其长度达到 padded_length</param>
        <param name="LOWER">LOWER(text)</param>
        <param name="LOWER_DESCR">将该值中的所有字母转换为小写字母</param>
        <param name="UPPER">UPPER(text)</param>
        <param name="UPPER_DESCR">将该值中的所有字母转换为大写字母</param>

        <param name="URLENCODE">URLENCODE(text)</param>
        <param name="URLENCODE_DESCR">编码文本和合并字段值用于 URL</param>
        <param name="HTMLENCODE">HTMLENCODE(text)</param>
        <param name="HTMLENCODE_DESCR">编码文本和合并字段值用于 HTML</param>
        <param name="JSENCODE">JSENCODE(text)</param>
        <param name="JSENCODE_DESCR">编码文本和合并字段值用于 JavaScript</param>
        <param name="JSINHTMLENCODE">JSINHTMLENCODE(text)</param>
        <param name="JSINHTMLENCODE_DESCR">编码文本和合并字段值用于 HTML 标记内的 JavaScript</param>
        <param name="CASESAFEID">CASESAFEID(id)</param>
        <param name="CASESAFEID_DESCR">将 15 个字符的 ID 转换为区分字母大小写的 15 个字符的 ID</param>

        <param name="ADDMONTHS">ADDMONTHS(date,num)</param>
        <param name="ADDMONTHS_DESCR">如果日期是当月最后一天或添加的 num 月天数较少，使用当月最后一个日期，将 num 月添加到日期。</param>
        <param name="WEEKDAY">WEEKDAY(date)</param>
        <param name="WEEKDAY_DESCR">返回指定日期是周几，用 1 表示周日，2 表示周一，以此类推，7 表示周六。</param>

        <param name="UNIXTIMESTAMP">UNIXTIMESTAMP(date/time)</param>
        <param name="UNIXTIMESTAMP_DESCR">返回指定日期自 1970 年 1 月 1 日以后的秒数，或一天之内的秒数。</param>
        <param name="FROMUNIXTIME">FROMUNIXTIME(number)</param>
        <param name="FROMUNIXTIME_DESCR">返回表示指定数字的日期时间，即 1970 年 1 月 1 日以后经过的秒数。</param>

        <param name="ISOWEEK">ISOWEEK(date)</param>
        <param name="ISOWEEK_DESCR">返回指定日期的 ISO 8601 周数（从 1 至 53），以便第一周从周一开始。</param>
        <param name="ISOYEAR">ISOYEAR(date)</param>
        <param name="ISOYEAR_DESCR">返回指定日期的 ISO 8601 周编号 4 位数字的年份，以便第一天是周一。</param>
        <param name="DAYOFYEAR">DAYOFYEAR(date)</param>
        <param name="DAYOFYEAR_DESCR">返回日历年的具体天（从 1 到 366）。</param>

        <param name="INITCAP">INITCAP(text)</param>
        <param name="INITCAP_DESCR">使用小写字母格式返回文本，每个单词的第一个字符使用大写字母。</param>

        <param name="CHR">CHR(number)</param>
        <param name="CHR_DESCR">返回字符串，其中第一个字符的码位为指定数字。</param>
        <param name="ASCII">CHR(text)</param>
        <param name="ASCII_DESCR">将指定字符串中的第一个字符的码位返回为数字。</param>

        <param name="FORMATCURRENCY">FORMATCURRENCY(currencyisocode, number)</param>
        <param name="FORMATCURRENCY_DESCR">使用指定货币代码的比例，将指定数字格式化为当前货币，并在前面附上该代码。</param>

        <!-- Internal only.  Doesn't have to be translated-->
        <param name="FORMAT_ADDRESS">FORMAT_ADDRESS(street,city,state,zip,country[,lineSep])</param>
        <param name="FORMAT_ADDRESS_DESCR">Format the address in mailing format using the line separator provided if necessary.</param>
        <param name="FORMAT_ADDRESS2">FORMAT_ADDRESS2(street1,street2,city,state,zip,country[,lineSep])</param>
        <param name="FORMAT_ADDRESS2_DESCR">Format the address with two street lines in mailing format using the line separator provided if necessary.</param>
    </section>
</iniFile>
