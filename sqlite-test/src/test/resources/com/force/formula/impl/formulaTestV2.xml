<?xml version="1.0" encoding="UTF-8"?>
<formula-test xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="formulaTestV2.xsd">
   <testcase testName="testDateTimeValueWithInvalidString"
             fieldName="testDateTimeValueWithInvalidString"
             dataType="DateOnly"
             formula="DATETIMEVALUE(&#34;sample &#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
   </testcase>
   <testcase testName="testDateTimeValueWithValidString"
             fieldName="testDateTimeValueWithValidString"
             dataType="DateOnly"
             formula="DATETIMEVALUE(&#34;2005-11-15 17:00:00 &#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2005-11-15 00:00:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2005-11-15 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateTimeValueWithValidInValid"
             fieldName="testDateTimeValueWithValidInValid"
             dataType="DateOnly"
             formula="DATETIMEVALUE(dateString__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09"
                expectedOutput="Sat Jan 29 00:00:09 GMT 2011,
					2011-01-29 00:00:09.0,
					Sat Jan 29 00:00:09 GMT 2011,
					2011-01-29 00:00:09.0"/>
      <testData input="2011-01-9 00:00:09"
                expectedOutput="Sun Jan 09 00:00:09 GMT 2011,
					2011-01-09 00:00:00.0,
					Sun Jan 09 00:00:09 GMT 2011,
					2011-01-09 00:00:00.0"/>
      <testData input="2011-1-29 00:00:00"
                expectedOutput="Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0,
					Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0"/>
      <testData input="2011-1-1 00:00:00"
                expectedOutput="Sat Jan 01 00:00:00 GMT 2011,
					2011-01-01 00:00:00.0,
					Sat Jan 01 00:00:00 GMT 2011,
					2011-01-01 00:00:00.0"/>
      <testData input="2011-01-1 1:00:00"
                expectedOutput="Sat Jan 01 01:00:00 GMT 2011,
					2011-01-01 00:00:00.0,
					Sat Jan 01 01:00:00 GMT 2011,
					2011-01-01 00:00:00.0"/>
      <testData input="2011-1-23 2:22:59"
                expectedOutput="Sun Jan 23 02:22:59 GMT 2011,
					2011-01-23 00:00:00.0,
					Sun Jan 23 02:22:59 GMT 2011,
					2011-01-23 00:00:00.0"/>
      <testData input="2012-2-7 5:22:33"
                expectedOutput="Tue Feb 07 05:22:33 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:22:33 GMT 2012,
					2012-02-07 00:00:00.0"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012-01-29 00:00:09.0,
					Error: com.force.formula.FormulaDateException,
					2012-01-29 00:00:09.0"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					Error: Error parsing date,
					Error: com.force.formula.FormulaDateException,
					Error: Error parsing date"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012-01-02 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2012-01-02 00:00:00.0"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012-01-02 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2012-01-02 00:00:00.0"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012-01-01 23:01:00.0,
					Error: com.force.formula.FormulaDateException,
					2012-01-01 23:01:00.0"/>
      <testData input="2012-01-01 23:59:59"
                expectedOutput="Sun Jan 01 23:59:59 GMT 2012,
					2012-01-01 23:59:59.0,
					Sun Jan 01 23:59:59 GMT 2012,
					2012-01-01 23:59:59.0"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012-11-03 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2012-11-03 00:00:00.0"/>
      <testData input="2012-02-07 5:2:33"
                expectedOutput="Tue Feb 07 05:02:33 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:02:33 GMT 2012,
					2012-02-07 00:00:00.0"/>
      <testData input="2012-02-07 5:22:3"
                expectedOutput="Tue Feb 07 05:22:03 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:22:03 GMT 2012,
					2012-02-07 00:00:00.0"/>
   </testcase>
   <testcase testName="testTimeValueWithValidString"
             fieldName="testTimeValueWithValidString"
             dataType="TimeOnly"
             formula="TIMEVALUE(&#34;10:40:55.666&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="10:40:55.666,
					10:40:55.666,
					10:40:55.666,
					10:40:55.666"/>
   </testcase>
   <testcase testName="testHourWithValidString"
             fieldName="testHourWithValidString"
             dataType="Double"
             formula="Hour(TIMEVALUE(&#34;10:40:55.666&#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="10,
					10,
					10,
					10"/>
   </testcase>
   <testcase testName="testMinuteWithValidString"
             fieldName="testMinuteWithValidString"
             dataType="Double"
             formula="Minute(TIMEVALUE(&#34;10:40:55.666&#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="40,
					40,
					40,
					40"/>
   </testcase>
   <testcase testName="testSecondWithValidString"
             fieldName="testSecondWithValidString"
             dataType="Double"
             formula="Second(TIMEVALUE(&#34;10:40:55.666&#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="55,
					55,
					55,
					55"/>
   </testcase>
   <testcase testName="testMillisecWithValidString"
             fieldName="testMillisecWithValidString"
             dataType="Double"
             formula="MilliSecond(TIMEVALUE(&#34;10:40:55.666&#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="666,
					666,
					666,
					666"/>
   </testcase>
   <testcase testName="testMillisecWithValidDateTimeString"
             fieldName="testMillisecWithValidDateTimeString"
             dataType="Double"
             formula="MilliSecond(TIMEVALUE(&#34;2015-03-17 17:00:00&#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
   </testcase>
   <testcase testName="testTimeValueWithValidInValid"
             fieldName="testTimeValueWithValidInValid"
             dataType="TimeOnly"
             formula="TimeValue(DATETIMEVALUE(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09"
                expectedOutput="00:00:09,
					00:00:09,
					00:00:09,
					00:00:09"/>
      <testData input="2011-01-9 00:00:09"
                expectedOutput="00:00:09,
					null,
					00:00:09,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="00:00,
					null,
					00:00,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="00:00,
					null,
					00:00,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="01:00,
					null,
					01:00,
					null"/>
      <testData input="2011-1-23 2:22:59"
                expectedOutput="02:22:59,
					null,
					02:22:59,
					null"/>
      <testData input="2012-2-7 5:22:33"
                expectedOutput="05:22:33,
					null,
					05:22:33,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					24:00:00,
					Error: com.force.formula.FormulaDateException,
					24:00:00"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59"
                expectedOutput="23:59:59,
					23:59:59,
					23:59:59,
					23:59:59"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33"
                expectedOutput="05:02:33,
					null,
					05:02:33,
					null"/>
      <testData input="2012-02-07 5:22:3"
                expectedOutput="05:22:03,
					null,
					05:22:03,
					null"/>
   </testcase>
   <testcase testName="testHourWithAddOperator"
             fieldName="testHourWithAddOperator"
             dataType="Double"
             formula="Hour(TIMEVALUE(&#34;10:40:55.666&#34;)+3600000)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="11,
					11,
					11,
					11"/>
   </testcase>
   <testcase testName="testAddTimeValueWithValidInValid"
             fieldName="testAddTimeValueWithValidInValid"
             dataType="TimeOnly"
             formula="TimeValue(dateString__c) + 7200000"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="12:34:55.666,
					12:34:55.666,
					12:34:55.666,
					12:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="01:56:45.898,
					01:56:45.898,
					01:56:45.898,
					01:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="03:14:23.345,
					03:14:23.345,
					03:14:23.345,
					03:14:23.345"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="02:00:29.345,
					02:00:29.345,
					02:00:29.345,
					02:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="02:00:00.789,
					02:00:00.789,
					02:00:00.789,
					02:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="02:00,
					02:00:00.000,
					02:00,
					02:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					02:12:56.123,
					Error: com.force.formula.FormulaDateException,
					02:12:56.123"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					03:14:23.345,
					Error: com.force.formula.FormulaDateException,
					03:14:23.345"/>
      <testData input="00:00:01.000"
                expectedOutput="02:00:01,
					02:00:01.000,
					02:00:01,
					02:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="01:59:59.999,
					01:59:59.999,
					01:59:59.999,
					01:59:59.999"/>
   </testcase>
   <testcase testName="testAddBigTimeValueWithValidInValid"
             fieldName="testAddBigTimeValueWithValidInValid"
             dataType="TimeOnly"
             formula="TimeValue(dateString__c) + 93600000"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="12:34:55.666,
					12:34:55.666,
					12:34:55.666,
					12:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="01:56:45.898,
					01:56:45.898,
					01:56:45.898,
					01:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="03:14:23.345,
					03:14:23.345,
					03:14:23.345,
					03:14:23.345"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="02:00:29.345,
					02:00:29.345,
					02:00:29.345,
					02:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="02:00:00.789,
					02:00:00.789,
					02:00:00.789,
					02:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="02:00,
					02:00:00.000,
					02:00,
					02:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					02:12:56.123,
					Error: com.force.formula.FormulaDateException,
					02:12:56.123"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					03:14:23.345,
					Error: com.force.formula.FormulaDateException,
					03:14:23.345"/>
      <testData input="00:00:01.000"
                expectedOutput="02:00:01,
					02:00:01.000,
					02:00:01,
					02:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="01:59:59.999,
					01:59:59.999,
					01:59:59.999,
					01:59:59.999"/>
   </testcase>
   <testcase testName="testSubtractTimeValueWithValidInValid"
             fieldName="testSubtractTimeValueWithValidInValid"
             dataType="TimeOnly"
             formula="TimeValue(dateString__c) - 7200000"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="08:34:55.666,
					08:34:55.666,
					08:34:55.666,
					08:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="21:56:45.898,
					21:56:45.898,
					21:56:45.898,
					21:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="Error: java.time.DateTimeException,
					23:14:23.345,
					Error: java.time.DateTimeException,
					23:14:23.345"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:29.345,
					Error: java.time.DateTimeException,
					22:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:00.789,
					Error: java.time.DateTimeException,
					22:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:00.000,
					Error: java.time.DateTimeException,
					22:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					22:12:56.123,
					Error: com.force.formula.FormulaDateException,
					22:12:56.123"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					23:14:23.345,
					Error: com.force.formula.FormulaDateException,
					23:14:23.345"/>
      <testData input="00:00:01.000"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:01.000,
					Error: java.time.DateTimeException,
					22:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="21:59:59.999,
					21:59:59.999,
					21:59:59.999,
					21:59:59.999"/>
   </testcase>
   <testcase testName="testSubtractBigTimeValue"
             fieldName="testSubtractBigTimeValue"
             dataType="TimeOnly"
             formula="TimeValue(dateString__c) - 180000000"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="Error: java.time.DateTimeException,
					08:34:55.666,
					Error: java.time.DateTimeException,
					08:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="Error: java.time.DateTimeException,
					21:56:45.898,
					Error: java.time.DateTimeException,
					21:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="Error: java.time.DateTimeException,
					23:14:23.345,
					Error: java.time.DateTimeException,
					23:14:23.345"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:29.345,
					Error: java.time.DateTimeException,
					22:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:00.789,
					Error: java.time.DateTimeException,
					22:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:00.000,
					Error: java.time.DateTimeException,
					22:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					22:12:56.123,
					Error: com.force.formula.FormulaDateException,
					22:12:56.123"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					23:14:23.345,
					Error: com.force.formula.FormulaDateException,
					23:14:23.345"/>
      <testData input="00:00:01.000"
                expectedOutput="Error: java.time.DateTimeException,
					22:00:01.000,
					Error: java.time.DateTimeException,
					22:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="Error: java.time.DateTimeException,
					21:59:59.999,
					Error: java.time.DateTimeException,
					21:59:59.999"/>
   </testcase>
   <testcase testName="testTextTimeValueWithValidInValid"
             fieldName="testTextTimeValueWithValidInValid"
             dataType="Text"
             formula="Text(TimeValue(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="10:34:55.666,
					10:34:55.666,
					10:34:55.666,
					10:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="23:56:45.898,
					23:56:45.898,
					23:56:45.898,
					23:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="01:14:23.345,
					01:14:23.345,
					01:14:23.345,
					01:14:23.345"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="00:00:29.345,
					00:00:29.345,
					00:00:29.345,
					00:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="00:00:00.789,
					00:00:00.789,
					00:00:00.789,
					00:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="00:00:00.000,
					00:00:00.000,
					00:00:00.000,
					00:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					24:12:56.123,
					Error: com.force.formula.FormulaDateException,
					24:12:56.123"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					01:14:23.346,
					Error: com.force.formula.FormulaDateException,
					01:14:23.346"/>
      <testData input="00:00:01.000"
                expectedOutput="00:00:01.000,
					00:00:01.000,
					00:00:01.000,
					00:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="23:59:59.999,
					23:59:59.999,
					23:59:59.999,
					23:59:59.999"/>
   </testcase>
   <testcase testName="testSecondValueWithValidInValid"
             fieldName="testSecondValueWithValidInValid"
             dataType="Double"
             formula="Second(TimeValue(DATETIMEVALUE(dateString__c)))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="59,
					null,
					59,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="33,
					null,
					33,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0,
					Error: com.force.formula.FormulaDateException,
					0"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="33,
					null,
					33,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="3,
					null,
					3,
					null"/>
   </testcase>
   <testcase testName="testMillisecondValueWithValidInValid"
             fieldName="testMilliecondValueWithValidInValid"
             dataType="Double"
             formula="MilliSecond(TimeValue(DATETIMEVALUE(dateString__c)))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="0,
					9,
					0,
					9"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0,
					Error: com.force.formula.FormulaDateException,
					0"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="0,
					59,
					0,
					59"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="0,
					null,
					0,
					null"/>
   </testcase>
   <testcase testName="testMinuteValueWithValidInValid"
             fieldName="testMinuteValueWithValidInValid"
             dataType="Double"
             formula="Minute(TimeValue(DATETIMEVALUE(dateString__c)))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="22,
					null,
					22,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="22,
					null,
					22,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0,
					Error: com.force.formula.FormulaDateException,
					0"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="2,
					null,
					2,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="22,
					null,
					22,
					null"/>
   </testcase>
   <testcase testName="testHourValueWithValidInValid"
             fieldName="testHourValueWithValidInValid"
             dataType="Double"
             formula="Hour(TimeValue(DATETIMEVALUE(dateString__c)))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="0,
					null,
					0,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="1,
					null,
					1,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="2,
					null,
					2,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="5,
					null,
					5,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					24,
					Error: com.force.formula.FormulaDateException,
					24"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="23,
					23,
					23,
					23"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="5,
					null,
					5,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="5,
					null,
					5,
					null"/>
   </testcase>
   <testcase testName="testUnixTimestampWithDateTime"
             fieldName="testUnixTimestampWithDateTime"
             dataType="Double"
             formula="UnixTimestamp(DATETIMEVALUE(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09"
                expectedOutput="1296259209,
					1296259209,
					1296259209,
					1296259209"/>
      <testData input="2011-01-9 00:00:09"
                expectedOutput="1294531209,
					null,
					1294531209,
					null"/>
      <testData input="2011-1-29 00:00:00"
                expectedOutput="1296259200,
					null,
					1296259200,
					null"/>
      <testData input="2011-1-1 00:00:00"
                expectedOutput="1293840000,
					null,
					1293840000,
					null"/>
      <testData input="2011-01-1 1:00:00"
                expectedOutput="1293843600,
					null,
					1293843600,
					null"/>
      <testData input="2011-1-23 2:22:59"
                expectedOutput="1295749379,
					null,
					1295749379,
					null"/>
      <testData input="2012-2-7 5:22:33"
                expectedOutput="1328592153,
					null,
					1328592153,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					1325462400,
					Error: com.force.formula.FormulaDateException,
					1325462400"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59"
                expectedOutput="1325462399,
					1325462398.999999,
					1325462399,
					1325462398.999999"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33"
                expectedOutput="1328590953,
					null,
					1328590953,
					null"/>
      <testData input="2012-02-07 5:22:3"
                expectedOutput="1328592123,
					null,
					1328592123,
					null"/>
   </testcase>
   <testcase testName="testFromUnixTime"
             fieldName="testFromUnixTime"
             dataType="DateTime"
             formula="FromUnixTime(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0"
                expectedOutput="Thu Jan 01 00:00:00 GMT 1970,
					1970-01-01 00:00:00.0,
					Thu Jan 01 00:00:00 GMT 1970,
					1970-01-01 00:00:00.0"/>
      <testData input="1"
                expectedOutput="Thu Jan 01 00:00:01 GMT 1970,
					1970-01-01 00:00:01.0,
					Thu Jan 01 00:00:01 GMT 1970,
					1970-01-01 00:00:01.0"/>
      <testData input="-5"
                expectedOutput="Wed Dec 31 23:59:55 GMT 1969,
					1969-12-31 23:59:55.0,
					Wed Dec 31 23:59:55 GMT 1969,
					1969-12-31 23:59:55.0"/>
      <testData input="-885730575"
                expectedOutput="Sun Dec 07 11:43:45 GMT 1941,
					1941-12-07 11:43:45.0,
					Sun Dec 07 11:43:45 GMT 1941,
					1941-12-07 11:43:45.0"/>
      <testData input="1638902645"
                expectedOutput="Tue Dec 07 18:44:05 GMT 2021,
					2021-12-07 18:44:05.0,
					Tue Dec 07 18:44:05 GMT 2021,
					2021-12-07 18:44:05.0"/>
      <testData input=""
                expectedOutput="Thu Jan 01 00:00:00 GMT 1970,
					1970-01-01 00:00:00.0,
					null,
					null"/>
   </testcase>
   <testcase testName="testUnixTimestampWithTime"
             fieldName="testUnixTimestampWithTime"
             dataType="Double"
             formula="UnixTimestamp(TimeValue(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="38095,
					38094.99999999999,
					38095,
					38094.99999999999"/>
      <testData input="23:56:45.898" expectedOutput="86205,
					86205,
					86205,
					86205"/>
      <testData input="01:14:23.345" expectedOutput="4463,
					4463,
					4463,
					4463"/>
      <testData input="01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:29.345" expectedOutput="29,
					29,
					29,
					29"/>
      <testData input="00:00:00.789" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="00:00:00.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="24:12:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					776,
					Error: com.force.formula.FormulaDateException,
					776"/>
      <testData input="23:62:56.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="23:52:65.123"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					4463,
					Error: com.force.formula.FormulaDateException,
					4463"/>
      <testData input="00:00:01.000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="23:59:59.999" expectedOutput="86399,
					86399,
					86399,
					86399"/>
   </testcase>
   <testcase testName="testIsoWeekWithDateTime"
             fieldName="testIsoWeekWithDateTime"
             dataType="Double"
             formula="ISOWEEK(DATETIMEVALUE(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="4,
					null,
					4,
					null"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="1,
					null,
					1,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="4,
					null,
					4,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="3,
					null,
					3,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="6,
					null,
					6,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="6,
					null,
					6,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="6,
					null,
					6,
					null"/>
   </testcase>
   <testcase testName="testIsoWeekWithDate"
             fieldName="testIsoWeekWithDate"
             dataType="Double"
             formula="ISOWEEK(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="2004:12:31,3.00" expectedOutput="53,
					null,
					53,
					null"/>
      <testData input="2004:02:28:00:00:00,4.00" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,3.5" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,3.4" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,3.6" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,40000" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,365" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,364" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="2000:02:28,30" expectedOutput="9,
					null,
					9,
					null"/>
      <testData input="1900:01:01,30" expectedOutput="1,
					null,
					1,
					null"/>
      <testData input="4000:01:01,30" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="2000:01:01,30" expectedOutput="52,
					null,
					52,
					null"/>
      <testData input="3999:01:01,0.23456" expectedOutput="53,
					null,
					53,
					null"/>
   </testcase>
   <testcase testName="testIsoYearWithDateTime"
             fieldName="testIsoYearWithDateTime"
             dataType="Double"
             formula="ISOYEAR(DATETIMEVALUE(dateString__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09" expectedOutput="2011,
					2011,
					2011,
					2011"/>
      <testData input="2011-01-9 00:00:09" expectedOutput="2011,
					null,
					2011,
					null"/>
      <testData input="2011-1-29 00:00:00" expectedOutput="2011,
					null,
					2011,
					null"/>
      <testData input="2011-1-1 00:00:00" expectedOutput="2010,
					null,
					2010,
					null"/>
      <testData input="2011-01-1 1:00:00" expectedOutput="2010,
					null,
					2010,
					null"/>
      <testData input="2011-1-23 2:22:59" expectedOutput="2011,
					null,
					2011,
					null"/>
      <testData input="2012-2-7 5:22:33" expectedOutput="2012,
					null,
					2012,
					null"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012:02:02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2012,
					Error: com.force.formula.FormulaDateException,
					2012"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-01-01 23:59:59" expectedOutput="2011,
					2012,
					2011,
					2012"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="2012-02-07 5:2:33" expectedOutput="2012,
					null,
					2012,
					null"/>
      <testData input="2012-02-07 5:22:3" expectedOutput="2012,
					null,
					2012,
					null"/>
   </testcase>
   <testcase testName="testIsoYearWithDate"
             fieldName="testIsoYearWithDate"
             dataType="Double"
             formula="ISOYEAR(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00" expectedOutput="2005,
					2005,
					2005,
					2005"/>
      <testData input="2004:12:31,3.00" expectedOutput="2004,
					2004,
					2004,
					2004"/>
      <testData input="2004:02:28:00:00:00,4.00"
                expectedOutput="2004,
					2004,
					2004,
					2004"/>
      <testData input="2000:02:28,3.5" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,3.4" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,3.6" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,40000" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,365" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,364" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="2000:02:28,30" expectedOutput="2000,
					2000,
					2000,
					2000"/>
      <testData input="1900:01:01,30" expectedOutput="1900,
					1900,
					1900,
					1900"/>
      <testData input="4000:01:01,30" expectedOutput="3999,
					4000,
					3999,
					4000"/>
      <testData input="2000:01:01,30" expectedOutput="1999,
					2000,
					1999,
					2000"/>
      <testData input="3999:01:01,0.23456"
                expectedOutput="3998,
					3998.999999999999,
					3998,
					3998.999999999999"/>
   </testcase>
   <testcase testName="testTextFunctionWithDate"
             fieldName="testTextFunctionWithDate"
             dataType="Text"
             formula="TEXT(DATE(2013,12,31))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="2013-12-31,
					2013-12-31,
					2013-12-31,
					2013-12-31"/>
   </testcase>
   <testcase testName="testTextFunctionWithDateTime"
             fieldName="testTextFunctionWithDateTime"
             dataType="Text"
             formula="TEXT(DATETIMEVALUE('2013-12-31 01:02:03'))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="2013-12-31 01:02:03Z,
					2013-12-31 01:02:03Z,
					2013-12-31 01:02:03Z,
					2013-12-31 01:02:03Z"/>
   </testcase>
   <testcase testName="testFunctionRight"
             fieldName="testFunctionRight"
             dataType="Text"
             formula="RIGHT(customtext__c, customnumber__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customnumber" dataType="Double"/>
      <testData input="123456,1" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,2" expectedOutput="56,
					56,
					56,
					56"/>
      <testData input="123456,0" expectedOutput="null,
					123456,
					null,
					123456"/>
      <testData input="123456,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,7" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,-1" expectedOutput="null,
					123456,
					null,
					123456"/>
      <testData input="123456,-10" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456," expectedOutput="null,
					123456,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,1" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,2" expectedOutput="月份,
					月份,
					月份,
					月份"/>
      <testData input="会计年度开始月份,0" expectedOutput="null,
					会计年度开始月份,
					null,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,8"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,10"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,-1" expectedOutput="null,
					会计年度开始月份,
					null,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,-10" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份," expectedOutput="null,
					会计年度开始月份,
					null,
					null"/>
   </testcase>
   <testcase testName="testFunctionLeft"
             fieldName="testFunctionLeft"
             dataType="Text"
             formula="LEFT(customtext__c, customnumber__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customnumber" dataType="Double"/>
      <testData input="123456,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456,2" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="123456,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,7" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-10" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,1" expectedOutput="会,
					会,
					会,
					会"/>
      <testData input="会计年度开始月份,2" expectedOutput="会计,
					会计,
					会计,
					会计"/>
      <testData input="会计年度开始月份,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,8"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,10"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,-10" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testAddConcatSimple"
             fieldName="testAddConcatSimple"
             dataType="Text"
             formula="(customtext1__c+customtext2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa"
                expectedOutput="aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa"/>
      <testData input="aaaa,bbbb"
                expectedOutput="aaaabbbb,
					aaaabbbb,
					aaaabbbb,
					aaaabbbb"/>
      <testData input="aaaa," expectedOutput="aaaa,
					aaaa,
					aaaa,
					aaaa"/>
      <testData input=",bbbb" expectedOutput="bbbb,
					bbbb,
					bbbb,
					bbbb"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="aaaa,aaaa"
                expectedOutput="aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa"/>
      <testData input="aaaa,aaaa"
                expectedOutput="aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa,
					aaaaaaaa"/>
   </testcase>
   <testcase testName="testAddWithCaseExpr"
             fieldName="testAddWithCaseExpr"
             dataType="Double"
             formula="(customformula0__c+customcurrency2__c+customformula1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="CASE(customtext1__c,customtext2__c,custompercent1__c,customtext3__c,customcurrency1__c,customnumber1__c)">
         <referenceField fieldName="customtext1" dataType="Text"/>
         <referenceField fieldName="customtext2" dataType="Text"/>
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customtext3" dataType="Text"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
         <referenceField fieldName="customnumber1" dataType="Double"/>
      </referenceField>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customformula1"
                      dataType="Percent"
                      formula="(custompercent2__c+customnumber2__c)">
         <referenceField fieldName="custompercent2" dataType="Percent"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
      </referenceField>
      <testData input="Partner,Partner,200,Reseller,400,100,400,200,100"
                expectedOutput="504,
					504,
					504,
					504"/>
      <testData input="Reseller,Partner,200,Reseller,400,100,400,200,100"
                expectedOutput="902,
					902,
					902,
					902"/>
      <testData input="Partner,Partner,200,Reseller,400,100,400,200,100"
                expectedOutput="504,
					504,
					504,
					504"/>
      <testData input=",Partner,200,Reseller,400,100,400,200,100"
                expectedOutput="602,
					602,
					602,
					602"/>
      <testData input="Partner,,200,Reseller,400,100,400,200,100"
                expectedOutput="602,
					602,
					602,
					602"/>
      <testData input="Var,Partner,200,Reseller,400,100,400,200,100"
                expectedOutput="602,
					602,
					602,
					602"/>
      <testData input="Partner,Partner,,Reseller,400,100,400,200,100"
                expectedOutput="502,
					502,
					null,
					null"/>
      <testData input="Partner,Partner,200,Reseller,400,,400,200,100"
                expectedOutput="504,
					504,
					504,
					504"/>
      <testData input="Partner,Partner,200,Reseller,400,,400,,100"
                expectedOutput="502,
					502,
					null,
					null"/>
      <testData input="Partner,Partner,200,Reseller,400,,400,200,100"
                expectedOutput="504,
					504,
					504,
					504"/>
   </testcase>
   <testcase testName="testAddWithIfExpr"
             fieldName="testAddWithIfExpr"
             dataType="Double"
             formula="(customformula0__c+customformula1__c+customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Currency"
                      formula="IF(true,customnumber1__c,custompercent1__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="custompercent1" dataType="Percent"/>
      </referenceField>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="(customcurrency1__c+customnumber2__c)">
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
      </referenceField>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="200,20,300,40,20" expectedOutput="560,
					560,
					560,
					560"/>
      <testData input=",.04,40,,10" expectedOutput="50,
					50,
					null,
					null"/>
      <testData input="32,10,50,24,12" expectedOutput="118,
					118,
					118,
					118"/>
      <testData input="0,0,0,0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1,-1,-1,-1,-1" expectedOutput="-4,
					-4,
					-4,
					-4"/>
      <testData input="-1,,,-1,1" expectedOutput="-1,
					-1,
					null,
					null"/>
      <testData input="0.1234,0.1234,9.0456,123456789.123456789,0.123456789"
                expectedOutput="123456798.415913578,
					123456798.4159135,
					123456798.415913578,
					123456798.4159135"/>
   </testcase>
   <testcase testName="testAddWithTextFunc"
             fieldName="testAddWithTextFunc"
             dataType="Double"
             formula="(customnumber1__c+customformula0__c+customnumber2__c+customformula1__c+customformula2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="VALUE(customtext1__c)">
         <referenceField fieldName="customtext1" dataType="Text"/>
      </referenceField>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="LEN(customtext2__c)">
         <referenceField fieldName="customtext2" dataType="Text"/>
      </referenceField>
      <referenceField fieldName="customformula2"
                      dataType="Double"
                      formula="(custompercent1__c*customcurrency1__c)">
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
      </referenceField>
      <testData input="100.1234,400,.2212,lengthisten,.01,500"
                expectedOutput="511.3946,
					511.3946,
					511.3946,
					511.3946"/>
      <testData input=",200.134,100,text,,-200"
                expectedOutput="304.134,
					304.134,
					null,
					null"/>
      <testData input="0.144,0.0023456,200,,,20"
                expectedOutput="200.1463456,
					200.1463456,
					null,
					null"/>
      <testData input="-1,-1,-1,-1,-1,-1"
                expectedOutput="-0.99,
					-0.99,
					-0.99,
					-0.99"/>
      <testData input="0,0,0,0,0,0" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testAddWithDateFunc"
             fieldName="testAddWithDateFunc"
             dataType="Double"
             formula="(customformula0__c+customformula1__c+customnumber1__c+customformula2__c+custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="DAY(customdate1__c)">
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="YEAR(customdate2__c)">
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customformula2"
                      dataType="Double"
                      formula="MONTH(customdate3__c)">
         <referenceField fieldName="customdate3" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="2004:12:20,2004:12:20,0,2004:12:20,30"
                expectedOutput="2036.3,
					2036.299999999999,
					2036.3,
					2036.299999999999"/>
      <testData input=",2004:12:20,0,2004:12:20,30"
                expectedOutput="2016.3,
					2016.299999999999,
					null,
					null"/>
      <testData input="2004:12:20,,,2004:12:20,10"
                expectedOutput="32.1,
					32.1,
					null,
					null"/>
      <testData input=",,,,10" expectedOutput="0.1,
					0.1,
					null,
					null"/>
      <testData input="1900:12:20,1900:12:20,,1900:12:20,10"
                expectedOutput="1932.1,
					1932.099999999999,
					null,
					null"/>
   </testcase>
   <testcase testName="testAddDate"
             fieldName="testAddDate"
             dataType="DateOnly"
             formula="(customdate1__c+customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00"
                expectedOutput="Wed Jan 04 00:00:00 GMT 2006,
					2006-01-04 00:00:00.0,
					Wed Jan 04 00:00:00 GMT 2006,
					2006-01-04 00:00:00.0"/>
      <testData input="2004:12:31,3.00"
                expectedOutput="Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 00:00:00.0,
					Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 00:00:00.0"/>
      <testData input="2004:02:28:00:00:00,4.00"
                expectedOutput="Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 00:00:00.0,
					Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 00:00:00.0"/>
      <testData input="2000:02:28,3.5"
                expectedOutput="Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0,
					Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0"/>
      <testData input="2000:02:28,3.4"
                expectedOutput="Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0,
					Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0"/>
      <testData input="2000:02:28,3.6"
                expectedOutput="Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0,
					Thu Mar 02 00:00:00 GMT 2000,
					2000-03-02 00:00:00.0"/>
      <testData input="2000:02:28,40000"
                expectedOutput="Wed Sep 04 00:00:00 GMT 2109,
					2109-09-04 00:00:00.0,
					Wed Sep 04 00:00:00 GMT 2109,
					2109-09-04 00:00:00.0"/>
      <testData input="2000:02:28,365"
                expectedOutput="Tue Feb 27 00:00:00 GMT 2001,
					2001-02-27 00:00:00.0,
					Tue Feb 27 00:00:00 GMT 2001,
					2001-02-27 00:00:00.0"/>
      <testData input="2000:02:28,364"
                expectedOutput="Mon Feb 26 00:00:00 GMT 2001,
					2001-02-26 00:00:00.0,
					Mon Feb 26 00:00:00 GMT 2001,
					2001-02-26 00:00:00.0"/>
      <testData input="2000:02:28,30"
                expectedOutput="Wed Mar 29 00:00:00 GMT 2000,
					2000-03-29 00:00:00.0,
					Wed Mar 29 00:00:00 GMT 2000,
					2000-03-29 00:00:00.0"/>
      <testData input="1900:01:01,30"
                expectedOutput="Wed Jan 31 00:00:00 GMT 1900,
					1900-01-31 00:00:00.0,
					Wed Jan 31 00:00:00 GMT 1900,
					1900-01-31 00:00:00.0"/>
      <testData input="4000:01:01,30"
                expectedOutput="Mon Jan 31 00:00:00 GMT 4000,
					4000-01-31 00:00:00.0,
					Mon Jan 31 00:00:00 GMT 4000,
					4000-01-31 00:00:00.0"/>
      <testData input="2000:01:01,30"
                expectedOutput="Mon Jan 31 00:00:00 GMT 2000,
					2000-01-31 00:00:00.0,
					Mon Jan 31 00:00:00 GMT 2000,
					2000-01-31 00:00:00.0"/>
      <testData input="3999:01:01,0.23456"
                expectedOutput="Fri Jan 01 00:00:00 GMT 3999,
					3999-01-01 00:00:00.0,
					Fri Jan 01 00:00:00 GMT 3999,
					3999-01-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testAddMonths"
             fieldName="testAddMonths"
             dataType="DateTime"
             formula="ADDMONTHS(customdate1__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,NULL"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					null,
					null"/>
      <testData input="2004:12:31:11:32:00,-12.00"
                expectedOutput="Wed Dec 31 11:32:00 GMT 2003,
					2003-12-31 11:32:00.0,
					Wed Dec 31 11:32:00 GMT 2003,
					2003-12-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,12.00"
                expectedOutput="Sat Dec 31 11:32:00 GMT 2005,
					2005-12-31 11:32:00.0,
					Sat Dec 31 11:32:00 GMT 2005,
					2005-12-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,-1.00"
                expectedOutput="Tue Nov 30 11:32:00 GMT 2004,
					2004-11-30 11:32:00.0,
					Tue Nov 30 11:32:00 GMT 2004,
					2004-11-30 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,1.00"
                expectedOutput="Mon Jan 31 11:32:00 GMT 2005,
					2005-01-31 11:32:00.0,
					Mon Jan 31 11:32:00 GMT 2005,
					2005-01-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,-2.00"
                expectedOutput="Sun Oct 31 11:32:00 GMT 2004,
					2004-10-31 11:32:00.0,
					Sun Oct 31 11:32:00 GMT 2004,
					2004-10-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,2.00"
                expectedOutput="Mon Feb 28 11:32:00 GMT 2005,
					2005-02-28 11:32:00.0,
					Mon Feb 28 11:32:00 GMT 2005,
					2005-02-28 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,-3.00"
                expectedOutput="Thu Sep 30 11:32:00 GMT 2004,
					2004-09-30 11:32:00.0,
					Thu Sep 30 11:32:00 GMT 2004,
					2004-09-30 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0,
					Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,0.50"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,0.00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:12:31:11:32:00,-0.50"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-12.00"
                expectedOutput="Fri Feb 28 07:34:00 GMT 2003,
					2003-02-28 07:34:00.0,
					Fri Feb 28 07:34:00 GMT 2003,
					2003-02-28 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,12.00"
                expectedOutput="Mon Feb 28 07:34:00 GMT 2005,
					2005-02-28 07:34:00.0,
					Mon Feb 28 07:34:00 GMT 2005,
					2005-02-28 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-1.00"
                expectedOutput="Sat Jan 31 07:34:00 GMT 2004,
					2004-01-31 07:34:00.0,
					Sat Jan 31 07:34:00 GMT 2004,
					2004-01-31 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0,
					Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-2.00"
                expectedOutput="Wed Dec 31 07:34:00 GMT 2003,
					2003-12-31 07:34:00.0,
					Wed Dec 31 07:34:00 GMT 2003,
					2003-12-31 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,2.00"
                expectedOutput="Fri Apr 30 07:34:00 GMT 2004,
					2004-04-30 07:34:00.0,
					Fri Apr 30 07:34:00 GMT 2004,
					2004-04-30 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-3.00"
                expectedOutput="Sun Nov 30 07:34:00 GMT 2003,
					2003-11-30 07:34:00.0,
					Sun Nov 30 07:34:00 GMT 2003,
					2003-11-30 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,3.00"
                expectedOutput="Mon May 31 07:34:00 GMT 2004,
					2004-05-31 07:34:00.0,
					Mon May 31 07:34:00 GMT 2004,
					2004-05-31 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,0.50"
                expectedOutput="Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0,
					Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,0.00"
                expectedOutput="Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0,
					Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-0.50"
                expectedOutput="Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0,
					Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-12.00"
                expectedOutput="Sat Mar 29 07:34:00 GMT 2003,
					2003-03-29 07:34:00.0,
					Sat Mar 29 07:34:00 GMT 2003,
					2003-03-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,12.00"
                expectedOutput="Tue Mar 29 07:34:00 GMT 2005,
					2005-03-29 07:34:00.0,
					Tue Mar 29 07:34:00 GMT 2005,
					2005-03-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-1.00"
                expectedOutput="Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0,
					Sun Feb 29 07:34:00 GMT 2004,
					2004-02-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,1.00"
                expectedOutput="Thu Apr 29 07:34:00 GMT 2004,
					2004-04-29 07:34:00.0,
					Thu Apr 29 07:34:00 GMT 2004,
					2004-04-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-2.00"
                expectedOutput="Thu Jan 29 07:34:00 GMT 2004,
					2004-01-29 07:34:00.0,
					Thu Jan 29 07:34:00 GMT 2004,
					2004-01-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,2.00"
                expectedOutput="Sat May 29 07:34:00 GMT 2004,
					2004-05-29 07:34:00.0,
					Sat May 29 07:34:00 GMT 2004,
					2004-05-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-3.00"
                expectedOutput="Mon Dec 29 07:34:00 GMT 2003,
					2003-12-29 07:34:00.0,
					Mon Dec 29 07:34:00 GMT 2003,
					2003-12-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,3.00"
                expectedOutput="Tue Jun 29 07:34:00 GMT 2004,
					2004-06-29 07:34:00.0,
					Tue Jun 29 07:34:00 GMT 2004,
					2004-06-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,0.50"
                expectedOutput="Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0,
					Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,0.00"
                expectedOutput="Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0,
					Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-0.50"
                expectedOutput="Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0,
					Mon Mar 29 07:34:00 GMT 2004,
					2004-03-29 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-12.00"
                expectedOutput="Sun Mar 30 07:34:00 GMT 2003,
					2003-03-30 07:34:00.0,
					Sun Mar 30 07:34:00 GMT 2003,
					2003-03-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,12.00"
                expectedOutput="Wed Mar 30 07:34:00 GMT 2005,
					2005-03-30 07:34:00.0,
					Wed Mar 30 07:34:00 GMT 2005,
					2005-03-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-1.00"
                expectedOutput="Sun Feb 29 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Sun Feb 29 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,1.00"
                expectedOutput="Fri Apr 30 07:34:00 GMT 2004,
					2004-04-30 07:34:00.0,
					Fri Apr 30 07:34:00 GMT 2004,
					2004-04-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-2.00"
                expectedOutput="Fri Jan 30 07:34:00 GMT 2004,
					2004-01-30 07:34:00.0,
					Fri Jan 30 07:34:00 GMT 2004,
					2004-01-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,2.00"
                expectedOutput="Sun May 30 07:34:00 GMT 2004,
					2004-05-30 07:34:00.0,
					Sun May 30 07:34:00 GMT 2004,
					2004-05-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-3.00"
                expectedOutput="Tue Dec 30 07:34:00 GMT 2003,
					2003-12-30 07:34:00.0,
					Tue Dec 30 07:34:00 GMT 2003,
					2003-12-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,3.00"
                expectedOutput="Wed Jun 30 07:34:00 GMT 2004,
					2004-06-30 07:34:00.0,
					Wed Jun 30 07:34:00 GMT 2004,
					2004-06-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,0.50"
                expectedOutput="Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0,
					Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,0.00"
                expectedOutput="Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0,
					Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-0.50"
                expectedOutput="Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0,
					Tue Mar 30 07:34:00 GMT 2004,
					2004-03-30 07:34:00.0"/>
   </testcase>
   <testcase testName="testAddMonthsDate"
             fieldName="testAddMonthsDate"
             dataType="DateOnly"
             formula="ADDMONTHS(customdate1__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,NULL"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					null,
					null"/>
      <testData input="2004:12:31:11:32:00,-12.00"
                expectedOutput="Wed Dec 31 00:00:00 GMT 2003,
					2003-12-31 00:00:00.0,
					Wed Dec 31 00:00:00 GMT 2003,
					2003-12-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,12.00"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,-1.00"
                expectedOutput="Tue Nov 30 00:00:00 GMT 2004,
					2004-11-30 00:00:00.0,
					Tue Nov 30 00:00:00 GMT 2004,
					2004-11-30 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,1.00"
                expectedOutput="Mon Jan 31 00:00:00 GMT 2005,
					2005-01-31 00:00:00.0,
					Mon Jan 31 00:00:00 GMT 2005,
					2005-01-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,-2.00"
                expectedOutput="Sun Oct 31 00:00:00 GMT 2004,
					2004-10-31 00:00:00.0,
					Sun Oct 31 00:00:00 GMT 2004,
					2004-10-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,2.00"
                expectedOutput="Mon Feb 28 00:00:00 GMT 2005,
					2005-02-28 00:00:00.0,
					Mon Feb 28 00:00:00 GMT 2005,
					2005-02-28 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,-3.00"
                expectedOutput="Thu Sep 30 00:00:00 GMT 2004,
					2004-09-30 00:00:00.0,
					Thu Sep 30 00:00:00 GMT 2004,
					2004-09-30 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Thu Mar 31 00:00:00 GMT 2005,
					2005-03-31 00:00:00.0,
					Thu Mar 31 00:00:00 GMT 2005,
					2005-03-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,0.50"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,0.00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:12:31:11:32:00,-0.50"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-12.00"
                expectedOutput="Fri Feb 28 00:00:00 GMT 2003,
					2003-02-28 00:00:00.0,
					Fri Feb 28 00:00:00 GMT 2003,
					2003-02-28 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,12.00"
                expectedOutput="Mon Feb 28 00:00:00 GMT 2005,
					2005-02-28 00:00:00.0,
					Mon Feb 28 00:00:00 GMT 2005,
					2005-02-28 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-1.00"
                expectedOutput="Sat Jan 31 00:00:00 GMT 2004,
					2004-01-31 00:00:00.0,
					Sat Jan 31 00:00:00 GMT 2004,
					2004-01-31 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Wed Mar 31 00:00:00 GMT 2004,
					2004-03-31 00:00:00.0,
					Wed Mar 31 00:00:00 GMT 2004,
					2004-03-31 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-2.00"
                expectedOutput="Wed Dec 31 00:00:00 GMT 2003,
					2003-12-31 00:00:00.0,
					Wed Dec 31 00:00:00 GMT 2003,
					2003-12-31 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,2.00"
                expectedOutput="Fri Apr 30 00:00:00 GMT 2004,
					2004-04-30 00:00:00.0,
					Fri Apr 30 00:00:00 GMT 2004,
					2004-04-30 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-3.00"
                expectedOutput="Sun Nov 30 00:00:00 GMT 2003,
					2003-11-30 00:00:00.0,
					Sun Nov 30 00:00:00 GMT 2003,
					2003-11-30 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,3.00"
                expectedOutput="Mon May 31 00:00:00 GMT 2004,
					2004-05-31 00:00:00.0,
					Mon May 31 00:00:00 GMT 2004,
					2004-05-31 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,0.50"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,0.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,-0.50"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-12.00"
                expectedOutput="Sat Mar 29 00:00:00 GMT 2003,
					2003-03-29 00:00:00.0,
					Sat Mar 29 00:00:00 GMT 2003,
					2003-03-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,12.00"
                expectedOutput="Tue Mar 29 00:00:00 GMT 2005,
					2005-03-29 00:00:00.0,
					Tue Mar 29 00:00:00 GMT 2005,
					2005-03-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-1.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,1.00"
                expectedOutput="Thu Apr 29 00:00:00 GMT 2004,
					2004-04-29 00:00:00.0,
					Thu Apr 29 00:00:00 GMT 2004,
					2004-04-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-2.00"
                expectedOutput="Thu Jan 29 00:00:00 GMT 2004,
					2004-01-29 00:00:00.0,
					Thu Jan 29 00:00:00 GMT 2004,
					2004-01-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,2.00"
                expectedOutput="Sat May 29 00:00:00 GMT 2004,
					2004-05-29 00:00:00.0,
					Sat May 29 00:00:00 GMT 2004,
					2004-05-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-3.00"
                expectedOutput="Mon Dec 29 00:00:00 GMT 2003,
					2003-12-29 00:00:00.0,
					Mon Dec 29 00:00:00 GMT 2003,
					2003-12-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,3.00"
                expectedOutput="Tue Jun 29 00:00:00 GMT 2004,
					2004-06-29 00:00:00.0,
					Tue Jun 29 00:00:00 GMT 2004,
					2004-06-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,0.50"
                expectedOutput="Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0,
					Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,0.00"
                expectedOutput="Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0,
					Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0"/>
      <testData input="2004:03:29:07:34:00:GMT,-0.50"
                expectedOutput="Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0,
					Mon Mar 29 00:00:00 GMT 2004,
					2004-03-29 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-12.00"
                expectedOutput="Sun Mar 30 00:00:00 GMT 2003,
					2003-03-30 00:00:00.0,
					Sun Mar 30 00:00:00 GMT 2003,
					2003-03-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,12.00"
                expectedOutput="Wed Mar 30 00:00:00 GMT 2005,
					2005-03-30 00:00:00.0,
					Wed Mar 30 00:00:00 GMT 2005,
					2005-03-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-1.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-03-01 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-03-01 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,1.00"
                expectedOutput="Fri Apr 30 00:00:00 GMT 2004,
					2004-04-30 00:00:00.0,
					Fri Apr 30 00:00:00 GMT 2004,
					2004-04-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-2.00"
                expectedOutput="Fri Jan 30 00:00:00 GMT 2004,
					2004-01-30 00:00:00.0,
					Fri Jan 30 00:00:00 GMT 2004,
					2004-01-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,2.00"
                expectedOutput="Sun May 30 00:00:00 GMT 2004,
					2004-05-30 00:00:00.0,
					Sun May 30 00:00:00 GMT 2004,
					2004-05-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-3.00"
                expectedOutput="Tue Dec 30 00:00:00 GMT 2003,
					2003-12-30 00:00:00.0,
					Tue Dec 30 00:00:00 GMT 2003,
					2003-12-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,3.00"
                expectedOutput="Wed Jun 30 00:00:00 GMT 2004,
					2004-06-30 00:00:00.0,
					Wed Jun 30 00:00:00 GMT 2004,
					2004-06-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,0.50"
                expectedOutput="Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0,
					Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,0.00"
                expectedOutput="Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0,
					Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0"/>
      <testData input="2004:03:30:07:34:00:GMT,-0.50"
                expectedOutput="Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0,
					Tue Mar 30 00:00:00 GMT 2004,
					2004-03-30 00:00:00.0"/>
   </testcase>
   <testcase testName="testWeekday"
             fieldName="testWeekday"
             dataType="Double"
             formula="WEEKDAY(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="2004:12:31,3.00" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="2004:02:28:00:00:00,4.00" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="2000:02:28,3.5" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,3.4" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,3.6" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,40000" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,365" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,364" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2000:02:28,30" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1900:01:01,30" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="4000:01:01,30" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="2000:01:01,30" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="3999:01:01,0.23456" expectedOutput="6,
					6,
					6,
					6"/>
   </testcase>
   <testcase testName="testDayOfYear"
             fieldName="testDayOfYear"
             dataType="Double"
             formula="DAYOFYEAR(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00" expectedOutput="365,
					365,
					365,
					365"/>
      <testData input="2004:12:31,3.00" expectedOutput="366,
					366,
					366,
					366"/>
      <testData input="2004:02:28:00:00:00,4.00" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,3.5" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,3.4" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,3.6" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,40000" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,365" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,364" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="2000:02:28,30" expectedOutput="59,
					59,
					59,
					59"/>
      <testData input="1900:01:01,30" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="4000:01:01,30" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2000:01:01,30" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="3999:01:01,0.23456" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testUnixTimestampWithDate"
             fieldName="testUnixTimestampWithDate"
             dataType="Double"
             formula="UNIXTIMESTAMP(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",40" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2005:12:31,4.00"
                expectedOutput="1135987200,
					1135987200,
					1135987200,
					1135987200"/>
      <testData input="2004:12:31,3.00"
                expectedOutput="1104451200,
					1104451200,
					1104451200,
					1104451200"/>
      <testData input="2004:02:28:00:00:00,4.00"
                expectedOutput="1077926400,
					1077926400,
					1077926400,
					1077926400"/>
      <testData input="2000:02:28,3.5"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,3.4"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,3.6"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,40000"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,365"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,364"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="2000:02:28,30"
                expectedOutput="951696000,
					951696000,
					951696000,
					951696000"/>
      <testData input="1900:01:01,30"
                expectedOutput="-2208988800,
					-2208988799.999999,
					-2208988800,
					-2208988799.999999"/>
      <testData input="4000:01:01,30"
                expectedOutput="64060588800,
					64060588800,
					64060588800,
					64060588800"/>
      <testData input="2000:01:01,30"
                expectedOutput="946684800,
					946684799.9999999,
					946684800,
					946684799.9999999"/>
      <testData input="3999:01:01,0.23456"
                expectedOutput="64029052800,
					64029052800,
					64029052800,
					64029052800"/>
   </testcase>
   <testcase testName="testAddDateWithExpr"
             fieldName="testAddDateWithExpr"
             dataType="DateOnly"
             formula="(customformula0__c+customnumber1__c+customformula1__c+customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="DateOnly"
                      formula="(customdate1__c+custompercent1__c)">
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
         <referenceField fieldName="custompercent1" dataType="Percent"/>
      </referenceField>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="(customdate2__c-customdate3__c)">
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
         <referenceField fieldName="customdate3" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="3998:01:31,200,10,3999:12:31,3999:12:01,0"
                expectedOutput="Sat Mar 14 00:00:00 GMT 3998,
					3998-03-14 00:00:00.0,
					Sat Mar 14 00:00:00 GMT 3998,
					3998-03-14 00:00:00.0"/>
      <testData input="1900:01:01,.004,1,2004:12:31,2004:12:31,0"
                expectedOutput="Tue Jan 02 00:00:00 GMT 1900,
					1900-01-02 00:00:00.0,
					Tue Jan 02 00:00:00 GMT 1900,
					1900-01-02 00:00:00.0"/>
      <testData input=",100,,2004:11:31,2004:12:31,0"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",100,,,2004:12:31,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31,,,2004:11:31,2004:12:31,0"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					null,
					null"/>
      <testData input=",100,,2004:11:31,,0" expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testAddDateTime"
             fieldName="testAddDateTime"
             dataType="DateTime"
             formula="(customdatetime1__c+customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Mon Jan 03 11:32:00 GMT 2005,
					2005-01-03 11:32:00.0,
					Mon Jan 03 11:32:00 GMT 2005,
					2005-01-03 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Wed Mar 03 10:34:00 GMT 2004,
					2004-03-03 10:34:00.0,
					Wed Mar 03 10:34:00 GMT 2004,
					2004-03-03 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Jan 03 23:32:00 GMT 2005,
					2005-01-03 23:32:00.0,
					Mon Jan 03 23:32:00 GMT 2005,
					2005-01-03 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Wed Mar 03 22:34:00 GMT 2004,
					2004-03-03 22:34:00.0,
					Wed Mar 03 22:34:00 GMT 2004,
					2004-03-03 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Mon Jan 03 13:56:00 GMT 2005,
					2005-01-03 13:56:00.0,
					Mon Jan 03 13:56:00 GMT 2005,
					2005-01-03 13:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Wed Mar 03 12:58:00 GMT 2004,
					2004-03-03 12:58:00.0,
					Wed Mar 03 12:58:00 GMT 2004,
					2004-03-03 12:58:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Tue Jan 04 01:56:00 GMT 2005,
					2005-01-04 01:56:00.0,
					Tue Jan 04 01:56:00 GMT 2005,
					2005-01-04 01:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Thu Mar 04 00:58:00 GMT 2004,
					2004-03-04 00:58:00.0,
					Thu Mar 04 00:58:00 GMT 2004,
					2004-03-04 00:58:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Sat Jan 01 11:32:00 GMT 2005,
					2005-01-01 11:32:00.0,
					Sat Jan 01 11:32:00 GMT 2005,
					2005-01-01 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sun Feb 29 09:10:00 GMT 2004,
					2004-02-29 09:10:00.0,
					Sun Feb 29 09:10:00 GMT 2004,
					2004-02-29 09:10:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Sun Feb 29 23:34:00 GMT 2004,
					2004-02-29 23:34:00.0,
					Sun Feb 29 23:34:00 GMT 2004,
					2004-02-29 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Sun Feb 29 01:34:00 GMT 2004,
					2004-02-29 01:34:00.0,
					Sun Feb 29 01:34:00 GMT 2004,
					2004-02-29 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Sun Feb 29 09:34:00 GMT 2004,
					2004-02-29 09:34:00.0,
					Sun Feb 29 09:34:00 GMT 2004,
					2004-02-29 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0,
					Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Mon May 18 13:59:00 GMT 2009,
					2009-05-18 13:59:00.0,
					Mon May 18 13:59:00 GMT 2009,
					2009-05-18 13:59:00.0"/>
   </testcase>
   <testcase testName="testAddMonthsDateTime"
             fieldName="testAddMonthsDateTime"
             dataType="DateTime"
             formula="ADDMONTHS(customdatetime1__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0,
					Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0,
					Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0,
					Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0,
					Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0,
					Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0,
					Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0,
					Thu Mar 31 11:32:00 GMT 2005,
					2005-03-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0,
					Mon Jun 28 10:34:00 GMT 2004,
					2004-06-28 10:34:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Fri Dec 31 23:32:00 GMT 2004,
					2004-12-31 23:32:00.0,
					Fri Dec 31 23:32:00 GMT 2004,
					2004-12-31 23:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sat Feb 28 23:34:00 GMT 2004,
					2004-02-28 23:34:00.0,
					Sat Feb 28 23:34:00 GMT 2004,
					2004-02-28 23:34:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Sun Mar 28 23:34:00 GMT 2004,
					2004-03-28 23:34:00.0,
					Sun Mar 28 23:34:00 GMT 2004,
					2004-03-28 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Sun Mar 28 01:34:00 GMT 2004,
					2004-03-28 01:34:00.0,
					Sun Mar 28 01:34:00 GMT 2004,
					2004-03-28 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0,
					Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0,
					Wed Mar 31 07:34:00 GMT 2004,
					2004-03-31 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Sun Mar 28 09:34:00 GMT 2004,
					2004-03-28 09:34:00.0,
					Sun Mar 28 09:34:00 GMT 2004,
					2004-03-28 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0,
					Sat Feb 07 10:00:00 GMT 2009,
					2009-02-07 10:00:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Wed Jun 07 10:00:00 GMT 2017,
					2017-06-07 10:00:00.0,
					Wed Jun 07 10:00:00 GMT 2017,
					2017-06-07 10:00:00.0"/>
   </testcase>
   <testcase testName="testAddDateTimeMinutes"
             fieldName="testAddDateTimeMinutes"
             dataType="DateTime"
             formula="customdatetime1__c+(customnumber1__c/(24*60))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2009:02:07:10:00:00,240"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,239"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,239.1"
                expectedOutput="Sat Feb 07 13:59:06 GMT 2009,
					2009-02-07 13:59:06.0,
					Sat Feb 07 13:59:06 GMT 2009,
					2009-02-07 13:59:06.0"/>
      <testData input="2009:02:07:10:00:00,239.5"
                expectedOutput="Sat Feb 07 13:59:30 GMT 2009,
					2009-02-07 13:59:30.0,
					Sat Feb 07 13:59:30 GMT 2009,
					2009-02-07 13:59:30.0"/>
      <testData input="2009:02:07:10:00:00,239.9"
                expectedOutput="Sat Feb 07 13:59:54 GMT 2009,
					2009-02-07 13:59:54.0,
					Sat Feb 07 13:59:54 GMT 2009,
					2009-02-07 13:59:54.0"/>
      <testData input="2009:02:07:10:00:00,239.99"
                expectedOutput="Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0,
					Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0"/>
      <testData input="2009:02:07:10:00:00,239.999"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,239.9999"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,239.999999999999"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,240.9"
                expectedOutput="Sat Feb 07 14:00:54 GMT 2009,
					2009-02-07 14:00:54.0,
					Sat Feb 07 14:00:54 GMT 2009,
					2009-02-07 14:00:54.0"/>
      <testData input="2009:02:07:10:00:00,240.99"
                expectedOutput="Sat Feb 07 14:00:59 GMT 2009,
					2009-02-07 14:00:59.0,
					Sat Feb 07 14:00:59 GMT 2009,
					2009-02-07 14:00:59.0"/>
      <testData input="2009:02:07:10:00:00,240.9999"
                expectedOutput="Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0,
					Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0"/>
      <testData input="2009:02:07:10:00:00,240.99999"
                expectedOutput="Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0,
					Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0"/>
      <testData input="2009:02:07:10:00:00,240.999999999999"
                expectedOutput="Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0,
					Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0"/>
      <testData input="2009:02:07:10:00:00,241"
                expectedOutput="Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0,
					Sat Feb 07 14:01:00 GMT 2009,
					2009-02-07 14:01:00.0"/>
      <testData input="2009:02:07:10:00:00,123456789"
                expectedOutput="Thu Nov 02 07:09:00 GMT 2243,
					2243-11-02 07:09:00.0,
					Thu Nov 02 07:09:00 GMT 2243,
					2243-11-02 07:09:00.0"/>
   </testcase>
   <testcase testName="testAddDateTimeGivingDate"
             fieldName="testAddDateTimeGivingDate"
             dataType="DateOnly"
             formula="(customdatetime1__c+customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Mon Jan 03 11:32:00 GMT 2005,
					2005-01-03 11:32:00.0,
					Mon Jan 03 11:32:00 GMT 2005,
					2005-01-03 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Wed Mar 03 10:34:00 GMT 2004,
					2004-03-03 10:34:00.0,
					Wed Mar 03 10:34:00 GMT 2004,
					2004-03-03 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Jan 03 23:32:00 GMT 2005,
					2005-01-03 23:32:00.0,
					Mon Jan 03 23:32:00 GMT 2005,
					2005-01-03 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Wed Mar 03 22:34:00 GMT 2004,
					2004-03-03 22:34:00.0,
					Wed Mar 03 22:34:00 GMT 2004,
					2004-03-03 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Mon Jan 03 13:56:00 GMT 2005,
					2005-01-03 13:56:00.0,
					Mon Jan 03 13:56:00 GMT 2005,
					2005-01-03 13:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Wed Mar 03 12:58:00 GMT 2004,
					2004-03-03 12:58:00.0,
					Wed Mar 03 12:58:00 GMT 2004,
					2004-03-03 12:58:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Tue Jan 04 01:56:00 GMT 2005,
					2005-01-04 01:56:00.0,
					Tue Jan 04 01:56:00 GMT 2005,
					2005-01-04 01:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Thu Mar 04 00:58:00 GMT 2004,
					2004-03-04 00:58:00.0,
					Thu Mar 04 00:58:00 GMT 2004,
					2004-03-04 00:58:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Sat Jan 01 11:32:00 GMT 2005,
					2005-01-01 11:32:00.0,
					Sat Jan 01 11:32:00 GMT 2005,
					2005-01-01 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sun Feb 29 09:10:00 GMT 2004,
					2004-02-29 09:10:00.0,
					Sun Feb 29 09:10:00 GMT 2004,
					2004-02-29 09:10:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Sun Feb 29 23:34:00 GMT 2004,
					2004-02-29 23:34:00.0,
					Sun Feb 29 23:34:00 GMT 2004,
					2004-02-29 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Sun Feb 29 01:34:00 GMT 2004,
					2004-02-29 01:34:00.0,
					Sun Feb 29 01:34:00 GMT 2004,
					2004-02-29 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 07:34:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Sun Feb 29 09:34:00 GMT 2004,
					2004-02-29 09:34:00.0,
					Sun Feb 29 09:34:00 GMT 2004,
					2004-02-29 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0,
					Sat Feb 07 13:59:59 GMT 2009,
					2009-02-07 13:59:59.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 14:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 13:58:59 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 13:59:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Mon May 18 13:59:00 GMT 2009,
					2009-05-18 13:59:00.0,
					Mon May 18 13:59:00 GMT 2009,
					2009-05-18 13:59:00.0"/>
   </testcase>
   <testcase testName="testAddDateTimeGivingDateValue"
             fieldName="testAddDateTimeGivingDateValue"
             dataType="DateOnly"
             formula="DateValue(customdatetime1__c+customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 11:32:00.0,
					Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 10:34:00.0,
					Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 23:32:00.0,
					Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 22:34:00.0,
					Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 13:56:00.0,
					Mon Jan 03 00:00:00 GMT 2005,
					2005-01-03 13:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 12:58:00.0,
					Wed Mar 03 00:00:00 GMT 2004,
					2004-03-03 12:58:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Tue Jan 04 00:00:00 GMT 2005,
					2005-01-04 01:56:00.0,
					Tue Jan 04 00:00:00 GMT 2005,
					2005-01-04 01:56:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Thu Mar 04 00:00:00 GMT 2004,
					2004-03-04 00:58:00.0,
					Thu Mar 04 00:00:00 GMT 2004,
					2004-03-04 00:58:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Sat Jan 01 00:00:00 GMT 2005,
					2005-01-01 11:32:00.0,
					Sat Jan 01 00:00:00 GMT 2005,
					2005-01-01 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 09:10:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 09:10:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 23:34:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 01:34:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Mon Mar 01 00:00:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 00:00:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Mon Mar 01 00:00:00 GMT 2004,
					2004-03-01 07:34:00.0,
					Mon Mar 01 00:00:00 GMT 2004,
					2004-03-01 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 09:34:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:59.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:59.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 14:00:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 14:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:58:59.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 13:59:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Mon May 18 00:00:00 GMT 2009,
					2009-05-18 13:59:00.0,
					Mon May 18 00:00:00 GMT 2009,
					2009-05-18 13:59:00.0"/>
   </testcase>
   <testcase testName="testAddDateTimeWithExpr"
             fieldName="testAddDateTimeWithExpr"
             dataType="DateTime"
             formula="(customformula0__c+custompercent2__c+customformula1__c+LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="DateTime"
                      formula="(customdatetime1__c+custompercent1__c)">
         <referenceField fieldName="customdatetime1" dataType="DateTime"/>
         <referenceField fieldName="custompercent1" dataType="Percent"/>
      </referenceField>
      <referenceField fieldName="custompercent2" dataType="Percent"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="(customdatetime2__c-customdatetime3__c)">
         <referenceField fieldName="customdatetime2" dataType="DateTime"/>
         <referenceField fieldName="customdatetime3" dataType="DateTime"/>
      </referenceField>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="3998:01:31:23:00:00,200,10,3999:12:31:00:00:00,3999:12:01:00:00:00,thisistext"
                expectedOutput="Sun Mar 15 01:24:00 GMT 3998,
					3998-03-15 01:24:00.0,
					Sun Mar 15 01:24:00 GMT 3998,
					3998-03-15 01:24:00.0"/>
      <testData input="1900:01:01:12:00:00,.004,1,2004:12:31:12:00:00,2004:12:31:12:00:00,thisisnottext"
                expectedOutput="Sun Jan 14 12:14:27 GMT 1900,
					1900-01-14 12:14:27.0,
					Sun Jan 14 12:14:27 GMT 1900,
					1900-01-14 12:14:27.0"/>
      <testData input=",100,,2004:11:31:13:00:00,2004:12:31:13:00:00,works"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",100,,,2004:12:31:14:00:00,doesnotwork"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31:23:00:00,,,2004:11:31:24:00:00,2004:12:31:14:00:00,flipping"
                expectedOutput="Fri Dec 10 09:00:00 GMT 2004,
					2004-12-10 09:00:00.0,
					null,
					null"/>
      <testData input=",100,,2004:11:31:00:00:00,,not flipping"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testSubDate"
             fieldName="testSubDate"
             dataType="Double"
             formula="(customdate1__c-customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input="2004:12:31,2004:12:01" expectedOutput="30,
					30,
					30,
					30"/>
      <testData input="2004:02:28,2003:12:21" expectedOutput="69,
					69,
					69,
					69"/>
      <testData input="2004:02:27,2003:02:27" expectedOutput="365,
					365,
					365,
					365"/>
      <testData input="2004:02:28,2005:02:28"
                expectedOutput="-366,
					-366,
					-366,
					-366"/>
      <testData input="2004:02:27,2004:03:27" expectedOutput="-29,
					-29,
					-29,
					-29"/>
      <testData input="1900:02:27,1901:02:27"
                expectedOutput="-365,
					-365,
					-365,
					-365"/>
      <testData input="3998:02:27,2997:02:27"
                expectedOutput="365607,
					365606.9999999999,
					365607,
					365606.9999999999"/>
      <testData input="1999:12:31,2000:01:01" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="1999:12:31,2000:01:01" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testSubDateTime"
             fieldName="testSubDateTime"
             dataType="Double"
             formula="(customdatetime1__c-customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:00:00,2004:12:25:11:00:00"
                expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="2004:02:28:11:00:00,2004:02:27:02:00:00"
                expectedOutput="1.375,
					1.375,
					1.375,
					1.375"/>
      <testData input="2004:12:31:11:00:00,2005:01:01:11:00:00"
                expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="2004:02:28:11:00:00,2004:03:01:02:00:00"
                expectedOutput="-1.625,
					-1.625,
					-1.625,
					-1.625"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:00:00"
                expectedOutput="0.02083333333333333333333333333333,
					0.020833333023,
					0.02083333333333333333333333333333,
					0.020833333023"/>
      <testData input="2004:02:28:23:30:00,2004:02:28:24:00:00"
                expectedOutput="-0.02083333333333333333333333333333,
					-0.020833333489,
					-0.02083333333333333333333333333333,
					-0.020833333489"/>
   </testcase>
   <testcase testName="testSubDateTimeCorners1"
             fieldName="testSubDateTimeCorners1"
             dataType="Double"
             formula="(floor((customdatetime1__c-customdatetime2__c)*1440*60))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:01:00,2004:12:31:11:00:00"
                expectedOutput="60,
					59,
					60,
					59"/>
      <testData input="2004:12:31:11:01:00,2004:12:31:09:00:00"
                expectedOutput="7260,
					7260,
					7260,
					7260"/>
      <testData input="2004:12:31:11:01:00,2004:12:30:11:00:00"
                expectedOutput="86460,
					86459,
					86460,
					86459"/>
      <testData input="2004:12:31:11:01:00,2004:12:20:11:00:00"
                expectedOutput="950460,
					950459,
					950460,
					950459"/>
      <testData input="2004:12:31:12:00:00,2004:12:30:11:00:00"
                expectedOutput="90000,
					89998.99999999999,
					90000,
					89998.99999999999"/>
      <testData input="2004:12:31:12:00:01,2004:12:30:12:00:00"
                expectedOutput="86401,
					86400,
					86401,
					86400"/>
   </testcase>
   <testcase testName="testSubDateTimeCorners2"
             fieldName="testSubDateTimeCorners2"
             dataType="Double"
             formula="(ceiling((customdatetime1__c-customdatetime2__c)*1440*60))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:01:00,2004:12:31:11:00:00"
                expectedOutput="60,
					60,
					60,
					60"/>
      <testData input="2004:12:31:11:01:00,2004:12:31:09:00:00"
                expectedOutput="7260,
					7260.999999999999,
					7260,
					7260.999999999999"/>
      <testData input="2004:12:31:11:01:00,2004:12:30:11:00:00"
                expectedOutput="86460,
					86459.99999999999,
					86460,
					86459.99999999999"/>
      <testData input="2004:12:31:11:01:00,2004:12:20:11:00:00"
                expectedOutput="950460,
					950459.9999999999,
					950460,
					950459.9999999999"/>
      <testData input="2004:12:31:12:00:00,2004:12:30:11:00:00"
                expectedOutput="90000,
					90000,
					90000,
					90000"/>
      <testData input="2004:12:31:12:00:01,2004:12:30:12:00:00"
                expectedOutput="86401,
					86400.99999999999,
					86401,
					86400.99999999999"/>
   </testcase>
   <testcase testName="testSubDateTimeGivingDateTime"
             fieldName="testSubDateTimeGivingDate"
             dataType="DateTime"
             formula="(customdatetime1__c-customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Tue Dec 28 11:32:00 GMT 2004,
					2004-12-28 11:32:00.0,
					Tue Dec 28 11:32:00 GMT 2004,
					2004-12-28 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Tue Feb 24 10:34:00 GMT 2004,
					2004-02-24 10:34:00.0,
					Tue Feb 24 10:34:00 GMT 2004,
					2004-02-24 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Dec 27 23:32:00 GMT 2004,
					2004-12-27 23:32:00.0,
					Mon Dec 27 23:32:00 GMT 2004,
					2004-12-27 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Mon Feb 23 22:34:00 GMT 2004,
					2004-02-23 22:34:00.0,
					Mon Feb 23 22:34:00 GMT 2004,
					2004-02-23 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Tue Dec 28 09:08:00 GMT 2004,
					2004-12-28 09:08:00.0,
					Tue Dec 28 09:08:00 GMT 2004,
					2004-12-28 09:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Tue Feb 24 08:10:00 GMT 2004,
					2004-02-24 08:10:00.0,
					Tue Feb 24 08:10:00 GMT 2004,
					2004-02-24 08:10:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Mon Dec 27 21:08:00 GMT 2004,
					2004-12-27 21:08:00.0,
					Mon Dec 27 21:08:00 GMT 2004,
					2004-12-27 21:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Mon Feb 23 20:10:00 GMT 2004,
					2004-02-23 20:10:00.0,
					Mon Feb 23 20:10:00 GMT 2004,
					2004-02-23 20:10:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sat Feb 28 13:58:00 GMT 2004,
					2004-02-28 13:58:00.0,
					Sat Feb 28 13:58:00 GMT 2004,
					2004-02-28 13:58:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Fri Feb 27 23:34:00 GMT 2004,
					2004-02-27 23:34:00.0,
					Fri Feb 27 23:34:00 GMT 2004,
					2004-02-27 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Fri Feb 27 01:34:00 GMT 2004,
					2004-02-27 01:34:00.0,
					Fri Feb 27 01:34:00 GMT 2004,
					2004-02-27 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Fri Feb 27 09:34:00 GMT 2004,
					2004-02-27 09:34:00.0,
					Fri Feb 27 09:34:00 GMT 2004,
					2004-02-27 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 06:00:01 GMT 2009,
					2009-02-07 06:00:01.0,
					Sat Feb 07 06:00:01 GMT 2009,
					2009-02-07 06:00:01.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 06:00:00 GMT 2009,
					2009-02-07 06:00:00.0,
					Sat Feb 07 06:00:00 GMT 2009,
					2009-02-07 06:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Thu Oct 30 06:01:00 GMT 2008,
					2008-10-30 06:01:00.0,
					Thu Oct 30 06:01:00 GMT 2008,
					2008-10-30 06:01:00.0"/>
   </testcase>
   <testcase testName="testSubDateTimeGivingDate"
             fieldName="testSubDateTimeGivingDate"
             dataType="DateOnly"
             formula="(customdatetime1__c-customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Tue Dec 28 11:32:00 GMT 2004,
					2004-12-28 11:32:00.0,
					Tue Dec 28 11:32:00 GMT 2004,
					2004-12-28 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Tue Feb 24 10:34:00 GMT 2004,
					2004-02-24 10:34:00.0,
					Tue Feb 24 10:34:00 GMT 2004,
					2004-02-24 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Dec 27 23:32:00 GMT 2004,
					2004-12-27 23:32:00.0,
					Mon Dec 27 23:32:00 GMT 2004,
					2004-12-27 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Mon Feb 23 22:34:00 GMT 2004,
					2004-02-23 22:34:00.0,
					Mon Feb 23 22:34:00 GMT 2004,
					2004-02-23 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Tue Dec 28 09:08:00 GMT 2004,
					2004-12-28 09:08:00.0,
					Tue Dec 28 09:08:00 GMT 2004,
					2004-12-28 09:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Tue Feb 24 08:10:00 GMT 2004,
					2004-02-24 08:10:00.0,
					Tue Feb 24 08:10:00 GMT 2004,
					2004-02-24 08:10:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Mon Dec 27 21:08:00 GMT 2004,
					2004-12-27 21:08:00.0,
					Mon Dec 27 21:08:00 GMT 2004,
					2004-12-27 21:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Mon Feb 23 20:10:00 GMT 2004,
					2004-02-23 20:10:00.0,
					Mon Feb 23 20:10:00 GMT 2004,
					2004-02-23 20:10:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sat Feb 28 13:58:00 GMT 2004,
					2004-02-28 13:58:00.0,
					Sat Feb 28 13:58:00 GMT 2004,
					2004-02-28 13:58:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Fri Feb 27 23:34:00 GMT 2004,
					2004-02-27 23:34:00.0,
					Fri Feb 27 23:34:00 GMT 2004,
					2004-02-27 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Fri Feb 27 01:34:00 GMT 2004,
					2004-02-27 01:34:00.0,
					Fri Feb 27 01:34:00 GMT 2004,
					2004-02-27 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 07:34:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Fri Feb 27 09:34:00 GMT 2004,
					2004-02-27 09:34:00.0,
					Fri Feb 27 09:34:00 GMT 2004,
					2004-02-27 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 06:00:01 GMT 2009,
					2009-02-07 06:00:01.0,
					Sat Feb 07 06:00:01 GMT 2009,
					2009-02-07 06:00:01.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 06:00:00 GMT 2009,
					2009-02-07 06:00:00.0,
					Sat Feb 07 06:00:00 GMT 2009,
					2009-02-07 06:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 06:01:01 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 06:01:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Thu Oct 30 06:01:00 GMT 2008,
					2008-10-30 06:01:00.0,
					Thu Oct 30 06:01:00 GMT 2008,
					2008-10-30 06:01:00.0"/>
   </testcase>
   <testcase testName="testSubDateTimeGivingDateValue"
             fieldName="testSubDateTimeGivingDateValue"
             dataType="DateOnly"
             formula="DateValue(customdatetime1__c-customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="2004:12:31:11:32:00,3.00"
                expectedOutput="Tue Dec 28 00:00:00 GMT 2004,
					2004-12-28 11:32:00.0,
					Tue Dec 28 00:00:00 GMT 2004,
					2004-12-28 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.00"
                expectedOutput="Tue Feb 24 00:00:00 GMT 2004,
					2004-02-24 10:34:00.0,
					Tue Feb 24 00:00:00 GMT 2004,
					2004-02-24 10:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.50"
                expectedOutput="Mon Dec 27 00:00:00 GMT 2004,
					2004-12-27 23:32:00.0,
					Mon Dec 27 00:00:00 GMT 2004,
					2004-12-27 23:32:00.0"/>
      <testData input="2004:02:28:10:34:00,4.50"
                expectedOutput="Mon Feb 23 00:00:00 GMT 2004,
					2004-02-23 22:34:00.0,
					Mon Feb 23 00:00:00 GMT 2004,
					2004-02-23 22:34:00.0"/>
      <testData input="2004:12:31:11:32:00,3.10"
                expectedOutput="Tue Dec 28 00:00:00 GMT 2004,
					2004-12-28 09:08:00.0,
					Tue Dec 28 00:00:00 GMT 2004,
					2004-12-28 09:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.10"
                expectedOutput="Tue Feb 24 00:00:00 GMT 2004,
					2004-02-24 08:10:00.0,
					Tue Feb 24 00:00:00 GMT 2004,
					2004-02-24 08:10:00.0"/>
      <testData input="2004:12:31:11:32:00,3.60"
                expectedOutput="Mon Dec 27 00:00:00 GMT 2004,
					2004-12-27 21:08:00.0,
					Mon Dec 27 00:00:00 GMT 2004,
					2004-12-27 21:08:00.0"/>
      <testData input="2004:02:28:10:34:00,4.60"
                expectedOutput="Mon Feb 23 00:00:00 GMT 2004,
					2004-02-23 20:10:00.0,
					Mon Feb 23 00:00:00 GMT 2004,
					2004-02-23 20:10:00.0"/>
      <testData input="2004:12:31:23:32:00,0.50"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:23:34:00,0.40"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 13:58:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 13:58:00.0"/>
      <testData input="2004:02:28:23:34:00,1.00"
                expectedOutput="Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 23:34:00.0,
					Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 23:34:00.0"/>
      <testData input="2004:02:28:01:34:00,1.00"
                expectedOutput="Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 01:34:00.0,
					Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 01:34:00.0"/>
      <testData input="2004:02:28:23:34:00:PST,1.00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:29:07:34:00:GMT,1.00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 07:34:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 07:34:00.0"/>
      <testData input="2004:02:28:01:34:00:PST,1.00"
                expectedOutput="Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 09:34:00.0,
					Fri Feb 27 00:00:00 GMT 2004,
					2004-02-27 09:34:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16666"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:00:01.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:00:01.0"/>
      <testData input="2009:02:07:10:00:00,0.166666"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:00:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:00:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16596"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.1659664"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596643"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:01.0"/>
      <testData input="2009:02:07:10:00:00,0.16596644"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.1659665"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,0.16597"
                expectedOutput="Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0,
					Sat Feb 07 00:00:00 GMT 2009,
					2009-02-07 06:01:00.0"/>
      <testData input="2009:02:07:10:00:00,100.16597"
                expectedOutput="Thu Oct 30 00:00:00 GMT 2008,
					2008-10-30 06:01:00.0,
					Thu Oct 30 00:00:00 GMT 2008,
					2008-10-30 06:01:00.0"/>
   </testcase>
   <testcase testName="testOriginDateTime"
             fieldName="testOriginDateTime"
             dataType="DateTime"
             formula="$System.originDateTime"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Mon Jan 01 00:00:00 GMT 1900,
					1900-01-01 00:00:00.0,
					Mon Jan 01 00:00:00 GMT 1900,
					1900-01-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateTimeText"
             fieldName="testDateTimeText"
             dataType="Text"
             formula="Text(customdatetime1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00"
                expectedOutput="2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z"/>
      <testData input="2004:02:28:10:34:00"
                expectedOutput="2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z"/>
      <testData input="2004:12:31:11:32:00"
                expectedOutput="2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z"/>
      <testData input="2004:02:28:10:34:00"
                expectedOutput="2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z"/>
      <testData input="2004:12:31:11:32:00"
                expectedOutput="2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z"/>
      <testData input="2004:02:28:10:34:00"
                expectedOutput="2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z"/>
      <testData input="2004:12:31:11:32:00"
                expectedOutput="2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z,
					2004-12-31 11:32:00Z"/>
      <testData input="2004:02:28:10:34:00"
                expectedOutput="2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z,
					2004-02-28 10:34:00Z"/>
      <testData input="2004:12:31:23:32:00"
                expectedOutput="2004-12-31 23:32:00Z,
					2004-12-31 23:32:00Z,
					2004-12-31 23:32:00Z,
					2004-12-31 23:32:00Z"/>
      <testData input="2004:02:28:23:34:00"
                expectedOutput="2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z"/>
      <testData input="2004:02:28:23:34:00"
                expectedOutput="2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z,
					2004-02-28 23:34:00Z"/>
      <testData input="2004:02:28:01:34:00"
                expectedOutput="2004-02-28 01:34:00Z,
					2004-02-28 01:34:00Z,
					2004-02-28 01:34:00Z,
					2004-02-28 01:34:00Z"/>
      <testData input="2004:02:28:23:34:00:PST"
                expectedOutput="2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z"/>
      <testData input="2004:02:29:07:34:00:GMT"
                expectedOutput="2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z,
					2004-02-29 07:34:00Z"/>
      <testData input="2004:02:28:01:34:00:PST"
                expectedOutput="2004-02-28 09:34:00Z,
					2004-02-28 09:34:00Z,
					2004-02-28 09:34:00Z,
					2004-02-28 09:34:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
      <testData input="2009:02:07:10:00:00"
                expectedOutput="2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z,
					2009-02-07 10:00:00Z"/>
   </testcase>
   <testcase testName="testMonths"
             fieldName="testMonths"
             dataType="Double"
             formula="month(customdate1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <testData input="2023:02:27" expectedOutput="2,
					2,
					2,
					2"/>
   </testcase>
   <testcase testName="testMultiplySimple"
             fieldName="testMultiplySimple"
             dataType="Double"
             formula="(customcurrency1__c*customcurrency2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <testData input="20,40" expectedOutput="800,
					800,
					800,
					800"/>
      <testData input="12.234, 46.456"
                expectedOutput="568.342704,
					568.342704,
					568.342704,
					568.342704"/>
      <testData input="-200,
					-200" expectedOutput="40000,
					40000,
					40000,
					40000"/>
      <testData input="0,
					0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789,123456789"
                expectedOutput="15241578750190521,
					15241578750190520,
					15241578750190521,
					15241578750190520"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="15241578780673678.515622620750190521,
					15241578780673680,
					15241578780673678.515622620750190521,
					15241578780673680"/>
      <testData input="0.0024, 0.0050"
                expectedOutput="0.00001200,
					0.000012,
					0.00001200,
					0.000012"/>
      <testData input="0.00000009, 0.000000009"
                expectedOutput="0.00000000000000081,
					0,
					0.00000000000000081,
					0"/>
      <testData input="-1,
					-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789,-0.00"
                expectedOutput="0.00000000000,
					0,
					0.00000000000,
					0"/>
      <testData input="-0,-0" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testMultiplyWithDivideExpr"
             fieldName="testMultiplyWithDivideExpr"
             dataType="Currency"
             formula="(customformula0__c*customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="(custompercent1__c/customcurrency1__c)">
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
      </referenceField>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="100,200,100"
                expectedOutput="0.500,
					0.5,
					0.500,
					0.5"/>
      <testData input="4,4,4"
                expectedOutput="0.04,
					0.04,
					0.04,
					0.04"/>
      <testData input="-1,-1,-1"
                expectedOutput="-0.01,
					-0.01,
					-0.01,
					-0.01"/>
      <testData input="123456789,123456789,12345678"
                expectedOutput="123456.78,
					123456.7799999999,
					123456.78,
					123456.7799999999"/>
      <testData input="-9,-22,10"
                expectedOutput="0.04090909090909090909090909090909,
					0.0409090909090909,
					0.04090909090909090909090909090909,
					0.0409090909090909"/>
      <testData input="9,-6,10"
                expectedOutput="-0.150,
					-0.1499999999999999,
					-0.150,
					-0.1499999999999999"/>
      <testData input=",2,20" expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input="0,2,20" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="0.2,0.02,.002"
                expectedOutput="0.0002,
					0.00020,
					0.0002,
					0.00020"/>
      <testData input="0.2,0.002,.02"
                expectedOutput="0.02,
					0.02,
					0.02,
					0.02"/>
      <testData input="1.11,1.22,1.33"
                expectedOutput="0.01210081967213114754098360655738,
					0.01210081967213114,
					0.01210081967213114754098360655738,
					0.01210081967213114"/>
   </testcase>
   <testcase testName="testIfTextCompareNotEqualReturnNum"
             fieldName="testIfTextCompareNotEqualReturnNum"
             dataType="Currency"
             formula="IF((customtext1__c&lt;&gt;customtext2__c),customnumber1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="123456789,123456789,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input=",10.24,200,300" expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="10.24,,200,300" expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input=",,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="200, -200.434, 200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="0,0,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.00123456789,
					0.001234567889999999,
					0.00123456789,
					0.001234567889999999"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
   </testcase>
   <testcase testName="testIfTextCompareEqualReturnNum"
             fieldName="testIfTextCompareEqualReturnNum"
             dataType="Percent"
             formula="IF((customtext1__c=customtext2__c),customnumber1__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input=",10.24,200,300" expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="10.24,,200,300" expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input=",,200,300" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="200, -200.434, 200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="0,0,200,300" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
   </testcase>
   <testcase testName="testIfTextCompareEqualReturnDate"
             fieldName="testIfTextCompareEqualReturnDate"
             dataType="DateOnly"
             formula="IF((customtext1__c=customemail1__c),customdate1__c,customformula1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customformula1"
                      dataType="DateOnly"
                      formula="(customdate2__c+customnumber1__c)">
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
         <referenceField fieldName="customnumber1" dataType="Double"/>
      </referenceField>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="sriKanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikaNth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,aa@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input=",srikanth@yahoo.com,2004:12:31,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,,2004:12:31,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input=",,2004:12:31,2004:12:31,20"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,,2004:12:31,20"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,,20"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srianth@yahoo.com,,2004:12:31,20"
                expectedOutput="Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0,
					Thu Jan 20 00:00:00 GMT 2005,
					2005-01-20 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,,,"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",,,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="srikanth@yahoo.com,srikanth@yahoo.com,2004:12:31,2004:12:31,-30"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfTextCompareEqualReturnDateTime"
             fieldName="testIfTextCompareEqualReturnDateTime"
             dataType="DateTime"
             formula="IF((customphone1__c=customphone2__c),customformula1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customphone2" dataType="phone"/>
      <referenceField fieldName="customformula1"
                      dataType="DateTime"
                      formula="(customdatetime1__c-customcurrency1__c)">
         <referenceField fieldName="customdatetime1" dataType="DateTime"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
      </referenceField>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="510 797 4647,510 797 4647,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Mon Dec 27 04:48:00 GMT 2004,
					2004-12-27 04:48:00.0,
					Mon Dec 27 04:48:00 GMT 2004,
					2004-12-27 04:48:00.0"/>
      <testData input="510-797-4647,510 797 4647,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="510 797 4657,510 797 4647,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="510 797 4647,510 797 4657,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="510 797 4647,510 797 4647,2004:12:31:12:00:00,-.3,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 19:12:00 GMT 2004,
					2004-12-31 19:12:00.0,
					Fri Dec 31 19:12:00 GMT 2004,
					2004-12-31 19:12:00.0"/>
      <testData input="510 797 4647,510 797 4647,2004:02:28:12:00:00,12.3,2004:12:31:00:00:00"
                expectedOutput="Mon Feb 16 04:48:00 GMT 2004,
					2004-02-16 04:48:00.0,
					Mon Feb 16 04:48:00 GMT 2004,
					2004-02-16 04:48:00.0"/>
      <testData input="510 797 4647,510 797 4647,,4.3,2004:12:31:00:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="510 797 4647,510 797 4647,2004:12:31:12:00:00,,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 12:00:00 GMT 2004,
					2004-12-31 12:00:00.0,
					null,
					null"/>
      <testData input="510 797 4647,510 797 4657,2004:12:31:12:00:00,4.3,2004:02:27:22:12:59"
                expectedOutput="Fri Feb 27 22:12:59 GMT 2004,
					2004-02-27 22:12:59.0,
					Fri Feb 27 22:12:59 GMT 2004,
					2004-02-27 22:12:59.0"/>
      <testData input="510 797 4647,510 797 4657,2004:12:31:12:00:00,4.3,"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",510 797 4657,2004:12:31:12:00:00,4.3,"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="510 797 4647,,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input=",,2004:12:31:12:00:00,4.3,2004:12:31:00:00:00"
                expectedOutput="Mon Dec 27 04:48:00 GMT 2004,
					2004-12-27 04:48:00.0,
					Mon Dec 27 04:48:00 GMT 2004,
					2004-12-27 04:48:00.0"/>
      <testData input=",,,," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfTextCompareEqualReturnText"
             fieldName="testIfTextCompareEqualReturnText"
             dataType="Text"
             formula="IF((customtext1__c=customtext2__c), &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfUsesTrue"
             fieldName="testIfUsesTrue"
             dataType="Double"
             formula="IF(true,1,0)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testIfUsesFalse"
             fieldName="testIfUsesFalse"
             dataType="Percent"
             formula="IF(false,1,0)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testIfIf"
             fieldName="testIfIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, true, false),  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfNullThenIf"
             fieldName="testIfNullThenIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, null, false),  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIfNullElseIf"
             fieldName="testIfNullElseIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, true, null),  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfNullNullIf"
             fieldName="testIfNullNullIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, null, null) = 0,  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa,aaaa" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIfNotNull"
             fieldName="testIfNotNull"
             dataType="Text"
             formula="if (not(null), &#34;True&#34;, &#34;False&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="False,
					False,
					False,
					False"/>
   </testcase>
   <testcase testName="testIfAndNull"
             fieldName="testIfAndNull"
             dataType="Text"
             formula="IF(AND(null,customcheckbox1__c),&#34;T&#34;,&#34;F&#34;) &amp; IF(AND(customcheckbox1__c,null),&#34;T&#34;,&#34;F&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <testData input="true" expectedOutput="FF,
					FF,
					FF,
					FF"/>
      <testData input="false" expectedOutput="FF,
					FF,
					FF,
					FF"/>
   </testcase>
   <testcase testName="testIfOrNull"
             fieldName="testIfOrNull"
             dataType="Text"
             formula="IF(OR(null,customcheckbox1__c),&#34;T&#34;,&#34;F&#34;) &amp; IF(OR(customcheckbox1__c,null),&#34;T&#34;,&#34;F&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <testData input="true" expectedOutput="TT,
					TT,
					TT,
					TT"/>
      <testData input="false" expectedOutput="FF,
					FF,
					FF,
					FF"/>
   </testcase>
   <testcase testName="testIfNumIf"
             fieldName="testIfNumIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, 1, 2) = 1,  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfNumNullIf"
             fieldName="testIfNumNullIf"
             dataType="Text"
             formula="if( if (customtext1__c=customtext2__c, 1, null) = 1,  &#34;true&#34;, &#34;false&#34;)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="aaaa," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",bbbb" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="aaaa,aaaa" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfNumCompareEqual"
             fieldName="testIfNumCompareEqual"
             dataType="Text"
             formula="IF((customnumber1__c=customcurrency1__c),customtext1__c,customphone1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customphone1" dataType="phone"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="12345678,1234567,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input=",10.24,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="10.24,,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input=",,200,300" expectedOutput="200,
					200,
					300,
					300"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput=" 300,
					300,
					300,
					300"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="0,0,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
   </testcase>
   <testcase testName="testIfNumCompareLess"
             fieldName="testIfNumCompareLess"
             dataType="Percent"
             formula="IF((customcurrency1__c&lt;customcurrency2__c),customcurrency3__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customcurrency3" dataType="Currency"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input=",10.24,200,300" expectedOutput="20000,
					20000,
					30000,
					30000"/>
      <testData input="10.24,,200,300" expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input=",,200,300" expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="200, -200.434, 200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="0,0,200,300" expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="12.3456789,
					12.34567889999999,
					12.3456789,
					12.34567889999999"/>
   </testcase>
   <testcase testName="testIfNumCompareLessOrEqual"
             fieldName="testIfNumCompareLessOrEqual"
             dataType="Currency"
             formula="IF((customcurrency1__c&lt;=customcurrency2__c),customcurrency3__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customcurrency3" dataType="Currency"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input=",10.24,200,300" expectedOutput="200,
					200.0,
					300,
					300.0"/>
      <testData input="10.24,,200,300" expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input=",,200,300" expectedOutput="200,
					200.0,
					300,
					300.0"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="200, -200.434, 200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="0,0,200,300" expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
   </testcase>
   <testcase testName="testIfNumCompareNotEqual"
             fieldName="testIfNumCompareNotEqual"
             dataType="Double"
             formula="IF((customcurrency1__c&lt;&gt;customcurrency2__c),customcurrency3__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customcurrency3" dataType="Currency"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="12345678,1234567,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input=",10.24,200,300" expectedOutput="200,
					200,
					300,
					300"/>
      <testData input="10.24,,200,300" expectedOutput="200,
					200,
					300,
					300"/>
      <testData input=",,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="0,0,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
   </testcase>
   <testcase testName="testIfContainsFunc"
             fieldName="testIfContainsFunc"
             dataType="Double"
             formula="IF(CONTAINS(customtext1__c,customtext2__c),ABS(customnumber1__c),FLOOR(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="12345678,1234567,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input=",10.24,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="10.24,,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input=",,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="0,0,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="201,200,0.123456789,0.123456789" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="200,201,0.123456789,0.123456789" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testDate"
             fieldName="testDate"
             dataType="DateOnly"
             formula="DATE(customnumber1__c,customnumber2__c,customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2007-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2007-03-01 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Fri Feb 29 00:00:00 GMT 2008,
					2008-02-29 00:00:00.0,
					Fri Feb 29 00:00:00 GMT 2008,
					2008-02-29 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="10000,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="9999,12,31"
                expectedOutput="Fri Dec 31 00:00:00 GMT 9999,
					9999-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 9999,
					9999-12-31 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1000,3,2"
                expectedOutput="Sat Mar 02 00:00:00 GMT 1000,
					1000-03-02 00:00:00.0,
					Sat Mar 02 00:00:00 GMT 1000,
					1000-03-02 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0,
					Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0,
					Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0,
					Mon Mar 02 00:00:00 GMT 2009,
					2009-03-02 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Thu Dec 31 00:00:00 GMT 2009,
					2009-12-31 00:00:00.0,
					Thu Dec 31 00:00:00 GMT 2009,
					2009-12-31 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,12,0.9"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,0.9,26"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009,2,3"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,3,-4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="0,2,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,2,0"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2013,2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2013-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2013-03-01 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0,
					Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Mon Feb 29 00:00:00 GMT 2016,
					2016-02-29 00:00:00.0,
					Mon Feb 29 00:00:00 GMT 2016,
					2016-02-29 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2016-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2016-03-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateConstVarVar"
             fieldName="testDateConstVarVar"
             dataType="DateOnly"
             formula="DATE(2012,customnumber2__c,customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="10000,3,2"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="9999,12,31"
                expectedOutput="Mon Dec 31 00:00:00 GMT 2012,
					2012-12-31 00:00:00.0,
					Mon Dec 31 00:00:00 GMT 2012,
					2012-12-31 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Sun Jan 01 00:00:00 GMT 2012,
					2012-01-01 00:00:00.0,
					Sun Jan 01 00:00:00 GMT 2012,
					2012-01-01 00:00:00.0"/>
      <testData input="1000,3,2"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2010,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Mon Dec 31 00:00:00 GMT 2012,
					2012-12-31 00:00:00.0,
					Mon Dec 31 00:00:00 GMT 2012,
					2012-12-31 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,12,0.9"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,0.9,26"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009,2,3"
                expectedOutput="Fri Feb 03 00:00:00 GMT 2012,
					2012-02-03 00:00:00.0,
					Fri Feb 03 00:00:00 GMT 2012,
					2012-02-03 00:00:00.0"/>
      <testData input="2009,-3,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,3,-4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0,
					Fri Mar 02 00:00:00 GMT 2012,
					2012-03-02 00:00:00.0"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="0,2,2"
                expectedOutput="Thu Feb 02 00:00:00 GMT 2012,
					2012-02-02 00:00:00.0,
					Thu Feb 02 00:00:00 GMT 2012,
					2012-02-02 00:00:00.0"/>
      <testData input="2012,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,2,0"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2013,2,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2012-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2012-03-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateVarConstVar"
             fieldName="testDateVarConstVar"
             dataType="DateOnly"
             formula="DATE(customnumber1__c,12,customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Sat Dec 29 00:00:00 GMT 2007,
					2007-12-29 00:00:00.0,
					Sat Dec 29 00:00:00 GMT 2007,
					2007-12-29 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Mon Dec 29 00:00:00 GMT 2008,
					2008-12-29 00:00:00.0,
					Mon Dec 29 00:00:00 GMT 2008,
					2008-12-29 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="10000,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="9999,12,31"
                expectedOutput="Fri Dec 31 00:00:00 GMT 9999,
					9999-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 9999,
					9999-12-31 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1000,3,2"
                expectedOutput="Mon Dec 02 00:00:00 GMT 1000,
					1000-12-02 00:00:00.0,
					Mon Dec 02 00:00:00 GMT 1000,
					1000-12-02 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Wed Dec 29 00:00:00 GMT 2010,
					2010-12-29 00:00:00.0,
					Wed Dec 29 00:00:00 GMT 2010,
					2010-12-29 00:00:00.0"/>
      <testData input="2010,2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,0,2"
                expectedOutput="Thu Dec 02 00:00:00 GMT 2010,
					2010-12-02 00:00:00.0,
					Thu Dec 02 00:00:00 GMT 2010,
					2010-12-02 00:00:00.0"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0,
					Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0,
					Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0,
					Wed Dec 02 00:00:00 GMT 2009,
					2009-12-02 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Thu Dec 31 00:00:00 GMT 2009,
					2009-12-31 00:00:00.0,
					Thu Dec 31 00:00:00 GMT 2009,
					2009-12-31 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,12,0.9"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,0.9,26"
                expectedOutput="Sat Dec 26 00:00:00 GMT 2009,
					2009-12-26 00:00:00.0,
					Sat Dec 26 00:00:00 GMT 2009,
					2009-12-26 00:00:00.0"/>
      <testData input="-2009,2,3"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3,4"
                expectedOutput="Fri Dec 04 00:00:00 GMT 2009,
					2009-12-04 00:00:00.0,
					Fri Dec 04 00:00:00 GMT 2009,
					2009-12-04 00:00:00.0"/>
      <testData input="2009,3,-4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Fri Dec 04 00:00:00 GMT 2009,
					2009-12-04 00:00:00.0,
					Fri Dec 04 00:00:00 GMT 2009,
					2009-12-04 00:00:00.0"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="0,2,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,0,2"
                expectedOutput="Sun Dec 02 00:00:00 GMT 2012,
					2012-12-02 00:00:00.0,
					Sun Dec 02 00:00:00 GMT 2012,
					2012-12-02 00:00:00.0"/>
      <testData input="2012,2,0"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2013,2,29"
                expectedOutput="Sun Dec 29 00:00:00 GMT 2013,
					2013-12-29 00:00:00.0,
					Sun Dec 29 00:00:00 GMT 2013,
					2013-12-29 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Sat Dec 28 00:00:00 GMT 2013,
					2013-12-28 00:00:00.0,
					Sat Dec 28 00:00:00 GMT 2013,
					2013-12-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Wed Dec 28 00:00:00 GMT 2016,
					2016-12-28 00:00:00.0,
					Wed Dec 28 00:00:00 GMT 2016,
					2016-12-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Thu Dec 29 00:00:00 GMT 2016,
					2016-12-29 00:00:00.0,
					Thu Dec 29 00:00:00 GMT 2016,
					2016-12-29 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Fri Dec 30 00:00:00 GMT 2016,
					2016-12-30 00:00:00.0,
					Fri Dec 30 00:00:00 GMT 2016,
					2016-12-30 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateVarVarConst"
             fieldName="testDateVarVarConst"
             dataType="DateOnly"
             formula="DATE(customnumber1__c,customnumber2__c,28)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Wed Feb 28 00:00:00 GMT 2007,
					2007-02-28 00:00:00.0,
					Wed Feb 28 00:00:00 GMT 2007,
					2007-02-28 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Thu Feb 28 00:00:00 GMT 2008,
					2008-02-28 00:00:00.0,
					Thu Feb 28 00:00:00 GMT 2008,
					2008-02-28 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2007,
					2007-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2007,
					2007-03-28 00:00:00.0"/>
      <testData input="10000,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="9999,12,31"
                expectedOutput="Tue Dec 28 00:00:00 GMT 9999,
					9999-12-28 00:00:00.0,
					Tue Dec 28 00:00:00 GMT 9999,
					9999-12-28 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1000,3,2"
                expectedOutput="Thu Mar 28 00:00:00 GMT 1000,
					1000-03-28 00:00:00.0,
					Thu Mar 28 00:00:00 GMT 1000,
					1000-03-28 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,2,"
                expectedOutput="Sun Feb 28 00:00:00 GMT 2010,
					2010-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 2010,
					2010-02-28 00:00:00.0"/>
      <testData input=",2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0,
					Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0,
					Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0,
					Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0,
					Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0,
					Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0"/>
      <testData input="2009,12,0.9"
                expectedOutput="Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0,
					Mon Dec 28 00:00:00 GMT 2009,
					2009-12-28 00:00:00.0"/>
      <testData input="2009,0.9,26"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009,2,3"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,3,-4"
                expectedOutput="Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0,
					Sat Mar 28 00:00:00 GMT 2009,
					2009-03-28 00:00:00.0"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2009,
					2009-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2009,
					2009-02-28 00:00:00.0"/>
      <testData input="0,2,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,2,0"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2013,2,29"
                expectedOutput="Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0,
					Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0,
					Thu Feb 28 00:00:00 GMT 2013,
					2013-02-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 2016,
					2016-02-28 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateVarConstConst"
             fieldName="testDateVarConstConst"
             dataType="DateOnly"
             formula="DATE(customnumber1__c,11,25)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Sun Nov 25 00:00:00 GMT 2007,
					2007-11-25 00:00:00.0,
					Sun Nov 25 00:00:00 GMT 2007,
					2007-11-25 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Tue Nov 25 00:00:00 GMT 2008,
					2008-11-25 00:00:00.0,
					Tue Nov 25 00:00:00 GMT 2008,
					2008-11-25 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Sun Nov 25 00:00:00 GMT 2007,
					2007-11-25 00:00:00.0,
					Sun Nov 25 00:00:00 GMT 2007,
					2007-11-25 00:00:00.0"/>
      <testData input="10000,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="9999,12,31"
                expectedOutput="Thu Nov 25 00:00:00 GMT 9999,
					9999-11-25 00:00:00.0,
					Thu Nov 25 00:00:00 GMT 9999,
					9999-11-25 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1000,3,2"
                expectedOutput="Mon Nov 25 00:00:00 GMT 1000,
					1000-11-25 00:00:00.0,
					Mon Nov 25 00:00:00 GMT 1000,
					1000-11-25 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0,
					Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0"/>
      <testData input="2010,2,"
                expectedOutput="Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0,
					Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0"/>
      <testData input=",2,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,0,2"
                expectedOutput="Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0,
					Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0,
					Thu Nov 25 00:00:00 GMT 2010,
					2010-11-25 00:00:00.0"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,12,0.9"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,0.9,26"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="-2009,2,3"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3,4"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,3,-4"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0,
					Wed Nov 25 00:00:00 GMT 2009,
					2009-11-25 00:00:00.0"/>
      <testData input="0,2,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,0,2"
                expectedOutput="Sun Nov 25 00:00:00 GMT 2012,
					2012-11-25 00:00:00.0,
					Sun Nov 25 00:00:00 GMT 2012,
					2012-11-25 00:00:00.0"/>
      <testData input="2012,2,0"
                expectedOutput="Sun Nov 25 00:00:00 GMT 2012,
					2012-11-25 00:00:00.0,
					Sun Nov 25 00:00:00 GMT 2012,
					2012-11-25 00:00:00.0"/>
      <testData input="2013,2,29"
                expectedOutput="Mon Nov 25 00:00:00 GMT 2013,
					2013-11-25 00:00:00.0,
					Mon Nov 25 00:00:00 GMT 2013,
					2013-11-25 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Mon Nov 25 00:00:00 GMT 2013,
					2013-11-25 00:00:00.0,
					Mon Nov 25 00:00:00 GMT 2013,
					2013-11-25 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0,
					Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0,
					Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0,
					Fri Nov 25 00:00:00 GMT 2016,
					2016-11-25 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateConstVarConst"
             fieldName="testDateConstVarConst"
             dataType="DateOnly"
             formula="DATE(2012,customnumber2__c,28)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="10000,3,2"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="9999,12,31"
                expectedOutput="Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0,
					Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0"/>
      <testData input="10000,1,1"
                expectedOutput="Sat Jan 28 00:00:00 GMT 2012,
					2012-01-28 00:00:00.0,
					Sat Jan 28 00:00:00 GMT 2012,
					2012-01-28 00:00:00.0"/>
      <testData input="1000,3,2"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,2,"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input=",2,29"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2010,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input=",,11"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2009.5,3,2"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0,
					Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0"/>
      <testData input="2009,12,32.1"
                expectedOutput="Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0,
					Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0"/>
      <testData input="2009,12,0.9"
                expectedOutput="Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0,
					Fri Dec 28 00:00:00 GMT 2012,
					2012-12-28 00:00:00.0"/>
      <testData input="2009,0.9,26"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009,2,3"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2009,-3,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,3,-4"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0,
					Wed Mar 28 00:00:00 GMT 2012,
					2012-03-28 00:00:00.0"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="0,2,2"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2012,0,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2012,2,0"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2013,2,29"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateConstConstVar"
             fieldName="testDateConstConstVar"
             dataType="DateOnly"
             formula="DATE(2012,11,customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2007,2,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2008,2,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2007,3,32"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="10000,3,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="9999,12,31"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="10000,1,1"
                expectedOutput="Thu Nov 01 00:00:00 GMT 2012,
					2012-11-01 00:00:00.0,
					Thu Nov 01 00:00:00 GMT 2012,
					2012-11-01 00:00:00.0"/>
      <testData input="1000,3,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2010,,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2010,2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2010,0,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input=",,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="2010,,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",2,"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input=",,11"
                expectedOutput="Sun Nov 11 00:00:00 GMT 2012,
					2012-11-11 00:00:00.0,
					Sun Nov 11 00:00:00 GMT 2012,
					2012-11-11 00:00:00.0"/>
      <testData input="2009.5,3,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2009,3.5,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2009,3,2.5"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2009,12.5,31.5"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,12,32.1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,12,0.9"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2009,0.9,26"
                expectedOutput="Mon Nov 26 00:00:00 GMT 2012,
					2012-11-26 00:00:00.0,
					Mon Nov 26 00:00:00 GMT 2012,
					2012-11-26 00:00:00.0"/>
      <testData input="-2009,2,3"
                expectedOutput="Sat Nov 03 00:00:00 GMT 2012,
					2012-11-03 00:00:00.0,
					Sat Nov 03 00:00:00 GMT 2012,
					2012-11-03 00:00:00.0"/>
      <testData input="2009,-3,4"
                expectedOutput="Sun Nov 04 00:00:00 GMT 2012,
					2012-11-04 00:00:00.0,
					Sun Nov 04 00:00:00 GMT 2012,
					2012-11-04 00:00:00.0"/>
      <testData input="2009,3,-4"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-2009.2,3,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2009,-3.2,4"
                expectedOutput="Sun Nov 04 00:00:00 GMT 2012,
					2012-11-04 00:00:00.0,
					Sun Nov 04 00:00:00 GMT 2012,
					2012-11-04 00:00:00.0"/>
      <testData input="2009,2,-4.2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="0,2,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2012,0,2"
                expectedOutput="Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0,
					Fri Nov 02 00:00:00 GMT 2012,
					2012-11-02 00:00:00.0"/>
      <testData input="2012,2,0"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="2013,2,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2013,2,28"
                expectedOutput="Wed Nov 28 00:00:00 GMT 2012,
					2012-11-28 00:00:00.0,
					Wed Nov 28 00:00:00 GMT 2012,
					2012-11-28 00:00:00.0"/>
      <testData input="2016,2,28"
                expectedOutput="Wed Nov 28 00:00:00 GMT 2012,
					2012-11-28 00:00:00.0,
					Wed Nov 28 00:00:00 GMT 2012,
					2012-11-28 00:00:00.0"/>
      <testData input="2016,2,29"
                expectedOutput="Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0,
					Thu Nov 29 00:00:00 GMT 2012,
					2012-11-29 00:00:00.0"/>
      <testData input="2016,2,30"
                expectedOutput="Fri Nov 30 00:00:00 GMT 2012,
					2012-11-30 00:00:00.0,
					Fri Nov 30 00:00:00 GMT 2012,
					2012-11-30 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateLeapYear"
             fieldName="testDateLeapYear"
             dataType="DateOnly"
             formula="DATE(2012,2,day__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="day" dataType="Double"/>
      <testData input="1"
                expectedOutput="Wed Feb 01 00:00:00 GMT 2012,
					2012-02-01 00:00:00.0,
					Wed Feb 01 00:00:00 GMT 2012,
					2012-02-01 00:00:00.0"/>
      <testData input="28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="30"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
   </testcase>
   <testcase testName="testDateNonLeapYear"
             fieldName="testDateNonLeapYear"
             dataType="DateOnly"
             formula="DATE(2011,2,day__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="day" dataType="Double"/>
      <testData input="1"
                expectedOutput="Tue Feb 01 00:00:00 GMT 2011,
					2011-02-01 00:00:00.0,
					Tue Feb 01 00:00:00 GMT 2011,
					2011-02-01 00:00:00.0"/>
      <testData input="28"
                expectedOutput="Mon Feb 28 00:00:00 GMT 2011,
					2011-02-28 00:00:00.0,
					Mon Feb 28 00:00:00 GMT 2011,
					2011-02-28 00:00:00.0"/>
      <testData input="29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="30"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
   </testcase>
   <testcase testName="testDateLeapYear2"
             fieldName="testDateLeapYear2"
             dataType="DateOnly"
             formula="DATE(2012,month__c,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="month" dataType="Double"/>
      <testData input="2"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="1"
                expectedOutput="Sun Jan 29 00:00:00 GMT 2012,
					2012-01-29 00:00:00.0,
					Sun Jan 29 00:00:00 GMT 2012,
					2012-01-29 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateNonLeapYear2"
             fieldName="testDateNonLeapYear2"
             dataType="DateOnly"
             formula="DATE(2011,month__c,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="month" dataType="Double"/>
      <testData input="2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1"
                expectedOutput="Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0,
					Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateLeapConstantMonth"
             fieldName="testDateLeapConstantMonth"
             dataType="DateOnly"
             formula="DATE(year__c,2,day__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="year" dataType="Double"/>
      <referenceField fieldName="day" dataType="Double"/>
      <testData input="2001,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2001-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2001-03-01 00:00:00.0"/>
      <testData input="2001,28"
                expectedOutput="Wed Feb 28 00:00:00 GMT 2001,
					2001-02-28 00:00:00.0,
					Wed Feb 28 00:00:00 GMT 2001,
					2001-02-28 00:00:00.0"/>
      <testData input="2012,28"
                expectedOutput="Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0,
					Tue Feb 28 00:00:00 GMT 2012,
					2012-02-28 00:00:00.0"/>
      <testData input="2012,29"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2300,29"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2300-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2300-03-01 00:00:00.0"/>
      <testData input="2300,28"
                expectedOutput="Wed Feb 28 00:00:00 GMT 2300,
					2300-02-28 00:00:00.0,
					Wed Feb 28 00:00:00 GMT 2300,
					2300-02-28 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateLeapConstantDay"
             fieldName="testDateLeapConstantDay"
             dataType="DateOnly"
             formula="DATE(year__c,month__c,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="year" dataType="Double"/>
      <referenceField fieldName="month" dataType="Double"/>
      <testData input="2012,1"
                expectedOutput="Sun Jan 29 00:00:00 GMT 2012,
					2012-01-29 00:00:00.0,
					Sun Jan 29 00:00:00 GMT 2012,
					2012-01-29 00:00:00.0"/>
      <testData input="2012,2"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2013,1"
                expectedOutput="Tue Jan 29 00:00:00 GMT 2013,
					2013-01-29 00:00:00.0,
					Tue Jan 29 00:00:00 GMT 2013,
					2013-01-29 00:00:00.0"/>
      <testData input="2013,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2013-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2013-03-01 00:00:00.0"/>
      <testData input="2100,2"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2100-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2100-03-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateAllConstants"
             fieldName="testDateAllConstants"
             dataType="DateOnly"
             formula="DATE(2012,2,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
   </testcase>
   <testcase testName="testDateAllConstantsNonLeap"
             fieldName="testDateAllConstantsNonLeap"
             dataType="DateOnly"
             formula="DATE(2011,2,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
   </testcase>
   <testcase testName="testDateVariableYear"
             fieldName="testDateVariableYear"
             dataType="DateOnly"
             formula="DATE(year__c,2,29)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="year" dataType="Double"/>
      <testData input="2011"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2011-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2011-03-01 00:00:00.0"/>
      <testData input="2012"
                expectedOutput="Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0,
					Wed Feb 29 00:00:00 GMT 2012,
					2012-02-29 00:00:00.0"/>
      <testData input="2000"
                expectedOutput="Tue Feb 29 00:00:00 GMT 2000,
					2000-02-29 00:00:00.0,
					Tue Feb 29 00:00:00 GMT 2000,
					2000-02-29 00:00:00.0"/>
      <testData input="1900"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					1900-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					1900-03-01 00:00:00.0"/>
      <testData input="2300"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					2300-03-01 00:00:00.0,
					Error: com.force.formula.FormulaEvaluationException,
					2300-03-01 00:00:00.0"/>
      <testData input="2400"
                expectedOutput="Tue Feb 29 00:00:00 GMT 2400,
					2400-02-29 00:00:00.0,
					Tue Feb 29 00:00:00 GMT 2400,
					2400-02-29 00:00:00.0"/>
      <testData input="2404"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2404,
					2404-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2404,
					2404-02-29 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfANDFunc"
             fieldName="testIfANDFunc"
             dataType="DateOnly"
             formula="IF(AND(customcheckbox1__c,customcheckbox2__c),customformula1__c,DATE(customnumber1__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox2" dataType="Boolean"/>
      <referenceField fieldName="customformula1"
                      dataType="DateOnly"
                      formula="IF(customcheckbox3__c,customdate1__c,customdate2__c)">
         <referenceField fieldName="customcheckbox3" dataType="Boolean"/>
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="true,false,true,2005:12:31,,2004,,20"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					null,
					null"/>
      <testData input="true,true,true,,2005:11:31,2004,12,01"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="true,true,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="true,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="false,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="true,true,false,,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,true,true,2005:12:31,,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="true,false,false,,,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,1900,12,01"
                expectedOutput="Sat Dec 01 00:00:00 GMT 1900,
					1900-12-01 00:00:00.0,
					Sat Dec 01 00:00:00 GMT 1900,
					1900-12-01 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,01,01"
                expectedOutput="Thu Jan 01 00:00:00 GMT 2004,
					2004-01-01 00:00:00.0,
					Thu Jan 01 00:00:00 GMT 2004,
					2004-01-01 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2003,02,28"
                expectedOutput="Fri Feb 28 00:00:00 GMT 2003,
					2003-02-28 00:00:00.0,
					Fri Feb 28 00:00:00 GMT 2003,
					2003-02-28 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,1999,12,31"
                expectedOutput="Fri Dec 31 00:00:00 GMT 1999,
					1999-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 1999,
					1999-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,02,29"
                expectedOutput="Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0,
					Sun Feb 29 00:00:00 GMT 2004,
					2004-02-29 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,02,20"
                expectedOutput="Fri Feb 20 00:00:00 GMT 2004,
					2004-02-20 00:00:00.0,
					Fri Feb 20 00:00:00 GMT 2004,
					2004-02-20 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfORFunc"
             fieldName="testIfORFunc"
             dataType="DateOnly"
             formula="IF(OR(customcheckbox1__c,customcheckbox2__c),IF(customcheckbox3__c,customdate1__c,customdate2__c),customformula2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox2" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox3" dataType="Boolean"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customformula2"
                      dataType="DateOnly"
                      formula="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
         <referenceField fieldName="customnumber3" dataType="Double"/>
      </referenceField>
      <testData input="true,false,true,2005:12:31,,2004,,20"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,true,true,,2005:11:31,2004,12,01"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="true,true,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="false,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0,
					Wed Dec 01 00:00:00 GMT 2004,
					2004-12-01 00:00:00.0"/>
      <testData input="true,true,false,,2005:11:31,2004,12,01"
                expectedOutput="Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0,
					Thu Dec 01 00:00:00 GMT 2005,
					2005-12-01 00:00:00.0"/>
      <testData input="true,true,true,2005:12:31,,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,false,,,2004,12,01"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="true,false,true,2005:12:31,,1900,12,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,01,01"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2003,02,28"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,1999,12,31"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,02,29"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="true,false,true,2005:12:31,,2004,02,20"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
   </testcase>
   <testcase testName="testBooleanAND"
             fieldName="testBooleanAND"
             dataType="Boolean"
             formula="AND(customformula1__c,OR(customcheckbox1__c,customcheckbox2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox2" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox3" dataType="Boolean"/>
      <referenceField fieldName="customformula1"
                      dataType="Boolean"
                      formula="customdate1__c &gt; customdate2__c">
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customformula2"
                      dataType="DateOnly"
                      formula="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
         <referenceField fieldName="customnumber3" dataType="Double"/>
      </referenceField>
      <testData input="true,false,true,2005:12:31,,2004,,20"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="false,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,false,,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,2005:12:31,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,false,,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,1900,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,01,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2003,02,28"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,1999,12,31"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,02,29"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,02,20"
                expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testBooleanEq"
             fieldName="testBooleanEq"
             dataType="Boolean"
             formula="customformula1__c = OR(customcheckbox1__c,customcheckbox2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox2" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox3" dataType="Boolean"/>
      <referenceField fieldName="customformula1"
                      dataType="Boolean"
                      formula="customdate1__c &gt; customdate2__c">
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customformula2"
                      dataType="DateOnly"
                      formula="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
         <referenceField fieldName="customnumber3" dataType="Double"/>
      </referenceField>
      <testData input="true,false,true,2005:12:31,,2004,,20"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="false,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,false,,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,true,2005:12:31,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,false,,,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,1900,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,01,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2003,02,28"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,1999,12,31"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,02,29"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,,2004,02,20"
                expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testBooleanNeq"
             fieldName="testBooleanNeq"
             dataType="Boolean"
             formula="customformula1__c != OR(customcheckbox1__c,customcheckbox2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox2" dataType="Boolean"/>
      <referenceField fieldName="customcheckbox3" dataType="Boolean"/>
      <referenceField fieldName="customformula1"
                      dataType="Boolean"
                      formula="customdate1__c &gt; customdate2__c">
         <referenceField fieldName="customdate1" dataType="DateOnly"/>
         <referenceField fieldName="customdate2" dataType="DateOnly"/>
      </referenceField>
      <referenceField fieldName="customformula2"
                      dataType="DateOnly"
                      formula="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
         <referenceField fieldName="customnumber3" dataType="Double"/>
      </referenceField>
      <testData input="true,false,true,2005:12:31,,2004,,20"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,true,,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,true,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,true,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="true,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="false,false,false,2005:12:31,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,false,,2005:11:31,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,true,true,2005:12:31,,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,false,,,2004,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,1900,12,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,2004,01,01"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,2003,02,28"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,1999,12,31"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,2004,02,29"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="true,false,true,2005:12:31,,2004,02,20"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfDateCompareGreaterThan"
             fieldName="testIfDateCompareGreaterThan"
             dataType="DateTime"
             formula="IF((customdate1__c&gt;customdate2__c),customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateTimeCompareGreaterThan"
             fieldName="testIfDateTimeCompareGreaterThan"
             dataType="DateOnly"
             formula="IF((customdatetime1__c&gt;customdatetime2__c),customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfContainsUsesText"
             fieldName="testIfContainsUsesText"
             dataType="Currency"
             formula="IF(CONTAINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,Gold,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,File,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,n F,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,n f,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,contract,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Works,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Hello World!,!,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Works Great and \&#34; and Works Greate Twoo \\,\\,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
   </testcase>
   <testcase testName="testIfContainsUsesTextArea"
             fieldName="testIfContainsUsesTextArea"
             dataType="Double"
             formula="IF(CONTAINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,Gold,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Golden File,File,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Golden File,n F,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="Golden File,n f,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,contract,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Works,200,300"
                expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="Hello World!,!,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Works Great and \&#34; and Works Greate Twoo \\,\\,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3,
					3,
					3"/>
   </testcase>
   <testcase testName="testIfContainsUsesEmail"
             fieldName="testIfContainsUsesEmail"
             dataType="Percent"
             formula="IF(CONTAINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="email@aa.com,aa,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="works@bvv.net,works@,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="testing@test.com,testing@,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="a@salesforce.com,salesforce.com,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="a@salesforce.com,Salesforce.com,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
   </testcase>
   <testcase testName="testIfContainsUsesPhone"
             fieldName="testIfContainsUsesPhone"
             dataType="Currency"
             formula="IF(CONTAINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,Gold,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,File,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,n F,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,n f,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,contract,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Works,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Hello World!,!,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Works Great and \&#34; and Works Greate Twoo \\,\\,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
   </testcase>
   <testcase testName="testIfBeginsUsesText"
             fieldName="testIfBeginsUsesText"
             dataType="Currency"
             formula="IF(BEGINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,File,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,n F,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,This is a very long text and works very well with this type of test and works better with more department wise contract and @ this #,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Nonexistant,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="!Hello World,!,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Hello World!,!,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="\\ Works Great and \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Works Great and \\ \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
   </testcase>
   <testcase testName="testIfBeginsUsesTextArea"
             fieldName="testIfBeginsUsesTextArea"
             dataType="Double"
             formula="IF(BEGINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,File,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="Golden File,n F,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,This is a very long text and works very well with this type of test and works better with more department wise contract and @ this #,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Nonexistant,200,300"
                expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="!Hello World,!,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Hello World!,!,200,300" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="\\ Works Great and \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="Works Great and \\ \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3,
					3,
					3"/>
   </testcase>
   <testcase testName="testIfBeginsUsesEmail"
             fieldName="testIfBeginsUsesEmail"
             dataType="Percent"
             formula="IF(BEGINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="email@aa.com,.com,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="works@bvv.net,works@,200,300"
                expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="works@bvv.net,WORKS@,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
      <testData input="a@salesforce.com,salesforce.com,200,300"
                expectedOutput="30000,
					30000,
					30000,
					30000"/>
   </testcase>
   <testcase testName="testIfBeginsUsesPhone"
             fieldName="testIfBeginsUsesPhone"
             dataType="Currency"
             formula="IF(BEGINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="Golden File,File,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,n F,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="Golden File,gold,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,This is a very long text and works very well with this type of test and works better with more department wise contract and @ this #,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this,Nonexistant,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="!Hello World,!,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Hello World!,!,200,300" expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="\\ Works Great and \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="Works Great and \\ \&#34; and Works Greate Twoo,\\,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
      <testData input="510 797 4647,510 797 4647,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="510-797-4647,510 797 4647,200,300"
                expectedOutput="3,
					3.0,
					3,
					3.0"/>
   </testcase>
   <testcase testName="testSimpleSubstitute"
             fieldName="testSimpleSubstitute"
             dataType="Text"
             formula="SUBSTITUTE(customtext1__c,customtext2__c,customtext3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtext2" dataType="Text"/>
      <referenceField fieldName="customtext3" dataType="Text"/>
      <testData input=",," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="Golden File,Golden,Platinum"
                expectedOutput="Platinum File,
					Platinum File,
					Platinum File,
					Platinum File"/>
        <testData input="No match,First,Second"
                  expectedOutput="No match,
					No match,
					No match,
					No match"/>
        <testData input="Salesforce,,"
                  expectedOutput="null,
					null,
					null,
					null"/>
        <testData input=",old,"
                  expectedOutput="null,
					null,
					null,
					null"/>
        <testData input=",,new"
                  expectedOutput="null,
					null,
					null,
					null"/>
        <testData input=",old,new"
                  expectedOutput="null,
					null,
					null,
					null"/>
        <testData input="Golden File,, Platinum"
                  expectedOutput="null,
					null,
					null,
					null"/>
        <testData input="Replace Space, ,No"
                  expectedOutput="ReplaceNoSpace,
					ReplaceNoSpace,
					ReplaceNoSpace,
					ReplaceNoSpace"/>
        <testData input="Replace All x x x,x,z"
                  expectedOutput="Replace All z z z,
					Replace All z z z,
					Replace All z z z,
					Replace All z z z"/>
        <testData input="Replace All xxx,x,z"
                  expectedOutput="Replace All zzz,
					Replace All zzz,
					Replace All zzz,
					Replace All zzz"/>
   </testcase>
   <testcase testName="testTextNum"
             fieldName="testTextNum"
             dataType="Text"
             formula="Text(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1234567890.0"
                expectedOutput="1234567890,
					1234567890.0,
					1234567890,
					1234567890.0"/>
      <testData input="1234567891.0"
                expectedOutput="1234567891,
					1234567891.0,
					1234567891,
					1234567891.0"/>
      <testData input="1234567890"
                expectedOutput="1234567890,
					1234567890.0,
					1234567890,
					1234567890.0"/>
      <testData input="1234567891"
                expectedOutput="1234567891,
					1234567891.0,
					1234567891,
					1234567891.0"/>
      <testData input="" expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testLenSimple"
             fieldName="testLenSimple"
             dataType="Double"
             formula="LEN(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true" expectedOutput="27,
					27,
					27,
					27"/>
      <testData input="making a way" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="blunder" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="makesense" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="does not make sense" expectedOutput="19,
					19,
					19,
					19"/>
      <testData input="working my way" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="e" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="172,
					172,
					172,
					172"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="52,
					52,
					52,
					52"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="57,
					57,
					57,
					57"/>
   </testcase>
   <testcase testName="testLenUsesText"
             fieldName="testLenUsesText"
             dataType="Double"
             formula="LEN(Text(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="0" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="2" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="3" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="4" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="7" expectedOutput="1,
					3,
					1,
					3"/>
      <testData input="12" expectedOutput="2,
					4,
					2,
					4"/>
      <testData input="16" expectedOutput="2,
					4,
					2,
					4"/>
      <testData input="256" expectedOutput="3,
					5,
					3,
					5"/>
      <testData input="65536.00" expectedOutput="5,
					7,
					5,
					7"/>
      <testData input="65536.16" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="65536.64" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="65536.4816" expectedOutput="10,
					10,
					10,
					10"/>
   </testcase>
   <testcase testName="testTrim"
             fieldName="testTrim"
             dataType="Text"
             formula="TRIM(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="This is too good to be true,
					This is too good to be true,
					This is too good to be true,
					This is too good to be true"/>
      <testData input="making a way"
                expectedOutput="making a way,
					making a way,
					making a way,
					making a way"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="blunder" expectedOutput="blunder,
					blunder,
					blunder,
					blunder"/>
      <testData input="makesense"
                expectedOutput="makesense,
					makesense,
					makesense,
					makesense"/>
      <testData input="does not make sense"
                expectedOutput="does not make sense,
					does not make sense,
					does not make sense,
					does not make sense"/>
      <testData input="working my way"
                expectedOutput="working my way,
					working my way,
					working my way,
					working my way"/>
      <testData input="e" expectedOutput="e,
					e,
					e,
					e"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"/>
   </testcase>
   <testcase testName="testInitCap"
             fieldName="testInitCap"
             dataType="Text"
             formula="INITCAP(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="﻿" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES" expectedOutput="Cases,
					CASES,
					Cases,
					CASES"/>
      <testData input="cases" expectedOutput="Cases,
					cases,
					Cases,
					cases"/>
      <testData input="CaSeS" expectedOutput="Cases,
					CaSeS,
					Cases,
					CaSeS"/>
      <testData input="große" expectedOutput="Große,
					große,
					Große,
					große"/>
      <testData input="ångstrom"
                expectedOutput="Ångstrom,
					ångstrom,
					Ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM"
                expectedOutput="Ångstrom,
					ÅNGSTROM,
					Ångstrom,
					ÅNGSTROM"/>
      <testData input="idempotent"
                expectedOutput="Idempotent,
					idempotent,
					Idempotent,
					idempotent"/>
      <testData input="ıdempotent"
                expectedOutput="Idempotent,
					ıdempotent,
					Idempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT"
                expectedOutput="Idempotent,
					IDEMPOTENT,
					Idempotent,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT"
                expectedOutput="İdempotent,
					İDEMPOTENT,
					İdempotent,
					İDEMPOTENT"/>
      <testData input="Mr. CASES"
                expectedOutput="Mr. Cases,
					Mr. CASES,
					Mr. Cases,
					Mr. CASES"/>
      <testData input="MR. cases"
                expectedOutput="Mr. Cases,
					MR. cases,
					Mr. Cases,
					MR. cases"/>
      <testData input="Herr.  CaSeS"
                expectedOutput="Herr.  Cases,
					Herr.  CaSeS,
					Herr.  Cases,
					Herr.  CaSeS"/>
      <testData input="129 große"
                expectedOutput="129 Große,
					129 große,
					129 Große,
					129 große"/>
      <testData input="mr. 123smith"
                expectedOutput="Mr. 123smith,
					mr. 123smith,
					Mr. 123smith,
					mr. 123smith"/>
      <testData input="mr. _smith"
                expectedOutput="Mr. _Smith,
					mr. _smith,
					Mr. _Smith,
					mr. _smith"/>
      <testData input="LOWER ångstrom"
                expectedOutput="Lower Ångstrom,
					LOWER ångstrom,
					Lower Ångstrom,
					LOWER ångstrom"/>
      <testData input="[] ÅNGSTROM"
                expectedOutput="[] Ångstrom,
					[] ÅNGSTROM,
					[] Ångstrom,
					[] ÅNGSTROM"/>
      <testData input="foo idempotent"
                expectedOutput="Foo Idempotent,
					foo idempotent,
					Foo Idempotent,
					foo idempotent"/>
      <testData input="bar ıdempotent"
                expectedOutput="Bar Idempotent,
					bar ıdempotent,
					Bar Idempotent,
					bar ıdempotent"/>
      <testData input="top IDEMPOTENT"
                expectedOutput="Top Idempotent,
					top IDEMPOTENT,
					Top Idempotent,
					top IDEMPOTENT"/>
      <testData input="bottom İDEMPOTENT"
                expectedOutput="Bottom İdempotent,
					bottom İDEMPOTENT,
					Bottom İdempotent,
					bottom İDEMPOTENT"/>
      <testData input="ijsland" expectedOutput="Ijsland,
					ijsland,
					Ijsland,
					ijsland"/>
   </testcase>
   <testcase testName="testChr"
             fieldName="testChr"
             dataType="Text"
             formula="CHR(customnumber__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber" dataType="Double"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="9" expectedOutput=" ,
					,   ,
					"/>
      <testData input="13" expectedOutput=" ,
					,   ,
					"/>
      <testData input="32" expectedOutput=" ,
					,   ,
					"/>
      <testData input="95" expectedOutput="_,
					_,
					_,
					_"/>
      <testData input="8364" expectedOutput="€,
					€,
					€,
					€"/>
      <testData input="64.5" expectedOutput="@,
					@,
					@,
					@"/>
      <testData input="11822" expectedOutput="⸮,
					⸮,
					⸮,
					⸮"/>
      <testData input="-32" expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testAscii"
             fieldName="testAscii"
             dataType="Double"
             formula="ASCII(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="!" expectedOutput="33,
					33,
					33,
					33"/>
      <testData input="C" expectedOutput="67,
					67,
					67,
					67"/>
      <testData input="CaSeS" expectedOutput="67,
					67,
					67,
					67"/>
      <testData input="ß" expectedOutput="223,
					223,
					223,
					223"/>
      <testData input="ångstrom" expectedOutput="229,
					229,
					229,
					229"/>
      <testData input="ÅNGSTROM" expectedOutput="197,
					197,
					197,
					197"/>
      <testData input="idempotent" expectedOutput="105,
					105,
					105,
					105"/>
      <testData input="ıdempotent" expectedOutput="305,
					305,
					305,
					305"/>
      <testData input="IDEMPOTENT" expectedOutput="73,
					73,
					73,
					73"/>
      <testData input="İDEMPOTENT" expectedOutput="304,
					304,
					304,
					304"/>
      <testData input="[" expectedOutput="91,
					91,
					91,
					91"/>
      <testData input="捦" expectedOutput="25446,
					25446,
					25446,
					25446"/>
      <testData input="ijsland" expectedOutput="105,
					105,
					105,
					105"/>
   </testcase>
   <testcase testName="testExpSimple"
             fieldName="testExpSimple"
             dataType="Double"
             formula="EXP(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testExpUsesAbs"
             fieldName="testExpUsesAbs"
             dataType="Double"
             formula="EXP(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="-10"
                expectedOutput="22026.465794806718,
					22026.46579480671,
					22026.465794806718,
					22026.46579480671"/>
      <testData input="-100"
                expectedOutput="26881171418161356000000000000000000000000000,
					26881171418161356000000000000000000000000000,
					26881171418161356000000000000000000000000000,
					26881171418161356000000000000000000000000000"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testExpUsesCeil"
             fieldName="testExpUsesCeil"
             dataType="Double"
             formula="EXP(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testExpUsesFloor"
             fieldName="testExpUsesFloor"
             dataType="Double"
             formula="EXP(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testExpUsesLog"
             fieldName="testExpUsesLog"
             dataType="Double"
             formula="EXP(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="2"
                expectedOutput="1.351249872567267,
					1.351249872567,
					1.351249872567267,
					1.351249872567"/>
      <testData input="-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-10"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-100"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="56"
                expectedOutput="5.744184932551994,
					5.744184932552,
					5.744184932551994,
					5.744184932552"/>
      <testData input="110"
                expectedOutput="7.70132725787646,
					7.701327257876,
					7.70132725787646,
					7.701327257876"/>
      <testData input="20"
                expectedOutput="3.673077974307202,
					3.673077974307,
					3.673077974307202,
					3.673077974307"/>
   </testcase>
   <testcase testName="testExpUsesLn"
             fieldName="testExpUsesLn"
             dataType="Double"
             formula="ROUND(EXP(LN(customnumber1__c)), 0)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="10000" expectedOutput="10000,
					10000,
					10000,
					10000"/>
      <testData input="10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="2.56" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
   </testcase>
   <testcase testName="testExpUsesSqrt"
             fieldName="testExpUsesSqrt"
             dataType="Double"
             formula="EXP(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="2"
                expectedOutput="4.1132503787829275,
					4.113250378783,
					4.1132503787829275,
					4.113250378783"/>
      <testData input="3"
                expectedOutput="5.6522336740340915,
					5.652233674034,
					5.6522336740340915,
					5.652233674034"/>
      <testData input="4"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="7"
                expectedOutput="14.094030107067814,
					14.094030107068,
					14.094030107067814,
					14.094030107068"/>
      <testData input="12"
                expectedOutput="31.947745505884924,
					31.947745505885,
					31.947745505884924,
					31.947745505885"/>
      <testData input="16"
                expectedOutput="54.598150033144236,
					54.598150033144,
					54.598150033144236,
					54.598150033144"/>
      <testData input="256"
                expectedOutput="8886110.520507872,
					8886110.520507872,
					8886110.520507872,
					8886110.520507872"/>
      <testData input="65536.00"
                expectedOutput="1511427665004103500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511427665004103500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511427665004103500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511427665004103500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <testData input="65536.16"
                expectedOutput="1511900059668960800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511900059668960800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511900059668960800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1511900059668960800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <testData input="65536.64"
                expectedOutput="1513318126262145700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1513318126262145700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1513318126262145700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1513318126262145700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"/>
      <testData input="65536.4816"
                expectedOutput="1512850017883840400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1512850017883840400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1512850017883840400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
					1512850017883840400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"/>
   </testcase>
   <testcase testName="testExpUsesRound"
             fieldName="testExpUsesRound"
             dataType="Double"
             formula="EXP(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0,1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1,2"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2,4"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1,-12" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="-10,2"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100,-1"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56,5"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,0"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,12"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
   </testcase>
   <testcase testName="testExpUsesMOD"
             fieldName="testExpUsesMOD"
             dataType="Double"
             formula="EXP(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="20,-1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="20.12345, 2"
                expectedOutput="1.1313934334561406,
					1.131393433456,
					1.1313934334561406,
					1.131393433456"/>
      <testData input="20.123444,13"
                expectedOutput="1240.7161100372325,
					1240.716110037231,
					1240.7161100372325,
					1240.716110037231"/>
      <testData input="20.123445,7"
                expectedOutput="456.4344056470803,
					456.43440564708,
					456.4344056470803,
					456.43440564708"/>
      <testData input="20.12345,23"
                expectedOutput="548912716.228101,
					548912716.228101,
					548912716.228101,
					548912716.228101"/>
      <testData input="20.12,1"
                expectedOutput="1.1274968515793757,
					1.127496851579,
					1.1274968515793757,
					1.127496851579"/>
      <testData input="-1,2"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-1,2654"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="0.3251538613960456,
					0.325153860732,
					0.3251538613960456,
					0.325153860732"/>
      <testData input="123456789.123456789,2"
                expectedOutput="3.075467090276916,
					3.075467096561,
					3.075467090276916,
					3.075467096561"/>
      <testData input="46,-456"
                expectedOutput="94961194206024480000,
					94961194206024480000,
					94961194206024480000,
					94961194206024480000"/>
      <testData input="-0,-1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="-0.00034,3"
                expectedOutput="0.9996600577934499,
					0.999660057793,
					0.9996600577934499,
					0.999660057793"/>
      <testData input="-.244,2"
                expectedOutput="0.7834876342628625,
					0.783487634263,
					0.7834876342628625,
					0.783487634263"/>
      <testData input="-0.244,2"
                expectedOutput="0.7834876342628625,
					0.783487634263,
					0.7834876342628625,
					0.783487634263"/>
      <testData input="-0.245,23223244"
                expectedOutput="0.7827045382418681,
					0.782704538242,
					0.7827045382418681,
					0.782704538242"/>
      <testData input=".24456,123456789"
                expectedOutput="1.2770592834826828,
					1.277059283483,
					1.2770592834826828,
					1.277059283483"/>
      <testData input="0.24456,0.000045"
                expectedOutput="1.0000300004500045,
					1.00003000045,
					1.0000300004500045,
					1.00003000045"/>
      <testData input=",16" expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="1.0,
					1,
					1.0,
					1"/>
   </testcase>
   <testcase testName="testExpUsesIf"
             fieldName="testExpUsesIf"
             dataType="Double"
             formula="EXP(IF(true,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0,1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1,2"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2,4"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1,-12"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10,2"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100,-1"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56,5"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,0"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,12"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
   </testcase>
   <testcase testName="testExpUsesLen"
             fieldName="testExpUsesLen"
             dataType="Double"
             formula="EXP(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="532048240601.79865,
					532048240601.7986,
					532048240601.79865,
					532048240601.7986"/>
      <testData input="making a way"
                expectedOutput="162754.79141900392,
					162754.7914190039,
					162754.79141900392,
					162754.7914190039"/>
      <testData input="" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="blunder"
                expectedOutput="1096.6331584284585,
					1096.633158428458,
					1096.6331584284585,
					1096.633158428458"/>
      <testData input="makesense"
                expectedOutput="8103.083927575384,
					8103.083927575384,
					8103.083927575384,
					8103.083927575384"/>
      <testData input="does not make sense"
                expectedOutput="178482300.96318725,
					178482300.9631872,
					178482300.96318725,
					178482300.9631872"/>
      <testData input="working my way"
                expectedOutput="1202604.2841647768,
					1202604.284164776,
					1202604.2841647768,
					1202604.284164776"/>
      <testData input="e"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="499632737950757800000000000000000000000000000000000000000000000000000000000,
					499632737950757800000000000000000000000000000000000000000000000000000000000,
					499632737950757800000000000000000000000000000000000000000000000000000000000,
					499632737950757800000000000000000000000000000000000000000000000000000000000"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="38310080007165770000000,
					38310080007165770000000,
					38310080007165770000000,
					38310080007165770000000"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="5685719999335932000000000,
					5685719999335932000000000,
					5685719999335932000000000,
					5685719999335932000000000"/>
   </testcase>
   <testcase testName="testExpUsesValue"
             fieldName="testExpUsesValue"
             dataType="Double"
             formula="EXP(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testExpUsesMinus"
             fieldName="testExpUsesMinus"
             dataType="Double"
             formula="EXP((custompercent1__c-customcurrency1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="0,0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0,1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="1,2"
                expectedOutput="0.13669542544552385,
					0.136695425446,
					0.13669542544552385,
					0.136695425446"/>
      <testData input="2,4"
                expectedOutput="0.018685639337732773,
					0.018685639338,
					0.018685639337732773,
					0.018685639338"/>
      <testData input="-1,-12"
                expectedOutput="161135.35418626538,
					161135.3541862653,
					161135.35418626538,
					161135.3541862653"/>
      <testData input="-10,2"
                expectedOutput="0.1224564282529819,
					0.122456428253,
					0.1224564282529819,
					0.122456428253"/>
      <testData input="-100,-1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="56,5"
                expectedOutput="0.011795938519751562,
					0.01179593852,
					0.011795938519751562,
					0.01179593852"/>
      <testData input="56,0"
                expectedOutput="1.7506725002961012,
					1.750672500296,
					1.7506725002961012,
					1.750672500296"/>
      <testData input="56,12"
                expectedOutput="0.000010756503602951294,
					0.000010756504,
					0.000010756503602951294,
					0.000010756504"/>
      <testData input="," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="0.1353352832366127,
					0.135335283237,
					null,
					null"/>
   </testcase>
   <testcase testName="testExpUsesPlus"
             fieldName="testExpUsesPlus"
             dataType="Double"
             formula="EXP(customformula0__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="(custompercent1__c+customnumber1__c)">
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customnumber1" dataType="Double"/>
      </referenceField>
      <testData input="0,0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0,1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="1,2"
                expectedOutput="7.463317347319193,
					7.463317347319,
					7.463317347319193,
					7.463317347319"/>
      <testData input="2,4"
                expectedOutput="55.70110582679559,
					55.701105826796,
					55.70110582679559,
					55.701105826796"/>
      <testData input="-1,-12"
                expectedOutput="0.00000608307641893218,
					0.000006083076,
					0.00000608307641893218,
					0.000006083076"/>
      <testData input="-10,2"
                expectedOutput="6.6858944422792685,
					6.685894442279,
					6.6858944422792685,
					6.685894442279"/>
      <testData input="-100,-1"
                expectedOutput="0.1353352832366127,
					0.135335283237,
					0.1353352832366127,
					0.135335283237"/>
      <testData input="56,5"
                expectedOutput="259.8228363229507,
					259.822836322951,
					259.8228363229507,
					259.822836322951"/>
      <testData input="56,0"
                expectedOutput="1.7506725002961012,
					1.750672500296,
					1.7506725002961012,
					1.750672500296"/>
      <testData input="56,12"
                expectedOutput="284930.3376286781,
					284930.3376286781,
					284930.3376286781,
					284930.3376286781"/>
      <testData input="," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					null,
					null"/>
   </testcase>
   <testcase testName="testNVLWithNum"
             fieldName="testNVLWithNum"
             dataType="Currency"
             formula="NULLVALUE(customnumber1__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="10,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",10" expectedOutput="0,
					0.0,
					10,
					10.0"/>
      <testData input="10," expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="," expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.0000009,
					8.999999999999999E-7,
					0.0000009,
					8.999999999999999E-7"/>
      <testData input="-1,10" expectedOutput="-1,
					-1.0,
					-1,
					-1.0"/>
      <testData input=",0.0009"
                expectedOutput="0,
					0.0,
					0.0009,
					0.0008999999999999999"/>
      <testData input="0,10" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="0.0,4" expectedOutput="0.0,
					0.0,
					0.0,
					0.0"/>
      <testData input=",0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0" expectedOutput="0,
					0.0,
					0.0,
					0.0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0.0,
					0.0000000,
					0.0"/>
      <testData input="1,10.1234" expectedOutput="1,
					1.0,
					1,
					1.0"/>
      <testData input="10.1234,1"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
   </testcase>
   <testcase testName="testNVLWithCur"
             fieldName="testNVLWithCur"
             dataType="Percent"
             formula="NULLVALUE(customcurrency1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="10,10" expectedOutput="1000,
					1000,
					1000,
					1000"/>
      <testData input=",10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10," expectedOutput="1000,
					1000,
					1000,
					1000"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.00009,
					0.000090,
					0.00009,
					0.000090"/>
      <testData input="-1,10" expectedOutput="-100,
					-100,
					-100,
					-100"/>
      <testData input=",0.0009" expectedOutput="0,
					0,
					0.0009,
					0.0008999999999999999"/>
      <testData input="0,10" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0,4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1,10.1234" expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="10.1234,1"
                expectedOutput="1012.34,
					1012.34,
					1012.34,
					1012.34"/>
   </testcase>
   <testcase testName="testNVLWithPer"
             fieldName="testNVLWithPer"
             dataType="Double"
             formula="NULLVALUE(custompercent1__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="10,10" expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input=",10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10," expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.000000009,
					0.000000009,
					0.000000009,
					0.000000009"/>
      <testData input="-1,10" expectedOutput="-0.01,
					-0.01,
					-0.01,
					-0.01"/>
      <testData input=",0.0009" expectedOutput="0,
					0,
					0.0009,
					0.0009"/>
      <testData input="0,10" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0,4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0.0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0.0000000,
					0"/>
      <testData input="1,10.1234" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
      <testData input="10.1234,1"
                expectedOutput="0.101234,
					0.101234,
					0.101234,
					0.101234"/>
   </testcase>
   <testcase testName="testNVLWithText"
             fieldName="testNVLWithText"
             dataType="Text"
             formula="NULLVALUE(customtext1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="Has it, Not Null"
                expectedOutput="Has it,
					Has it,
					Has it,
					Has it"/>
      <testData input=",
					Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="Has It," expectedOutput="Has It,
					Has It,
					Has It,
					Has It"/>
      <testData input="I,Not Null" expectedOutput="I,
					I,
					I,
					I"/>
   </testcase>
   <testcase testName="testNVLWithTextArea"
             fieldName="testNVLWithTextArea"
             dataType="Text"
             formula="NULLVALUE(customtextarea1__c,customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="Has it, Not Null"
                expectedOutput="Has it,
					Has it,
					Has it,
					Has it"/>
      <testData input=",
					Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="Has It," expectedOutput="Has It,
					Has It,
					Has It,
					Has It"/>
      <testData input="I,Not Null" expectedOutput="I,
					I,
					I,
					I"/>
   </testcase>
   <testcase testName="testNVLWithPhone"
             fieldName="testNVLWithPhone"
             dataType="Text"
             formula="NULLVALUE(customphone1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="510-595-4547,Not Null"
                expectedOutput="510-595-4547,
					510-595-4547,
					510-595-4547,
					510-595-4547"/>
      <testData input="1234567892,Not Null"
                expectedOutput="1234567892,
					1234567892,
					1234567892,
					1234567892"/>
      <testData input="011-91-40-23750513,Not Null"
                expectedOutput="011-91-40-23750513,
					011-91-40-23750513,
					011-91-40-23750513,
					011-91-40-23750513"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="email@email.com,
					email@email.com,
					email@email.com,
					email@email.com"/>
      <testData input="23457699 x233, Not Null"
                expectedOutput="23457699 x233,
					23457699 x233,
					23457699 x233,
					23457699 x233"/>
   </testcase>
   <testcase testName="testNVLWithEmail"
             fieldName="testNVLWithEmail"
             dataType="Text"
             formula="NULLVALUE(customemail1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="syendluri@yahoo.com,Not Null"
                expectedOutput="syendluri@yahoo.com,
					syendluri@yahoo.com,
					syendluri@yahoo.com,
					syendluri@yahoo.com"/>
      <testData input="aa@ss.com, Not Null"
                expectedOutput="aa@ss.com,
					aa@ss.com,
					aa@ss.com,
					aa@ss.com"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testNVLWithUrl"
             fieldName="testNVLWithUrl"
             dataType="Text"
             formula="NULLVALUE(customurl1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customurl1" dataType="url"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="http://salesforce.com,Not Null"
                expectedOutput="http://salesforce.com,
					http://salesforce.com,
					http://salesforce.com,
					http://salesforce.com"/>
      <testData input="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,Not Null"
                expectedOutput="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="email@email.com,
					email@email.com,
					email@email.com,
					email@email.com"/>
      <testData input="mailto:syendluri@salesforce.com,Not Null"
                expectedOutput="mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com"/>
      <testData input="ui/layoutfieldlist.jsp,Not Null"
                expectedOutput="ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testNVLWithDate"
             fieldName="testNVLWithDate"
             dataType="DateOnly"
             formula="NULLVALUE(customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="Sun Feb 28 00:00:00 GMT 3999,
					3999-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 3999,
					3999-02-28 00:00:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
   </testcase>
   <testcase testName="testNVLWithDateTime"
             fieldName="testNVLWithDateTime"
             dataType="DateTime"
             formula="NULLVALUE(customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:30:00 GMT 2004,
					2004-12-31 11:30:00.0,
					Fri Dec 31 11:30:00 GMT 2004,
					2004-12-31 11:30:00.0"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="Sun Feb 28 10:34:00 GMT 3999,
					3999-02-28 10:34:00.0,
					Sun Feb 28 10:34:00 GMT 3999,
					3999-02-28 10:34:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0,
					Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0,
					Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 08:29:00 GMT 2022,
					2022-08-21 08:29:00.0,
					Sun Aug 21 08:29:00 GMT 2022,
					2022-08-21 08:29:00.0"/>
   </testcase>
   <testcase testName="testNVLWithError"
             fieldName="testNVLWithError"
             dataType="Double"
             formula="NULLVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="10,10,10" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",10,10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10,,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					10,
					10"/>
      <testData input="10,10," expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					10,
					10"/>
      <testData input="10,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1,49,1.49"
                expectedOutput="0.02040816326530612244897959183673,
					0.020408163265,
					0.02040816326530612244897959183673,
					0.020408163265"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1,99,1.99"
                expectedOutput="0.01010101010101010101010101010101,
					0.010101010101,
					0.01010101010101010101010101010101,
					0.010101010101"/>
      <testData input="0.01,0.01,0.01" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testBVLWithNum"
             fieldName="testBVLWithNum"
             dataType="Currency"
             formula="BLANKVALUE(customnumber1__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="10,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",10" expectedOutput="0,
					0.0,
					10,
					10.0"/>
      <testData input="10," expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="," expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.0000009,
					8.999999999999999E-7,
					0.0000009,
					8.999999999999999E-7"/>
      <testData input="-1,10" expectedOutput="-1,
					-1.0,
					-1,
					-1.0"/>
      <testData input=",0.0009"
                expectedOutput="0,
					0.0,
					0.0009,
					0.0008999999999999999"/>
      <testData input="0,10" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="0.0,4" expectedOutput="0.0,
					0.0,
					0.0,
					0.0"/>
      <testData input=",0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0" expectedOutput="0,
					0.0,
					0.0,
					0.0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0.0,
					0.0000000,
					0.0"/>
      <testData input="1,10.1234" expectedOutput="1,
					1.0,
					1,
					1.0"/>
      <testData input="10.1234,1"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
   </testcase>
   <testcase testName="testBVLWithCur"
             fieldName="testBVLWithCur"
             dataType="Percent"
             formula="BLANKVALUE(customcurrency1__c,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="10,10" expectedOutput="1000,
					1000,
					1000,
					1000"/>
      <testData input=",10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10," expectedOutput="1000,
					1000,
					1000,
					1000"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.00009,
					0.000090,
					0.00009,
					0.000090"/>
      <testData input="-1,10" expectedOutput="-100,
					-100,
					-100,
					-100"/>
      <testData input=",0.0009" expectedOutput="0,
					0,
					0.0009,
					0.0008999999999999999"/>
      <testData input="0,10" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0,4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1,10.1234" expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="10.1234,1"
                expectedOutput="1012.34,
					1012.34,
					1012.34,
					1012.34"/>
   </testcase>
   <testcase testName="testBVLWithPer"
             fieldName="testBVLWithPer"
             dataType="Double"
             formula="BLANKVALUE(custompercent1__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="10,10" expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input=",10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10," expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0000009,10"
                expectedOutput="0.000000009,
					0.000000009,
					0.000000009,
					0.000000009"/>
      <testData input="-1,10" expectedOutput="-0.01,
					-0.01,
					-0.01,
					-0.01"/>
      <testData input=",0.0009" expectedOutput="0,
					0,
					0.0009,
					0.0009"/>
      <testData input="0,10" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0,4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0.0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0.0000000,
					0"/>
      <testData input="1,10.1234" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
      <testData input="10.1234,1"
                expectedOutput="0.101234,
					0.101234,
					0.101234,
					0.101234"/>
   </testcase>
   <testcase testName="testBVLWithText"
             fieldName="testBVLWithText"
             dataType="Text"
             formula="BLANKVALUE(customtext1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="Has it, Not Null"
                expectedOutput="Has it,
					Has it,
					Has it,
					Has it"/>
      <testData input=", Is Null"
                expectedOutput=" Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="Has It," expectedOutput="Has It,
					Has It,
					Has It,
					Has It"/>
      <testData input="I,Not Null" expectedOutput="I,
					I,
					I,
					I"/>
   </testcase>
   <testcase testName="testBVLWithTextArea"
             fieldName="testBVLWithTextArea"
             dataType="Text"
             formula="BLANKVALUE(customtextarea1__c,customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="Has it, Not Null"
                expectedOutput="Has it,
					Has it,
					Has it,
					Has it"/>
      <testData input=", Is Null"
                expectedOutput=" Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="Has It," expectedOutput="Has It,
					Has It,
					Has It,
					Has It"/>
      <testData input="I,Not Null" expectedOutput="I,
					I,
					I,
					I"/>
   </testcase>
   <testcase testName="testBVLWithPhone"
             fieldName="testBVLWithPhone"
             dataType="Text"
             formula="BLANKVALUE(customphone1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="510-595-4547,Not Null"
                expectedOutput="510-595-4547,
					510-595-4547,
					510-595-4547,
					510-595-4547"/>
      <testData input="1234567892,Not Null"
                expectedOutput="1234567892,
					1234567892,
					1234567892,
					1234567892"/>
      <testData input="011-91-40-23750513,Not Null"
                expectedOutput="011-91-40-23750513,
					011-91-40-23750513,
					011-91-40-23750513,
					011-91-40-23750513"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="email@email.com,
					email@email.com,
					email@email.com,
					email@email.com"/>
      <testData input="23457699 x233, Not Null"
                expectedOutput="23457699 x233,
					23457699 x233,
					23457699 x233,
					23457699 x233"/>
   </testcase>
   <testcase testName="testBVLWithEmail"
             fieldName="testBVLWithEmail"
             dataType="Text"
             formula="BLANKVALUE(customemail1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="syendluri@yahoo.com,Not Null"
                expectedOutput="syendluri@yahoo.com,
					syendluri@yahoo.com,
					syendluri@yahoo.com,
					syendluri@yahoo.com"/>
      <testData input="aa@ss.com, Not Null"
                expectedOutput="aa@ss.com,
					aa@ss.com,
					aa@ss.com,
					aa@ss.com"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testBVLWithUrl"
             fieldName="testBVLWithUrl"
             dataType="Text"
             formula="BLANKVALUE(customurl1__c,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customurl1" dataType="url"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="http://salesforce.com,Not Null"
                expectedOutput="http://salesforce.com,
					http://salesforce.com,
					http://salesforce.com,
					http://salesforce.com"/>
      <testData input="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,Not Null"
                expectedOutput="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,
					https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="email@email.com,
					email@email.com,
					email@email.com,
					email@email.com"/>
      <testData input="mailto:syendluri@salesforce.com,Not Null"
                expectedOutput="mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com,
					mailto:syendluri@salesforce.com"/>
      <testData input="ui/layoutfieldlist.jsp,Not Null"
                expectedOutput="ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp,
					ui/layoutfieldlist.jsp"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testBVLWithDate"
             fieldName="testBVLWithDate"
             dataType="DateOnly"
             formula="BLANKVALUE(customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0,
					Sat Feb 28 00:00:00 GMT 2004,
					2004-02-28 00:00:00.0"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="Sun Feb 28 00:00:00 GMT 3999,
					3999-02-28 00:00:00.0,
					Sun Feb 28 00:00:00 GMT 3999,
					3999-02-28 00:00:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0,
					Sun Aug 21 00:00:00 GMT 2022,
					2022-08-21 00:00:00.0"/>
   </testcase>
   <testcase testName="testBVLWithDateFormulaNull"
             fieldName="testBVLWithDate"
             dataType="DateOnly"
             formula="BLANKVALUE(customformula0__c,date(2000,1,1))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0" dataType="DateOnly" formula="NULL"/>
      <testData input="No data"
                expectedOutput="Sat Jan 01 00:00:00 GMT 2000,
					2000-01-01 00:00:00.0,
					Sat Jan 01 00:00:00 GMT 2000,
					2000-01-01 00:00:00.0"/>
   </testcase>
   <testcase testName="testBVLWithDateTime"
             fieldName="testBVLWithDateTime"
             dataType="DateTime"
             formula="BLANKVALUE(customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:30:00 GMT 2004,
					2004-12-31 11:30:00.0,
					Fri Dec 31 11:30:00 GMT 2004,
					2004-12-31 11:30:00.0"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0,
					Sat Feb 28 10:34:00 GMT 2004,
					2004-02-28 10:34:00.0"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="Sun Feb 28 10:34:00 GMT 3999,
					3999-02-28 10:34:00.0,
					Sun Feb 28 10:34:00 GMT 3999,
					3999-02-28 10:34:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0,
					Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0,
					Sun Aug 21 08:30:00 GMT 2022,
					2022-08-21 08:30:00.0"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="Sun Aug 21 08:29:00 GMT 2022,
					2022-08-21 08:29:00.0,
					Sun Aug 21 08:29:00 GMT 2022,
					2022-08-21 08:29:00.0"/>
   </testcase>
   <testcase testName="testBVLWithError"
             fieldName="testBVLWithError"
             dataType="Double"
             formula="BLANKVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="10,10,10" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",10,10" expectedOutput="0,
					0,
					10,
					10"/>
      <testData input="10,,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					10,
					10"/>
      <testData input="10,10," expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					10,
					10"/>
      <testData input="10,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1,49,1.49"
                expectedOutput="0.02040816326530612244897959183673,
					0.020408163265,
					0.02040816326530612244897959183673,
					0.020408163265"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1,99,1.99"
                expectedOutput="0.01010101010101010101010101010101,
					0.010101010101,
					0.01010101010101010101010101010101,
					0.010101010101"/>
      <testData input="0.01,0.01,0.01" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testIfDateTimeCompareEqual"
             fieldName="testIfDateTimeCompareEqual"
             dataType="DateOnly"
             formula="IF((customdatetime1__c=customdatetime2__c),customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateCompareEqual"
             fieldName="testIfDateCompareEqual"
             dataType="DateTime"
             formula="IF((customdate1__c=customdate2__c),customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateTimeCompareLessThan"
             fieldName="testIfDateTimeCompareLessThan"
             dataType="DateOnly"
             formula="IF((customdatetime1__c &lt;customdatetime2__c),customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateCompareLessThan"
             fieldName="testIfDateCompareLessThan"
             dataType="DateTime"
             formula="IF((customdate1__c&lt;customdate2__c),customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateTimeCompareLessThanOrEqual"
             fieldName="testIfDateTimeCompareLessThanOrEqual"
             dataType="DateOnly"
             formula="IF((customdatetime1__c &lt;=customdatetime2__c),customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateCompareLessThanOrEqual"
             fieldName="testIfDateCompareLessThanOrEqual"
             dataType="DateTime"
             formula="IF((customdate1__c&lt;=customdate2__c),customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateTimeCompareGtThanOrEqual"
             fieldName="testIfDateTimeCompareGtThanOrEqual"
             dataType="DateOnly"
             formula="IF((customdatetime1__c &gt;=customdatetime2__c),customdate1__c,customdate2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0,
					Sat Dec 31 00:00:00 GMT 2005,
					2005-12-31 00:00:00.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0,
					Sun Dec 31 00:00:00 GMT 2006,
					2006-12-31 00:00:00.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfDateCompareGreaterThanOrEqual"
             fieldName="testIfDateCompareGreaterThanOrEqual"
             dataType="DateTime"
             formula="IF((customdate1__c&gt;=customdate2__c),customdatetime1__c,customdatetime2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,,2005:12:31:23:04:12,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2004:01:01:00:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:01,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:12:00:00,2004:01:01:12:00:01, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:24:00:00,2004:01:01:12:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:14:00:00,2004:01:01:14:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:01:01:06:00:00,2004:01:01:04:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="2004:02:28:24:00:00,2004:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="4000:01:01:00:00:00,1900:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1900:01:01:00:00:00,4000:01:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="2000:02:29:24:00:00,2000:03:01:00:00:00, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:58, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:58,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input="1999:12:31:23:59:59,1999:12:31:23:59:59, 2005:12:31:23:04:12, 2006:12:31:23:04:12"
                expectedOutput="Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0,
					Sat Dec 31 23:04:12 GMT 2005,
					2005-12-31 23:04:12.0"/>
      <testData input=",1999:12:31:23:59:58,,2006:12:31:23:04:12"
                expectedOutput="Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0,
					Sun Dec 31 23:04:12 GMT 2006,
					2006-12-31 23:04:12.0"/>
      <testData input=",,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1999:12:31:23:59:58,2005:12:31:23:04:12,"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testCommentsInsideFormula"
             fieldName="testCommentsInsideFormula"
             dataType="Double"
             formula="/* comment */ IF /* comment */(YEAR(TODAY()) = 2009 /* comment */, 0,0) /** comment **/"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testISNULLWithNum"
             fieldName="testISNULLWithNum"
             dataType="Currency"
             formula="if(isnull(customnumber1__c), 0,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="10,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",10" expectedOutput="10,
					10.0,
					0,
					0.0"/>
      <testData input="10," expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="-1,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",0.0009"
                expectedOutput="0.0009,
					0.0008999999999999999,
					0,
					0.0"/>
      <testData input="0,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="0.0,4" expectedOutput="4,
					4.0,
					4,
					4.0"/>
      <testData input=",0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0" expectedOutput="0.0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0000000" expectedOutput="0.0000000,
					0.0,
					0,
					0.0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1.0,
					1,
					1.0"/>
   </testcase>
   <testcase testName="testISNULLWithCur"
             fieldName="testISNULLWithCur"
             dataType="Percent"
             formula="if(isnull(customcurrency1__c),0,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10" expectedOutput="10,
					10,
					0,
					0"/>
      <testData input="10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="-1,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",0.0009" expectedOutput="0.0009,
					0.0008999999999999999,
					0,
					0"/>
      <testData input="0,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="0.0,4" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testISNULLWithPer"
             fieldName="testISNULLWithPer"
             dataType="Double"
             formula="if(isnull(custompercent1__c), 0,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10" expectedOutput="10,
					10,
					0,
					0"/>
      <testData input="10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="-1,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",0.0009" expectedOutput="0.0009,
					0.0009,
					0,
					0"/>
      <testData input="0,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="0.0,4" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0.0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0.0000000,
					0,
					0,
					0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testISNULLWithText"
             fieldName="testISNULLWithText"
             dataType="Text"
             formula="if(isnull(customtext1__c),&#34;NULL&#34;,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="Has it, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=", Is Null"
                expectedOutput=" Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="Has It," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="I,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISNULLWithTextArea"
             fieldName="testISNULLWithTextArea"
             dataType="Text"
             formula="if(isnull(customtextarea1__c),null,customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="Has it, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=", Is Null"
                expectedOutput=" Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="Has It," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="I,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISNULLWithPhone"
             fieldName="testISNULLWithPhone"
             dataType="Text"
             formula="if(isnull(customphone1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="510-595-4547,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="1234567892,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="011-91-40-23750513,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="23457699 x233, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISNULLWithEmail"
             fieldName="testISNULLWithEmail"
             dataType="Text"
             formula="if(isnull(customemail1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="syendluri@yahoo.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="aa@ss.com, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISNULLWithUrl"
             fieldName="testISNULLWithUrl"
             dataType="Text"
             formula="if(isnull(customurl1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customurl1" dataType="url"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="http://salesforce.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="Is Null,
					Is Null,
					Is Null,
					Is Null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="mailto:syendluri@salesforce.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="ui/layoutfieldlist.jsp,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISNULLWithDate"
             fieldName="testISNULLWithDate"
             dataType="DateOnly"
             formula="if(isnull(customdate1__c),customdate2__c,null)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISNULLWithDateTime"
             fieldName="testISNULLWithDateTime"
             dataType="DateTime"
             formula="if(isnull(customdatetime1__c),customdatetime2__c,null)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISNULLWithError"
             fieldName="testISNULLWithError"
             dataType="Double"
             formula="if(isnull(customnumber1__c/customnumber2__c),null,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="10,10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10,10" expectedOutput="10,
					10,
					null,
					null"/>
      <testData input="10,,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="10,10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="10,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1.1,
					1.1,
					1.1,
					1.1"/>
      <testData input="1,49,1.49" expectedOutput="1.49,
					1.49,
					1.49,
					1.49"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1.5,
					1.5,
					1.5,
					1.5"/>
      <testData input="1,99,1.99" expectedOutput="1.99,
					1.99,
					1.99,
					1.99"/>
      <testData input="0.01,0.01,0.01" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
   </testcase>
   <testcase testName="testISBLANKWithNum"
             fieldName="testISBLANKWithNum"
             dataType="Currency"
             formula="if(isblank(customnumber1__c), 0,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="10,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",10" expectedOutput="10,
					10.0,
					0,
					0.0"/>
      <testData input="10," expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="-1,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input=",0.0009"
                expectedOutput="0.0009,
					0.0008999999999999999,
					0,
					0.0"/>
      <testData input="0,10" expectedOutput="10,
					10.0,
					10,
					10.0"/>
      <testData input="0.0,4" expectedOutput="4,
					4.0,
					4,
					4.0"/>
      <testData input=",0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0" expectedOutput="0.0,
					0.0,
					0,
					0.0"/>
      <testData input=",0.0000000" expectedOutput="0.0000000,
					0.0,
					0,
					0.0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1.0,
					1,
					1.0"/>
   </testcase>
   <testcase testName="testISBLANKWithCur"
             fieldName="testISBLANKWithCur"
             dataType="Percent"
             formula="if(isblank(customcurrency1__c),0,custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input="10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10" expectedOutput="10,
					10,
					0,
					0"/>
      <testData input="10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="-1,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",0.0009" expectedOutput="0.0009,
					0.0008999999999999999,
					0,
					0"/>
      <testData input="0,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="0.0,4" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testISBLANKWithPer"
             fieldName="testISBLANKWithPer"
             dataType="Double"
             formula="if(isblank(custompercent1__c), 0,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10" expectedOutput="10,
					10,
					0,
					0"/>
      <testData input="10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="," expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.0000009,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="-1,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",0.0009" expectedOutput="0.0009,
					0.0009,
					0,
					0"/>
      <testData input="0,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="0.0,4" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input=",0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",0.0" expectedOutput="0.0,
					0,
					0,
					0"/>
      <testData input=",0.0000000" expectedOutput="0.0000000,
					0,
					0,
					0"/>
      <testData input="1,10.1234"
                expectedOutput="10.1234,
					10.1234,
					10.1234,
					10.1234"/>
      <testData input="10.1234,1" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testISBLANKWithText"
             fieldName="testISBLANKWithText"
             dataType="Text"
             formula="if(isblank(customtext1__c),&#34;NULL&#34;,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="Has it, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",
					Is Null" expectedOutput="NULL,
					NULL,
					NULL,
					NULL"/>
      <testData input="Has It," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="I,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISBLANKWithTextArea"
             fieldName="testISBLANKWithTextArea"
             dataType="Text"
             formula="if(isblank(customtextarea1__c),null,customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="Has it, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",
					Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="Has It," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="I,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISBLANKWithPhone"
             fieldName="testISBLANKWithPhone"
             dataType="Text"
             formula="if(isblank(customphone1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customphone1" dataType="phone"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="510-595-4547,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="1234567892,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="011-91-40-23750513,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="23457699 x233, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
   </testcase>
   <testcase testName="testISBLANKWithEmail"
             fieldName="testISBLANKWithEmail"
             dataType="Text"
             formula="if(isblank(customemail1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customemail1" dataType="email"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="syendluri@yahoo.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="aa@ss.com, Not Null"
                expectedOutput=" Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISBLANKWithUrl"
             fieldName="testISBLANKWithUrl"
             dataType="Text"
             formula="if(isblank(customurl1__c),null,customtextarea1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customurl1" dataType="url"/>
      <referenceField fieldName="customtextarea1" dataType="textarea"/>
      <testData input="http://salesforce.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="https://blitzna1.eng.salesforce.com/setup/ui/layoutfieldlist.jsp?type=Account&amp;setupid=AccountFields,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input=",Is Null" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="email@email.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="mailto:syendluri@salesforce.com,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="ui/layoutfieldlist.jsp,Not Null"
                expectedOutput="Not Null,
					Not Null,
					Not Null,
					Not Null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISBLANKWithDate"
             fieldName="testISBLANKWithDate"
             dataType="DateOnly"
             formula="if(isblank(customdate1__c),customdate2__c,null)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0,
					Fri Dec 31 00:00:00 GMT 2004,
					2004-12-31 00:00:00.0"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISBLANKWithDateTime"
             fieldName="testISBLANKWithDateTime"
             dataType="DateTime"
             formula="if(isblank(customdatetime1__c),customdatetime2__c,null)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0,
					Fri Dec 31 11:32:00 GMT 2004,
					2004-12-31 11:32:00.0"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISBLANKWithError"
             fieldName="testISBLANKWithError"
             dataType="Double"
             formula="if(isblank(customnumber1__c/customnumber2__c),null,customcurrency1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="10,10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10,10" expectedOutput="10,
					10,
					null,
					null"/>
      <testData input="10,,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="10,10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,10"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="10,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1.1,
					1.1,
					1.1,
					1.1"/>
      <testData input="1,49,1.49" expectedOutput="1.49,
					1.49,
					1.49,
					1.49"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1.5,
					1.5,
					1.5,
					1.5"/>
      <testData input="1,99,1.99" expectedOutput="1.99,
					1.99,
					1.99,
					1.99"/>
      <testData input="0.01,0.01,0.01" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
   </testcase>
   <testcase testName="testDATEVALUEWithString"
             fieldName="testDATEVALUEWithString"
             dataType="DateOnly"
             formula="datevalue(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="2005-01-02"
                expectedOutput="Sun Jan 02 00:00:00 GMT 2005,
					2005-01-02 00:00:00.0,
					Sun Jan 02 00:00:00 GMT 2005,
					2005-01-02 00:00:00.0"/>
      <testData input="2005-1-2"
                expectedOutput="Sun Jan 02 00:00:00 GMT 2005,
					2005-01-02 00:00:00.0,
					Sun Jan 02 00:00:00 GMT 2005,
					2005-01-02 00:00:00.0"/>
      <testData input="9999-01-15"
                expectedOutput="Fri Jan 15 00:00:00 GMT 9999,
					9999-01-15 00:00:00.0,
					Fri Jan 15 00:00:00 GMT 9999,
					9999-01-15 00:00:00.0"/>
      <testData input="0001-01-15"
                expectedOutput="Sat Jan 15 00:00:00 GMT 1,
					0001-01-15 00:00:00.0,
					Sat Jan 15 00:00:00 GMT 1,
					0001-01-15 00:00:00.0"/>
      <testData input="200-01-03"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0200-01-03 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					0200-01-03 00:00:00.0"/>
      <testData input="200-1-3"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0200-01-03 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					0200-01-03 00:00:00.0"/>
      <testData input="2-1-3"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0002-01-03 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					0002-01-03 00:00:00.0"/>
      <testData input="2005-13-02"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2006-01-02 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2006-01-02 00:00:00.0"/>
      <testData input="2005-02-31"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2005-03-03 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2005-03-03 00:00:00.0"/>
      <testData input="2005-03-32"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2005-04-01 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2005-04-01 00:00:00.0"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="crapola"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					Error: Error parsing date,
					Error: com.force.formula.FormulaDateException,
					Error: Error parsing date"/>
      <testData input="2000-0-2"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					1999-12-02 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					1999-12-02 00:00:00.0"/>
      <testData input="0000-12-12"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0001-12-12 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					0001-12-12 00:00:00.0"/>
      <testData input="0-12-12"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					0001-12-12 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					0001-12-12 00:00:00.0"/>
      <testData input="2020-11-00"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					2020-10-31 00:00:00.0,
					Error: com.force.formula.FormulaDateException,
					2020-10-31 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfReturningNullForDateType"
             fieldName="testIfReturningNullForDateType"
             dataType="DateOnly"
             formula="if(true, if(false, null, null), TODAY())"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfReturningNullForDateTimeType"
             fieldName="testIfReturningNullForDateTimeType"
             dataType="DateTime"
             formula="if(true, if(false, null, null), NOW())"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfReturningNullForNumericType"
             fieldName="testIfReturningNullForNumericType"
             dataType="Double"
             formula="if(true, if(false, null, null), 999)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testShortCircuitingWithNullTerms"
             fieldName="testShortCircuitingWithNullTerms"
             dataType="Text"
             formula="if(and(customdate1__c &gt;date(2000,1,1), value(customtext1__c )&gt;0),'True','False')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="2005:12:31,4" expectedOutput="True,
					True,
					True,
					True"/>
      <testData input="2005:12:31,0" expectedOutput="False,
					False,
					False,
					False"/>
      <testData input="2005:12:31,abc"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					False,
					Error: com.force.formula.impl.InvalidNumericValueException,
					False"/>
      <testData input=",4" expectedOutput="False,
					False,
					False,
					False"/>
   </testcase>
   <testcase testName="testSimpleRef"
             fieldName="testSimpleRef"
             dataType="Double"
             formula="customNumber1__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input="1234567890.0"
                expectedOutput="1234567890.0,
					1234567890,
					1234567890.0,
					1234567890"/>
      <testData input="1234567891.0"
                expectedOutput="1234567891.0,
					1234567891,
					1234567891.0,
					1234567891"/>
      <testData input="1234567890"
                expectedOutput="1234567890,
					1234567890,
					1234567890,
					1234567890"/>
      <testData input="1234567891"
                expectedOutput="1234567891,
					1234567891,
					1234567891,
					1234567891"/>
      <testData input="" expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testSimpleRefText"
             fieldName="testSimpleRefText"
             dataType="Text"
             formula="customText1__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="This is too good to be true,
					This is too good to be true,
					This is too good to be true,
					This is too good to be true"/>
      <testData input="making a way"
                expectedOutput="making a way,
					making a way,
					making a way,
					making a way"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="blunder" expectedOutput="blunder,
					blunder,
					blunder,
					blunder"/>
      <testData input="makesense"
                expectedOutput="makesense,
					makesense,
					makesense,
					makesense"/>
      <testData input="does not make sense"
                expectedOutput="does not make sense,
					does not make sense,
					does not make sense,
					does not make sense"/>
      <testData input="working my way"
                expectedOutput="working my way,
					working my way,
					working my way,
					working my way"/>
      <testData input="e" expectedOutput="e,
					e,
					e,
					e"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag,
					hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_,
					250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r,
					blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"/>
   </testcase>
   <testcase testName="testLpad"
             fieldName="testLpad"
             dataType="Text"
             formula="lpad(customText1__c,customNumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input=",0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",5" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testRpad"
             fieldName="testRpad"
             dataType="Text"
             formula="rpad(customText1__c,customNumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input=",0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",5" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string," expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testLpad2"
             fieldName="testLpad2"
             dataType="Text"
             formula="lpad(customText1__c,customNumber1__c,customText2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customText2" dataType="Text"/>
      <testData input="string,0," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0,x" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,0,x" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1,x" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5,x" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6,x" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string,7,x"
                expectedOutput="xstring,
					xstring,
					xstring,
					xstring"/>
      <testData input="string,11,x"
                expectedOutput="xxxxxstring,
					xxxxxstring,
					xxxxxstring,
					xxxxxstring"/>
      <testData input="string,0,abc" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1,abc" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5,abc" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6,abc" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string,7,abc"
                expectedOutput="astring,
					astring,
					astring,
					astring"/>
      <testData input="string,11,abc"
                expectedOutput="abcabstring,
					abcabstring,
					abcabstring,
					abcabstring"/>
   </testcase>
   <testcase testName="testRpad2"
             fieldName="testRpad2"
             dataType="Text"
             formula="rpad(customText1__c,customNumber1__c,customText2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customText2" dataType="Text"/>
      <testData input="string,0," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0,x" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,0,x" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1,x" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5,x" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6,x" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string,7,x"
                expectedOutput="stringx,
					stringx,
					stringx,
					stringx"/>
      <testData input="string,11,x"
                expectedOutput="stringxxxxx,
					stringxxxxx,
					stringxxxxx,
					stringxxxxx"/>
      <testData input="string,0,abc" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="string,1,abc" expectedOutput="s,
					s,
					s,
					s"/>
      <testData input="string,5,abc" expectedOutput="strin,
					strin,
					strin,
					strin"/>
      <testData input="string,6,abc" expectedOutput="string,
					string,
					string,
					string"/>
      <testData input="string,7,abc"
                expectedOutput="stringa,
					stringa,
					stringa,
					stringa"/>
      <testData input="string,11,abc"
                expectedOutput="stringabcab,
					stringabcab,
					stringabcab,
					stringabcab"/>
   </testcase>
   <testcase testName="testUpper"
             fieldName="testUpper"
             dataType="Text"
             formula="upper(customText1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="﻿" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="cases" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="CaSeS" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="große" expectedOutput="GROSSE,
					GROßE,
					GROSSE,
					GROßE"/>
      <testData input="ångstrom"
                expectedOutput="ÅNGSTROM,
					åNGSTROM,
					ÅNGSTROM,
					åNGSTROM"/>
      <testData input="ÅNGSTROM"
                expectedOutput="ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM"/>
      <testData input="idempotent"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="ıdempotent"
                expectedOutput="IDEMPOTENT,
					ıDEMPOTENT,
					IDEMPOTENT,
					ıDEMPOTENT"/>
      <testData input="IDEMPOTENT"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT"
                expectedOutput="İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT"/>
   </testcase>
   <testcase testName="testLower"
             fieldName="testLower"
             dataType="Text"
             formula="lower(customText1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="﻿" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="cases" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="CaSeS" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="große" expectedOutput="große,
					große,
					große,
					große"/>
      <testData input="ångstrom"
                expectedOutput="ångstrom,
					ångstrom,
					ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM"
                expectedOutput="ångstrom,
					Ångstrom,
					ångstrom,
					Ångstrom"/>
      <testData input="idempotent"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="ıdempotent"
                expectedOutput="ıdempotent,
					ıdempotent,
					ıdempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="İDEMPOTENT"
                expectedOutput="i̇dempotent,
					İdempotent,
					i̇dempotent,
					İdempotent"/>
   </testcase>
   <testcase testName="testUpperLocale"
             fieldName="testUpperLocale"
             dataType="Text"
             formula="upper(customText1__c,customText2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customText2" dataType="Text"/>
      <testData input="﻿," expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES," expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="cases," expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="CaSeS," expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="große," expectedOutput="GROSSE,
					GROßE,
					GROSSE,
					GROßE"/>
      <testData input="ångstrom,"
                expectedOutput="ÅNGSTROM,
					åNGSTROM,
					ÅNGSTROM,
					åNGSTROM"/>
      <testData input="ÅNGSTROM,"
                expectedOutput="ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM"/>
      <testData input="idempotent,"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="ıdempotent,"
                expectedOutput="IDEMPOTENT,
					ıDEMPOTENT,
					IDEMPOTENT,
					ıDEMPOTENT"/>
      <testData input="IDEMPOTENT,"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT,"
                expectedOutput="İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT"/>
      <testData input="﻿,en_US" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES,en_US" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="cases,en_US" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="CaSeS,en_US" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="große,en_US" expectedOutput="GROSSE,
					GROßE,
					GROSSE,
					GROßE"/>
      <testData input="ångstrom,en_US"
                expectedOutput="ÅNGSTROM,
					åNGSTROM,
					ÅNGSTROM,
					åNGSTROM"/>
      <testData input="ÅNGSTROM,en_US"
                expectedOutput="ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM"/>
      <testData input="idempotent,en_US"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="ıdempotent,en_US"
                expectedOutput="IDEMPOTENT,
					ıDEMPOTENT,
					IDEMPOTENT,
					ıDEMPOTENT"/>
      <testData input="IDEMPOTENT,en_US"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT,en_US"
                expectedOutput="İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT"/>
      <testData input="﻿,tr_TR" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES,tr_TR" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="cases,tr_TR" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="CaSeS,tr_TR" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="große,tr_TR" expectedOutput="GROSSE,
					GROßE,
					GROSSE,
					GROßE"/>
      <testData input="ångstrom,tr_TR"
                expectedOutput="ÅNGSTROM,
					åNGSTROM,
					ÅNGSTROM,
					åNGSTROM"/>
      <testData input="ÅNGSTROM,tr_TR"
                expectedOutput="ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM"/>
      <testData input="idempotent,tr_TR"
                expectedOutput="İDEMPOTENT,
					IDEMPOTENT,
					İDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="ıdempotent,tr_TR"
                expectedOutput="IDEMPOTENT,
					ıDEMPOTENT,
					IDEMPOTENT,
					ıDEMPOTENT"/>
      <testData input="IDEMPOTENT,tr_TR"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT,tr_TR"
                expectedOutput="İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT"/>
      <testData input="CASES,tr" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="cases,tr" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="CaSeS,tr" expectedOutput="CASES,
					CASES,
					CASES,
					CASES"/>
      <testData input="große,tr" expectedOutput="GROSSE,
					GROßE,
					GROSSE,
					GROßE"/>
      <testData input="ångstrom,tr"
                expectedOutput="ÅNGSTROM,
					åNGSTROM,
					ÅNGSTROM,
					åNGSTROM"/>
      <testData input="ÅNGSTROM,tr"
                expectedOutput="ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM,
					ÅNGSTROM"/>
      <testData input="idempotent,tr"
                expectedOutput="İDEMPOTENT,
					IDEMPOTENT,
					İDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="ıdempotent,tr"
                expectedOutput="IDEMPOTENT,
					ıDEMPOTENT,
					IDEMPOTENT,
					ıDEMPOTENT"/>
      <testData input="IDEMPOTENT,tr"
                expectedOutput="IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT,
					IDEMPOTENT"/>
      <testData input="İDEMPOTENT,tr"
                expectedOutput="İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT,
					İDEMPOTENT"/>
   </testcase>
   <testcase testName="testLowerLocale"
             fieldName="testLowerLocale"
             dataType="Text"
             formula="lower(customText1__c,customText2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customText2" dataType="Text"/>
      <testData input="﻿," expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES," expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="cases," expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="CaSeS," expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="große," expectedOutput="große,
					große,
					große,
					große"/>
      <testData input="ångstrom,"
                expectedOutput="ångstrom,
					ångstrom,
					ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM,"
                expectedOutput="ångstrom,
					Ångstrom,
					ångstrom,
					Ångstrom"/>
      <testData input="idempotent,"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="ıdempotent,"
                expectedOutput="ıdempotent,
					ıdempotent,
					ıdempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT,"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="İDEMPOTENT,"
                expectedOutput="i̇dempotent,
					İdempotent,
					i̇dempotent,
					İdempotent"/>
      <testData input="﻿,en_US" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES,en_US" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="cases,en_US" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="CaSeS,en_US" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="große,en_US" expectedOutput="große,
					große,
					große,
					große"/>
      <testData input="ångstrom,en_US"
                expectedOutput="ångstrom,
					ångstrom,
					ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM,en_US"
                expectedOutput="ångstrom,
					Ångstrom,
					ångstrom,
					Ångstrom"/>
      <testData input="idempotent,en_US"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="ıdempotent,en_US"
                expectedOutput="ıdempotent,
					ıdempotent,
					ıdempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT,en_US"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="İDEMPOTENT,en_US"
                expectedOutput="i̇dempotent,
					İdempotent,
					i̇dempotent,
					İdempotent"/>
      <testData input="﻿,tr_TR" expectedOutput="﻿,
					﻿,
					﻿,
					﻿"/>
      <testData input="CASES,tr_TR" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="cases,tr_TR" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="CaSeS,tr_TR" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="große,tr_TR" expectedOutput="große,
					große,
					große,
					große"/>
      <testData input="ångstrom,tr_TR"
                expectedOutput="ångstrom,
					ångstrom,
					ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM,tr_TR"
                expectedOutput="ångstrom,
					Ångstrom,
					ångstrom,
					Ångstrom"/>
      <testData input="idempotent,tr_TR"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="ıdempotent,tr_TR"
                expectedOutput="ıdempotent,
					ıdempotent,
					ıdempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT,tr_TR"
                expectedOutput="ıdempotent,
					idempotent,
					ıdempotent,
					idempotent"/>
      <testData input="İDEMPOTENT,tr_TR"
                expectedOutput="idempotent,
					İdempotent,
					idempotent,
					İdempotent"/>
      <testData input="CASES,tr" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="cases,tr" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="CaSeS,tr" expectedOutput="cases,
					cases,
					cases,
					cases"/>
      <testData input="große,tr" expectedOutput="große,
					große,
					große,
					große"/>
      <testData input="ångstrom,tr"
                expectedOutput="ångstrom,
					ångstrom,
					ångstrom,
					ångstrom"/>
      <testData input="ÅNGSTROM,tr"
                expectedOutput="ångstrom,
					Ångstrom,
					ångstrom,
					Ångstrom"/>
      <testData input="idempotent,tr"
                expectedOutput="idempotent,
					idempotent,
					idempotent,
					idempotent"/>
      <testData input="ıdempotent,tr"
                expectedOutput="ıdempotent,
					ıdempotent,
					ıdempotent,
					ıdempotent"/>
      <testData input="IDEMPOTENT,tr"
                expectedOutput="ıdempotent,
					idempotent,
					ıdempotent,
					idempotent"/>
      <testData input="İDEMPOTENT,tr"
                expectedOutput="idempotent,
					İdempotent,
					idempotent,
					İdempotent"/>
   </testcase>
   <testcase testName="testFindOnText"
             fieldName="testFindOnText"
             dataType="Double"
             formula="FIND(&#34;Text&#34;, customText1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="Text" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="Hello" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="ConText" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="Context" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="&#34;&#34;" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="''" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="%" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testFindOnTextWithIndex"
             fieldName="testFindOnTextWithIndex"
             dataType="Double"
             formula="FIND(customText1__c, customText2__c, customNumber__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <referenceField fieldName="customText2" dataType="Text"/>
      <referenceField fieldName="customNumber" dataType="Double"/>
      <testData input="-,ABC - XYZ,5" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="-,ABC - XYZ,6" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="Test,FTest,1" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="Test,FTest,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="Test,FFFFTest,-1" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="Test,FFFFTest,5" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="Test,FTest,0" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="-,ABC - XYZ,10" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="%,Foo%Foo,2" expectedOutput="4,
					4,
					4,
					4"/>
   </testcase>
   <testcase testName="testNullCompareWithEmptyString"
             fieldName="testNullCompareWithEmptyString"
             dataType="Boolean"
             formula="customText1__c = ''"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="Text" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Hello" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ConText" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Context" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="&#34;&#34;" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="''" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="%" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testNullNotEqualEmptyString"
             fieldName="testNullNotEqualEmptyString"
             dataType="Boolean"
             formula="customText1__c != ''"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customText1" dataType="Text"/>
      <testData input="Text" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Hello" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="ConText" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Context" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="&#34;&#34;" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="''" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="%" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testAddHoursWithTwoCustFields"
             fieldName="testAddHoursWithTwoCustFields"
             dataType="TimeOnly"
             formula="TimeValue(timeString__c) + customnumber1__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="timeString" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="10:34:55.666, 10800000"
                expectedOutput="13:34:55.666,
					13:34:55.666,
					13:34:55.666,
					13:34:55.666"/>
      <testData input="23:56:45.898, -3600000"
                expectedOutput="22:56:45.898,
					22:56:45.898,
					22:56:45.898,
					22:56:45.898"/>
      <testData input="01:14:23.345,"
                expectedOutput="01:14:23.345,
					01:14:23.345,
					null,
					null"/>
      <testData input="01:66:29.345, 0"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="00:00:00.123, 5400000"
                expectedOutput="01:30:00.123,
					01:30:00.123,
					01:30:00.123,
					01:30:00.123"/>
      <testData input="00:00:00.789, -6300000"
                expectedOutput="Error: java.time.DateTimeException,
					22:15:00.789,
					Error: java.time.DateTimeException,
					22:15:00.789"/>
      <testData input="10:34:55.666, 1080000000"
                expectedOutput="22:34:55.666,
					22:34:55.666,
					22:34:55.666,
					22:34:55.666"/>
      <testData input="01:34:55.666, -1441800000"
                expectedOutput="Error: java.time.DateTimeException,
					09:04:55.666,
					Error: java.time.DateTimeException,
					09:04:55.666"/>
      <testData input="00:00:00.001, -2"
                expectedOutput="Error: java.time.DateTimeException,
					23:59:59.999,
					Error: java.time.DateTimeException,
					23:59:59.999"/>
      <testData input="11:59:59.999, 2"
                expectedOutput="12:00:00.001,
					12:00:00.001,
					12:00:00.001,
					12:00:00.001"/>
   </testcase>
   <testcase testName="testSubtractTwoTimeFields"
             fieldName="testSubtractTwoTimeFields"
             dataType="Double"
             formula="TimeValue(timeString2__c) - TimeValue(timeString1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="timeString1" dataType="Text"/>
      <referenceField fieldName="timeString2" dataType="Text"/>
      <testData input="10:34:55.666,23:59:59.999"
                expectedOutput="48304333,
					48304333,
					48304333,
					48304333"/>
      <testData input="23:59:59.999,10:34:55.666"
                expectedOutput="38095667,
					38095667,
					38095667,
					38095667"/>
      <testData input="23:56:45.898,01:00:00.000"
                expectedOutput="3794102,
					3794101.999999999,
					3794102,
					3794101.999999999"/>
      <testData input="01:00:00.000,23:56:45.898"
                expectedOutput="82605898,
					82605897.99999999,
					82605898,
					82605897.99999999"/>
      <testData input="00:00:29.345,00:00:29.245"
                expectedOutput="86399900,
					86399899.99999999,
					86399900,
					86399899.99999999"/>
      <testData input="00:00:29.245,00:00:29.345"
                expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="00:00:00.000,01:00:00.000"
                expectedOutput="3600000,
					3599999.999999999,
					3600000,
					3599999.999999999"/>
      <testData input="01:00:00.000,00:00:00.000"
                expectedOutput="82800000,
					82799999.99999999,
					82800000,
					82799999.99999999"/>
      <testData input="01:00:00.000," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",01:00:00.000" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="01:00:00.000,01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:66:29.345,01:00:00.000"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:00:00.000,00:00:29.590"
                expectedOutput="82829590,
					82829589.99999999,
					82829590,
					82829589.99999999"/>
      <testData input="01:00:00.000,00:00:30.000"
                expectedOutput="82830000,
					82829999.99999999,
					82830000,
					82829999.99999999"/>
      <testData input="00:00:29.590,00:00:00.000"
                expectedOutput="86370410,
					86370409.99999999,
					86370410,
					86370409.99999999"/>
      <testData input="00:00:30.000,00:00:00.000"
                expectedOutput="86370000,
					86370000,
					86370000,
					86370000"/>
   </testcase>
   <testcase testName="testDistance"
             fieldName="testDistance"
             dataType="Double"
             formula="DISTANCE(GEOLOCATION(customNumber1__c,customNumber2__c),GEOLOCATION(33.37088,-122.61715),'mi')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customNumber2" dataType="Double"/>
      <testData input=","
                expectedOutput="8066.8974274546545,
					8066.897427454654,
					null,
					null"/>
      <testData input="0.0,0.0"
                expectedOutput="8066.8974274546545,
					8066.897427454654,
					8066.8974274546545,
					8066.897427454654"/>
      <testData input="0.0,"
                expectedOutput="8066.8974274546545,
					8066.897427454654,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input=",0.0"
                expectedOutput="8066.8974274546545,
					8066.897427454654,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="43.094722,-75.275833"
                expectedOutput="2618.9134586986042,
					2618.913458698604,
					2618.9134586986042,
					2618.913458698604"/>
      <testData input="200,200"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="-200,-200"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="37.7899,-122.3969"
                expectedOutput="305.57560898133903,
					305.575608981339,
					305.57560898133903,
					305.575608981339"/>
   </testcase>
   <testcase testName="testFormatCurrency"
             fieldName="testFormatCurrency"
             dataType="Text"
             formula="FORMATCURRENCY(isocode__c, customNumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="isocode" dataType="Text"/>
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input="USD,1000"
                expectedOutput="USD 1\,000.00,
					USD 1000.00,
					USD 1\,000.00,
					USD 1000.00"/>
      <testData input="USD,1000.495"
                expectedOutput="USD 1\,000.50,
					USD 1000.50,
					USD 1\,000.50,
					USD 1000.50"/>
      <testData input="USD,-1000"
                expectedOutput="USD -1\,000.00,
					USD -1000.00,
					USD -1\,000.00,
					USD -1000.00"/>
      <testData input="USD,-1000.495"
                expectedOutput="USD -1\,000.50,
					USD -1000.50,
					USD -1\,000.50,
					USD -1000.50"/>
      <testData input="JPY,500" expectedOutput="JPY 500,
					JPY 500,
					JPY 500,
					JPY 500"/>
      <testData input="JPY,999999999"
                expectedOutput="JPY 999\,999\,999,
					JPY 999999999,
					JPY 999\,999\,999,
					JPY 999999999"/>
      <testData input="INR,999999999"
                expectedOutput="INR 999\,999\,999.00,
					INR 999999999.00,
					INR 999\,999\,999.00,
					INR 999999999.00"/>
      <testData input="KWD,15.10"
                expectedOutput="KWD 15.100,
					KWD 15.100,
					KWD 15.100,
					KWD 15.100"/>
      <testData input=",1000"
                expectedOutput=" 1\,000.00,
					1000.00,
					1\,000.00,
					1000.00"/>
      <testData input=",-1000"
                expectedOutput=" -1\,000.00,
					-1000.00,
					-1\,000.00,
					-1000.00"/>
      <testData input="JPY,-999999999"
                expectedOutput="JPY -999\,999\,999,
					JPY -999999999,
					JPY -999\,999\,999,
					JPY -999999999"/>
      <testData input="INR,-999999999"
                expectedOutput="INR -999\,999\,999.00,
					INR -999999999.00,
					INR -999\,999\,999.00,
					INR -999999999.00"/>
      <testData input="KWD,-15.10"
                expectedOutput="KWD -15.100,
					KWD -15.100,
					KWD -15.100,
					KWD -15.100"/>
   </testcase>
   <testcase testName="testIfTextCompareLessThan"
             fieldName="testIfTextCompareLessThan"
             dataType="Boolean"
             formula="text1__c&lt;text2__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="text1" dataType="Text"/>
      <referenceField fieldName="text2" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="FOO,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="foo,FOO" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Foo,Bar" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,Right" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Left,
					Left" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1,2" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="ß,ss" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIfTextCompareGreaterThan"
             fieldName="testIfTextCompareGreaterThan"
             dataType="Boolean"
             formula="text1__c&gt;text2__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="text1" dataType="Text"/>
      <referenceField fieldName="text2" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="FOO,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,FOO" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Foo,Bar" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Left,Right" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,
					Left" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1,2" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ß,ss" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIfTextCompareLessEqual"
             fieldName="testIfTextCompareLessEqual"
             dataType="Boolean"
             formula="text1__c&lt;=text2__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="text1" dataType="Text"/>
      <referenceField fieldName="text2" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="FOO,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="foo,FOO" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Foo,Bar" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,Right" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Left,
					Left" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1,2" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="ß,ss" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIfTextCompareGreaterEqual"
             fieldName="testIfTextCompareGreaterEqual"
             dataType="Boolean"
             formula="text1__c&gt;=text2__c"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="text1" dataType="Text"/>
      <referenceField fieldName="text2" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="FOO,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,FOO" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Foo,Bar" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Left,Right" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,
					Left" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1,2" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ß,ss" expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testFormatDurationTime"
             fieldName="testFormatDurationTime"
             dataType="Text"
             formula="FORMATDURATION(TimeValue(timeString2__c),TimeValue(timeString1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="timeString1" dataType="Text"/>
      <referenceField fieldName="timeString2" dataType="Text"/>
      <testData input="10:34:55.666,23:59:59.999"
                expectedOutput="13:25:04,
					13:25:04,
					13:25:04,
					13:25:04"/>
      <testData input="23:59:59.999,10:34:55.666"
                expectedOutput="13:25:04,
					13:25:04,
					13:25:04,
					13:25:04"/>
      <testData input="23:56:45.898,01:00:00.000"
                expectedOutput="22:56:45,
					22:56:45,
					22:56:45,
					22:56:45"/>
      <testData input="01:00:00.000,23:56:45.898"
                expectedOutput="22:56:45,
					22:56:45,
					22:56:45,
					22:56:45"/>
      <testData input="00:00:29.345,00:00:29.245"
                expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="00:00:29.245,00:00:29.345"
                expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="00:00:00.000,01:00:00.000"
                expectedOutput="01:00:00,
					01:00:00,
					01:00:00,
					01:00:00"/>
      <testData input="01:00:00.000,00:00:00.000"
                expectedOutput="01:00:00,
					01:00:00,
					01:00:00,
					01:00:00"/>
      <testData input="01:00:00.000," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",01:00:00.000" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="01:00:00.000,01:66:29.345"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:66:29.345,01:00:00.000"
                expectedOutput="Error: com.force.formula.FormulaDateException,
					null,
					Error: com.force.formula.FormulaDateException,
					null"/>
      <testData input="01:00:00.000,00:00:29.590"
                expectedOutput="00:59:30,
					00:59:31,
					00:59:30,
					00:59:31"/>
      <testData input="01:00:00.000,00:00:30.000"
                expectedOutput="00:59:30,
					00:59:30,
					00:59:30,
					00:59:30"/>
      <testData input="00:00:29.590,00:00:00.000"
                expectedOutput="00:00:29,
					00:00:29,
					00:00:29,
					00:00:29"/>
      <testData input="00:00:30.000,00:00:00.000"
                expectedOutput="00:00:30,
					00:00:30,
					00:00:30,
					00:00:30"/>
   </testcase>
   <testcase testName="testFormatDurationDateTime"
             fieldName="testFormatDurationDateTime"
             dataType="Text"
             formula="FORMATDURATION(customdatetime2__c,customdatetime1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdatetime1" dataType="DateTime"/>
      <referenceField fieldName="customdatetime2" dataType="DateTime"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="0:00:02:00,
					0:00:02:00,
					0:00:02:00,
					0:00:02:00"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="1461:00:00:00,
					1461:00:00:00,
					1461:00:00:00,
					1461:00:00:00"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="0:00:02:00,
					0:00:02:00,
					0:00:02:00,
					0:00:02:00"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="1:13:26:00,
					1:13:26:00,
					1:13:26:00,
					1:13:26:00"/>
      <testData input=",2004:12:31:11:32:00" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="810473:00:00:00,
					810473:00:00:00,
					810473:00:00:00,
					810473:00:00:00"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="0:00:30:00,
					0:00:30:00,
					0:00:30:00,
					0:00:30:00"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="0:00:15:00,
					0:00:15:00,
					0:00:15:00,
					0:00:15:00"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="0:00:29:00,
					0:00:29:00,
					0:00:29:00,
					0:00:29:00"/>
   </testcase>
   <testcase testName="testFormatDurationSecondsBool"
             fieldName="testFormatDurationSecondsBool"
             dataType="Text"
             formula="FORMATDURATION(customNumber1__c, customcheckbox1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <testData input="," expectedOutput="00:00:00,
					00:00:00,
					null,
					null"/>
      <testData input=",TRUE" expectedOutput="0:00:00:00,
					0:00:00:00,
					null,
					null"/>
      <testData input=",FALSE" expectedOutput="00:00:00,
					00:00:00,
					null,
					null"/>
      <testData input="0.0,TRUE"
                expectedOutput="0:00:00:00,
					0:00:00:00,
					0:00:00:00,
					0:00:00:00"/>
      <testData input="0.0,FALSE"
                expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="0.0," expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="24,TRUE"
                expectedOutput="0:00:00:24,
					0:00:00:24,
					0:00:00:24,
					0:00:00:24"/>
      <testData input="24,FALSE"
                expectedOutput="00:00:24,
					00:00:24,
					00:00:24,
					00:00:24"/>
      <testData input=".99,TRUE"
                expectedOutput="0:00:00:00,
					0:00:00:00,
					0:00:00:00,
					0:00:00:00"/>
      <testData input=".99,FALSE"
                expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="86400,TRUE"
                expectedOutput="1:00:00:00,
					1:00:00:00,
					1:00:00:00,
					1:00:00:00"/>
      <testData input="86400,FALSE"
                expectedOutput="24:00:00,
					24:00:00,
					24:00:00,
					24:00:00"/>
      <testData input="1000000,TRUE"
                expectedOutput="11:13:46:40,
					11:13:46:40,
					11:13:46:40,
					11:13:46:40"/>
      <testData input="1000000,FALSE"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="-1000000,TRUE"
                expectedOutput="11:13:46:40,
					11:13:46:40,
					11:13:46:40,
					11:13:46:40"/>
      <testData input="-1000000,FALSE"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="15,TRUE"
                expectedOutput="0:00:00:15,
					0:00:00:15,
					0:00:00:15,
					0:00:00:15"/>
      <testData input="15,FALSE"
                expectedOutput="00:00:15,
					00:00:15,
					00:00:15,
					00:00:15"/>
      <testData input="30,TRUE"
                expectedOutput="0:00:00:30,
					0:00:00:30,
					0:00:00:30,
					0:00:00:30"/>
      <testData input="30,FALSE"
                expectedOutput="00:00:30,
					00:00:30,
					00:00:30,
					00:00:30"/>
      <testData input="29.59,FALSE"
                expectedOutput="00:00:29,
					00:00:29,
					00:00:29,
					00:00:29"/>
      <testData input="29.59,TRUE"
                expectedOutput="0:00:00:29,
					0:00:00:29,
					0:00:00:29,
					0:00:00:29"/>
      <testData input="29.99,FALSE"
                expectedOutput="00:00:29,
					00:00:29,
					00:00:29,
					00:00:29"/>
      <testData input="29.99,TRUE"
                expectedOutput="0:00:00:29,
					0:00:00:29,
					0:00:00:29,
					0:00:00:29"/>
   </testcase>
   <testcase testName="testFormatDurationSeconds"
             fieldName="testFormatDurationSeconds"
             dataType="Text"
             formula="FORMATDURATION(customNumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input="" expectedOutput="00:00:00,
					00:00:00,
					null,
					null"/>
      <testData input="0.0" expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="24" expectedOutput="00:00:24,
					00:00:24,
					00:00:24,
					00:00:24"/>
      <testData input=".99" expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="86400"
                expectedOutput="24:00:00,
					24:00:00,
					24:00:00,
					24:00:00"/>
      <testData input="1000000"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="-1000000"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="15" expectedOutput="00:00:15,
					00:00:15,
					00:00:15,
					00:00:15"/>
      <testData input="30" expectedOutput="00:00:30,
					00:00:30,
					00:00:30,
					00:00:30"/>
      <testData input="29.59"
                expectedOutput="00:00:29,
					00:00:29,
					00:00:29,
					00:00:29"/>
   </testcase>
   <testcase testName="testFormatDurationWithTrue"
             fieldName="testFormatDurationWithTrue"
             dataType="Text"
             formula="FORMATDURATION(customNumber1__c,TRUE)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input="" expectedOutput="0:00:00:00,
					0:00:00:00,
					null,
					null"/>
      <testData input="0.0"
                expectedOutput="0:00:00:00,
					0:00:00:00,
					0:00:00:00,
					0:00:00:00"/>
      <testData input="24"
                expectedOutput="0:00:00:24,
					0:00:00:24,
					0:00:00:24,
					0:00:00:24"/>
      <testData input=".99"
                expectedOutput="0:00:00:00,
					0:00:00:00,
					0:00:00:00,
					0:00:00:00"/>
      <testData input="86400"
                expectedOutput="1:00:00:00,
					1:00:00:00,
					1:00:00:00,
					1:00:00:00"/>
      <testData input="1000000"
                expectedOutput="11:13:46:40,
					11:13:46:40,
					11:13:46:40,
					11:13:46:40"/>
      <testData input="-1000000"
                expectedOutput="11:13:46:40,
					11:13:46:40,
					11:13:46:40,
					11:13:46:40"/>
      <testData input="15"
                expectedOutput="0:00:00:15,
					0:00:00:15,
					0:00:00:15,
					0:00:00:15"/>
      <testData input="30"
                expectedOutput="0:00:00:30,
					0:00:00:30,
					0:00:00:30,
					0:00:00:30"/>
      <testData input="29.59"
                expectedOutput="0:00:00:29,
					0:00:00:29,
					0:00:00:29,
					0:00:00:29"/>
   </testcase>
   <testcase testName="testFormatDurationWithFalse"
             fieldName="testFormatDurationWithFalse"
             dataType="Text"
             formula="FORMATDURATION(customNumber1__c,FALSE)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <testData input="" expectedOutput="00:00:00,
					00:00:00,
					null,
					null"/>
      <testData input="0.0" expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="24" expectedOutput="00:00:24,
					00:00:24,
					00:00:24,
					00:00:24"/>
      <testData input=".99" expectedOutput="00:00:00,
					00:00:00,
					00:00:00,
					00:00:00"/>
      <testData input="86400"
                expectedOutput="24:00:00,
					24:00:00,
					24:00:00,
					24:00:00"/>
      <testData input="1000000"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="-1000000"
                expectedOutput="277:46:40,
					277:46:40,
					277:46:40,
					277:46:40"/>
      <testData input="15" expectedOutput="00:00:15,
					00:00:15,
					00:00:15,
					00:00:15"/>
      <testData input="30" expectedOutput="00:00:30,
					00:00:30,
					00:00:30,
					00:00:30"/>
      <testData input="29.59"
                expectedOutput="00:00:29,
					00:00:29,
					00:00:29,
					00:00:29"/>
   </testcase>
   <testcase testName="testIfErrorDateTimeValueWithInvalidString"
             fieldName="testIfErrorDateTimeValueWithInvalidString"
             dataType="DateOnly"
             formula="IFERROR(DATETIMEVALUE(&#34;sample &#34;),DATETIMEVALUE(&#34;2005-11-15 17:00:00 &#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2005-11-15 00:00:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2005-11-15 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfErrorDateTimeValueWithValidInValid"
             fieldName="testIfErrorDateTimeValueWithValidInValid"
             dataType="DateOnly"
             formula="IFERROR(DATETIMEVALUE(dateString__c),DATETIMEVALUE(&#34;2005-11-15 17:00:00 &#34;))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="2011-01-29 00:00:09"
                expectedOutput="Sat Jan 29 00:00:09 GMT 2011,
					2011-01-29 00:00:09.0,
					Sat Jan 29 00:00:09 GMT 2011,
					2011-01-29 00:00:09.0"/>
      <testData input="2011-01-9 00:00:09"
                expectedOutput="Sun Jan 09 00:00:09 GMT 2011,
					2011-01-09 00:00:00.0,
					Sun Jan 09 00:00:09 GMT 2011,
					2011-01-09 00:00:00.0"/>
      <testData input="2011-1-29 00:00:00"
                expectedOutput="Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0,
					Sat Jan 29 00:00:00 GMT 2011,
					2011-01-29 00:00:00.0"/>
      <testData input="2011-1-1 00:00:00"
                expectedOutput="Sat Jan 01 00:00:00 GMT 2011,
					2011-01-01 00:00:00.0,
					Sat Jan 01 00:00:00 GMT 2011,
					2011-01-01 00:00:00.0"/>
      <testData input="2011-01-1 1:00:00"
                expectedOutput="Sat Jan 01 01:00:00 GMT 2011,
					2011-01-01 00:00:00.0,
					Sat Jan 01 01:00:00 GMT 2011,
					2011-01-01 00:00:00.0"/>
      <testData input="2011-1-23 2:22:59"
                expectedOutput="Sun Jan 23 02:22:59 GMT 2011,
					2011-01-23 00:00:00.0,
					Sun Jan 23 02:22:59 GMT 2011,
					2011-01-23 00:00:00.0"/>
      <testData input="2012-2-7 5:22:33"
                expectedOutput="Tue Feb 07 05:22:33 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:22:33 GMT 2012,
					2012-02-07 00:00:00.0"/>
      <testData input="2011-13-29 00:00:09"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2012-01-29 00:00:09.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2012-01-29 00:00:09.0"/>
      <testData input="2012:02:02"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					Error: Error parsing date,
					Tue Nov 15 17:00:00 GMT 2005,
					Error: Error parsing date"/>
      <testData input="2012-01-01 24:00:00"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2012-01-02 00:00:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2012-01-02 00:00:00.0"/>
      <testData input="2012-01-01 23:60:00"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2012-01-02 00:00:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2012-01-02 00:00:00.0"/>
      <testData input="2012-01-01 23:00:60"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2012-01-01 23:01:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2012-01-01 23:01:00.0"/>
      <testData input="2012-01-01 23:59:59"
                expectedOutput="Sun Jan 01 23:59:59 GMT 2012,
					2012-01-01 23:59:59.0,
					Sun Jan 01 23:59:59 GMT 2012,
					2012-01-01 23:59:59.0"/>
      <testData input="2012-10-34 00:00:00"
                expectedOutput="Tue Nov 15 17:00:00 GMT 2005,
					2012-11-03 00:00:00.0,
					Tue Nov 15 17:00:00 GMT 2005,
					2012-11-03 00:00:00.0"/>
      <testData input="2012-02-07 5:2:33"
                expectedOutput="Tue Feb 07 05:02:33 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:02:33 GMT 2012,
					2012-02-07 00:00:00.0"/>
      <testData input="2012-02-07 5:22:3"
                expectedOutput="Tue Feb 07 05:22:03 GMT 2012,
					2012-02-07 00:00:00.0,
					Tue Feb 07 05:22:03 GMT 2012,
					2012-02-07 00:00:00.0"/>
   </testcase>
   <testcase testName="testIfErrorSqrt"
             fieldName="testIfErrorSqrt"
             dataType="Double"
             formula="IFERROR(SQRT(customnumber1__c),-1)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="24"
                expectedOutput="4.898979485566356,
					4.898979485566,
					4.898979485566356,
					4.898979485566"/>
      <testData input=".99"
                expectedOutput="0.99498743710662,
					0.994987437107,
					0.99498743710662,
					0.994987437107"/>
      <testData input="-24" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testIfErrorTextTimeValueWithValidInValid"
             fieldName="testIfErrorTextTimeValueWithValidInValid"
             dataType="Text"
             formula="IFERROR(Text(TimeValue(dateString__c)),NULL)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="dateString" dataType="Text"/>
      <testData input="10:34:55.666"
                expectedOutput="10:34:55.666,
					10:34:55.666,
					10:34:55.666,
					10:34:55.666"/>
      <testData input="23:56:45.898"
                expectedOutput="23:56:45.898,
					23:56:45.898,
					23:56:45.898,
					23:56:45.898"/>
      <testData input="01:14:23.345"
                expectedOutput="01:14:23.345,
					01:14:23.345,
					01:14:23.345,
					01:14:23.345"/>
      <testData input="01:66:29.345" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="00:00:29.345"
                expectedOutput="00:00:29.345,
					00:00:29.345,
					00:00:29.345,
					00:00:29.345"/>
      <testData input="00:00:00.789"
                expectedOutput="00:00:00.789,
					00:00:00.789,
					00:00:00.789,
					00:00:00.789"/>
      <testData input="00:00:00.000"
                expectedOutput="00:00:00.000,
					00:00:00.000,
					00:00:00.000,
					00:00:00.000"/>
      <testData input="24:12:56.123"
                expectedOutput="null,
					24:12:56.123,
					null,
					24:12:56.123"/>
      <testData input="23:62:56.123" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="23:52:65.123" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="01:14:23.3456"
                expectedOutput="null,
					01:14:23.346,
					null,
					01:14:23.346"/>
      <testData input="00:00:01.000"
                expectedOutput="00:00:01.000,
					00:00:01.000,
					00:00:01.000,
					00:00:01.000"/>
      <testData input="23:59:59.999"
                expectedOutput="23:59:59.999,
					23:59:59.999,
					23:59:59.999,
					23:59:59.999"/>
   </testcase>
   <testcase testName="testIfErrorBigDivide"
             fieldName="testIfErrorBigDivide"
             dataType="Double"
             formula="IFERROR(((customnumber1__c/customnumber2__c)*customnumber3__c),0)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="1,1000000000,1000000000"
                expectedOutput="1.000000000,
					1,
					1.000000000,
					1"/>
      <testData input="1,123456789123456.24,123456789123456.24"
                expectedOutput="1.00000000000000000000000000000000,
					1,
					1.00000000000000000000000000000000,
					1"/>
      <testData input="1,0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0,1,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",,1" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0,," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0,0,0" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testJsonValue"
             fieldName="testJsonValue"
             dataType="Text"
             formula="JSONVALUE(customjson__c, 'Temperature')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customjson" dataType="Text"/>
      <referenceField fieldName="customtext" dataType="Text"/>
      <testData input=",Temperature" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="{},Temperature" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="{&#34;Temperature&#34;: 50},Temperature"
                expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="{&#34;Temperature&#34;: &#34;a&#34;},Temperature" expectedOutput="a,
					a,
					a,
					a"/>
   </testcase>
   <testcase testName="testJsonPathValue"
             fieldName="testJsonPathValue"
             dataType="Text"
             formula="JSONPATHVALUE(customjson__c, '$.Temperature')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customjson" dataType="Text"/>
      <referenceField fieldName="customtext" dataType="Text"/>
      <testData input=",$.Temperature" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="{},$.Temperature" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="{&#34;Temperature&#34;: 50},$.Temperature"
                expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="{&#34;Temperature&#34;: &#34;a&#34;},$.Temperature"
                expectedOutput="a,
					a,
					a,
					a"/>
   </testcase>
   <testcase testName="testReverse"
             fieldName="testReverse"
             dataType="Text"
             formula="REVERSE(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="eurt eb ot doog oot si sihT,
					eurt eb ot doog oot si sihT,
					eurt eb ot doog oot si sihT,
					eurt eb ot doog oot si sihT"/>
      <testData input="making a way"
                expectedOutput="yaw a gnikam,
					yaw a gnikam,
					yaw a gnikam,
					yaw a gnikam"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="blunder" expectedOutput="rednulb,
					rednulb,
					rednulb,
					rednulb"/>
      <testData input="makesense"
                expectedOutput="esnesekam,
					esnesekam,
					esnesekam,
					esnesekam"/>
      <testData input="does not make sense"
                expectedOutput="esnes ekam ton seod,
					esnes ekam ton seod,
					esnes ekam ton seod,
					esnes ekam ton seod"/>
      <testData input="working my way"
                expectedOutput="yaw ym gnikrow,
					yaw ym gnikrow,
					yaw ym gnikrow,
					yaw ym gnikrow"/>
      <testData input="e" expectedOutput="e,
					e,
					e,
					e"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="gahsoghawtwua9gthsihgkjasifowt9awhtashjovhaot9wtwaiognasohsouwtwthasjighjsofiowutwhjgishjkfatwhthsjghshgwhgthwtooghlsjgklaslghsgoswhuowstasghsjgasngsgsotwtsgksngnshgshtgsgh,
					gahsoghawtwua9gthsihgkjasifowt9awhtashjovhaot9wtwaiognasohsouwtwthasjighjsofiowutwhjgishjkfatwhthsjghshgwhgthwtooghlsjgklaslghsgoswhuowstasghsjgasngsgsotwtsgksngnshgshtgsgh,
					gahsoghawtwua9gthsihgkjasifowt9awhtashjovhaot9wtwaiognasohsouwtwthasjighjsofiowutwhjgishjkfatwhthsjghshgwhgthwtooghlsjgklaslghsgoswhuowstasghsjgasngsgsotwtsgksngnshgshtgsgh,
					gahsoghawtwua9gthsihgkjasifowt9awhtashjovhaot9wtwaiognasohsouwtwthasjighjsofiowutwhjgishjkfatwhthsjghshgwhgthwtooghlsjgklaslghsgoswhuowstasghsjgasngsgsotwtsgksngnshgshtgsgh"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="_(_%!)%^&amp;)%*_)!%)%&amp;%%!_^*)%^$_!)%)^)^)%@)#)041805052,
					_(_%!)%^&amp;)%*_)!%)%&amp;%%!_^*)%^$_!)%)^)^)%@)#)041805052,
					_(_%!)%^&amp;)%*_)!%)%&amp;%%!_^*)%^$_!)%)^)^)%@)#)041805052,
					_(_%!)%^&amp;)%*_)!%)%&amp;%%!_^*)%^$_!)%)^)^)%@)#)041805052"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="r\q\t\n\gslglsgls wioglslgdcws   sgfldsld   jskdjsl hjalb,
					r\q\t\n\gslglsgls wioglslgdcws   sgfldsld   jskdjsl hjalb,
					r\q\t\n\gslglsgls wioglslgdcws   sgfldsld   jskdjsl hjalb,
					r\q\t\n\gslglsgls wioglslgdcws   sgfldsld   jskdjsl hjalb"/>
   </testcase>
   <testcase testName="testMid"
             fieldName="testMid"
             dataType="Text"
             formula="MID(customtext__c, customnumber1__c, customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="123456,1,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,2,6" expectedOutput="23456,
					23456,
					23456,
					23456"/>
      <testData input="123456,2,4" expectedOutput="2345,
					2345,
					2345,
					2345"/>
      <testData input="123456,0,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,6,6" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,7,6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,1,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,2,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,2,-4" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,0,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,6,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,7,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-1,4" expectedOutput="1234,
					1234,
					1234,
					1234"/>
      <testData input="123456,-6,10" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,-10,4" expectedOutput="1234,
					1234,
					1234,
					1234"/>
      <testData input=",1,1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",-1,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,1," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,,1" expectedOutput="1,
					1,
					null,
					null"/>
      <testData input="123456,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456,-1," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-1,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,1,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,2,5" expectedOutput="计年度开始,
					计年度开始,
					计年度开始,
					计年度开始"/>
      <testData input="会计年度开始月份,0,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,8,5" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,10,5" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,-1,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,-10,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,-8,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,,5" expectedOutput="会计年度开,
					会计年度开,
					null,
					null"/>
   </testcase>
   <testcase testName="testSubstr2"
             fieldName="testSubstr2"
             dataType="Text"
             formula="SUBSTR(customtext__c, customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="123456,1" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,2" expectedOutput="23456,
					23456,
					23456,
					23456"/>
      <testData input="123456,0" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,6" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,7" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-1" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,-6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,-7" expectedOutput="null,
					123456,
					null,
					123456"/>
      <testData input="123456,-10" expectedOutput="null,
					123456,
					null,
					123456"/>
      <testData input=",1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456," expectedOutput="123456,
					123456,
					null,
					null"/>
      <testData input="," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,1"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,2"
                expectedOutput="计年度开始月份,
					计年度开始月份,
					计年度开始月份,
					计年度开始月份"/>
      <testData input="会计年度开始月份,0"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,8" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,10" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,-1" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,-10" expectedOutput="null,
					会计年度开始月份,
					null,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,-8"
                expectedOutput="会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份,
					会计年度开始月份"/>
      <testData input="会计年度开始月份,-7"
                expectedOutput="计年度开始月份,
					计年度开始月份,
					计年度开始月份,
					计年度开始月份"/>
      <testData input="会计年度开始月份,-9" expectedOutput="null,
					会计年度开始月份,
					null,
					会计年度开始月份"/>
      <testData input="会计年度开始月份," expectedOutput="会计年度开始月份,
					会计年度开始月份,
					null,
					null"/>
   </testcase>
   <testcase testName="testSubstr3"
             fieldName="testSubstr3"
             dataType="Text"
             formula="SUBSTR(customtext__c, customnumber1__c, customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="123456,1,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,2,6" expectedOutput="23456,
					23456,
					23456,
					23456"/>
      <testData input="123456,2,4" expectedOutput="2345,
					2345,
					2345,
					2345"/>
      <testData input="123456,0,6" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,6,6" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,7,6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,1,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,2,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,2,-4" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,0,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,6,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,7,-6" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-1,4" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="123456,-6,10" expectedOutput="123456,
					123456,
					123456,
					123456"/>
      <testData input="123456,-10,4" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",1,1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",-1,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0,0" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",0," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,1," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,,1" expectedOutput="1,
					1,
					null,
					null"/>
      <testData input="123456,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456,-1," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="123456,-1,-1" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input=",," expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,1,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,2,5" expectedOutput="计年度开始,
					计年度开始,
					计年度开始,
					计年度开始"/>
      <testData input="会计年度开始月份,0,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,8,5" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,10,5" expectedOutput="null,
					null,
					null,
					null"/>
      <testData input="会计年度开始月份,-1,5" expectedOutput="份,
					份,
					份,
					份"/>
      <testData input="会计年度开始月份,-10,5" expectedOutput="null,
					会计年,
					null,
					会计年"/>
      <testData input="会计年度开始月份,-8,5" expectedOutput="会计年度开,
					会计年度开,
					会计年度开,
					会计年度开"/>
      <testData input="会计年度开始月份,,5" expectedOutput="会计年度开,
					会计年度开,
					null,
					null"/>
   </testcase>
   <testcase testName="testRegex"
             fieldName="testRegex"
             dataType="Text"
             formula="if(REGEX(customtext__c, customexpr__c),'TRUE','FALSE')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customexpr" dataType="Text"/>
      <testData input="F.o,F\.o"
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Foo,F\\.o"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,(a*)b"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,Text"
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,ext"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,Te"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,^Text$"
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Text,[T][e][x][t]"
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Hello,(("
                expectedOutput="Error: java.util.regex.PatternSyntaxException,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					Error: java.util.regex.PatternSyntaxException,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="Hello,"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input=",(a*)?"
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input=",a+"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input="aaaaaaaaaaaac,(a*)+b"
                expectedOutput="FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					FALSE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
      <testData input=","
                expectedOutput="TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP),
					TRUE,
					Error: [SQLITE_ERROR] SQL error or missing database (no such function: REGEXP)"/>
   </testcase>
   <testcase testName="testLike"
             fieldName="testRegex"
             dataType="Text"
             formula="if(LIKE(customtext__c, customexpr__c),'TRUE','FALSE')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customexpr" dataType="Text"/>
      <testData input="abcd,abc[def]" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="Howdy,%dy" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="Howdy,Ho_dy" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="Howdy,ho%dy" expectedOutput="FALSE,
					TRUE,
					FALSE,
					TRUE"/>
      <testData input="Cändy,CäNDY" expectedOutput="FALSE,
					TRUE,
					FALSE,
					TRUE"/>
      <testData input="Cändy,CÄndy" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="Cändy,C_NDY" expectedOutput="FALSE,
					TRUE,
					FALSE,
					TRUE"/>
      <testData input="[,[" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="],]" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="a,[acdf]" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="_n,[_n]" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="%,%%" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="Hi%Hi,Hi%%Hi" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="\,\\" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="%,\%" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="H,\s" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="H,*" expectedOutput="FALSE,
					FALSE,
					FALSE,
					FALSE"/>
      <testData input="*,*" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="?,?" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
      <testData input="^$^$,^$^$" expectedOutput="TRUE,
					TRUE,
					TRUE,
					TRUE"/>
   </testcase>
   <testcase testName="testIn2Text"
             fieldName="testIn2Text"
             dataType="Boolean"
             formula="IN(customtext__c, customin1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customin1" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="FOO,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,FOO" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Foo,Bar" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,Right" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,
					Left" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1,2" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ß,ss" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIn2TextNull"
             fieldName="testIn2TextNull"
             dataType="Boolean"
             formula="IN(customtext__c, customin1__c, NULL)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customin1" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="FOO,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,FOO" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Foo,Bar" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,Right" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,
					Left" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1,2" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ß,ss" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIn2TextFoo"
             fieldName="testIn2TextFoo"
             dataType="Boolean"
             formula="IN(customtext__c, customin1__c, 'Foo')"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext" dataType="Text"/>
      <referenceField fieldName="customin1" dataType="Text"/>
      <testData input="foo," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,foo" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="FOO,foo" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="foo,FOO" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Foo,Bar" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="Left,Right" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="Left,
					Left" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1,2" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="ß,ss" expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIn2Num"
             fieldName="testIn2Num"
             dataType="Boolean"
             formula="IN(customnum__c, customin1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnum" dataType="Double"/>
      <referenceField fieldName="customin1" dataType="Double"/>
      <testData input=",24" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="0.0,0.0" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="0.00,0.00" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="0.000,0.000" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="-1.0,99.0" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="99,
					-1" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="-20,-40" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.1111,1.1111" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1.11114,0.00000" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.11115,0.00000" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.111112,0.000043"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="123456789,123456789" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="600,
					0.000600" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="600,
					-600" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.2345,
					1.2345" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1.245,
					0" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					false,
					false"/>
      <testData input="1," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",12.123456789" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.00596,240" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="0,240" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=".0000000000001,1000"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIn2NumNull"
             fieldName="testIn2NumNull"
             dataType="Boolean"
             formula="IN(customnum__c, customin1__c, NULL)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnum" dataType="Double"/>
      <referenceField fieldName="customin1" dataType="Double"/>
      <testData input=",24" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="0.0,0.0" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="0.00,0.00" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="0.000,0.000" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="-1.0,99.0" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="99,
					-1" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="-20,-40" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.1111,1.1111" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1.11114,0.00000" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.11115,0.00000" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.111112,0.000043"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="123456789,123456789" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="600,
					0.000600" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="600,
					-600" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.2345,
					1.2345" expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="1.245,
					0" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="true,
					true,
					false,
					false"/>
      <testData input="1," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",12.123456789" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="1.00596,240" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="0,240" expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=".0000000000001,1000"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="false,
					false,
					false,
					false"/>
   </testcase>
   <testcase testName="testIn2Date"
             fieldName="testIn2Date"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateOnly"/>
      <referenceField fieldName="customin1" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIn2DateNull"
             fieldName="testIn2DateNull"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c, NULL)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateOnly"/>
      <referenceField fieldName="customin1" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:10:34:00,"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIn2DateNullConst"
             fieldName="testIn2DateNull"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c, DATE(2004,2,28))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateOnly"/>
      <referenceField fieldName="customin1" dataType="DateOnly"/>
      <testData input="2004:12:31:11:32:00,2004:12:31:11:30:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2008:02:28:10:34:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:32:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:02:28:10:34:00,2004:03:01:00:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input=",2004:12:31:11:32:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:10:34:00," expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="3999:02:28:10:34:00,1780:02:28:10:34:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:30:00,2022:08:21:08:15:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2022:08:21:08:29:00,2022:08:21:08:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIn2DateTime"
             fieldName="testIn2DateTime"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateTime"/>
      <referenceField fieldName="customin1" dataType="DateTime"/>
      <testData input="2004:12:31:11:00:00,2004:12:25:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:02:27:02:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:00:00,2005:01:01:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:03:01:02:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:23:30:00,2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,2004:02:28:24:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIn2DateTimeNull"
             fieldName="testIn2DateTimeNull"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c, NULL)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateTime"/>
      <referenceField fieldName="customin1" dataType="DateTime"/>
      <testData input="2004:12:31:11:00:00,2004:12:25:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:02:27:02:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:00:00,2005:01:01:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:03:01:02:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:23:30:00,2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,2004:02:28:24:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testIn2DateTimeConst"
             fieldName="testIn2DateTimeConst"
             dataType="Boolean"
             formula="IN(customdate__c, customin1__c, DATETIMEVALUE('2004-02-28 11:00:00'))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate" dataType="DateTime"/>
      <referenceField fieldName="customin1" dataType="DateTime"/>
      <testData input="2004:12:31:11:00:00,2004:12:25:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:02:27:02:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:12:31:11:00:00,2005:01:01:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:11:00:00,2004:03:01:02:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
      <testData input="2004:12:31:11:30:00,2004:12:31:11:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:23:30:00,2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input=",2004:02:28:24:00:00"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,"
                expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="," expectedOutput="false,
					false,
					false,
					false"/>
      <testData input="2004:02:28:24:00:00,2004:02:28:24:00:00"
                expectedOutput="true,
					true,
					true,
					true"/>
   </testcase>
   <testcase testName="testVALUE"
             fieldName="testVALUE"
             dataType="Double"
             formula="value(customtext1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="1234"
                expectedOutput="1234,
					1233.999999999999,
					1234,
					1233.999999999999"/>
      <testData input="-1234"
                expectedOutput="-1234,
					-1233.999999999999,
					-1234,
					-1233.999999999999"/>
      <testData input="1.234" expectedOutput="1.234,
					1.234,
					1.234,
					1.234"/>
      <testData input="-1.234" expectedOutput="-1.234,
					-1.234,
					-1.234,
					-1.234"/>
      <testData input="--1234"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input="1-234"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					1,
					Error: com.force.formula.impl.InvalidNumericValueException,
					1"/>
      <testData input="-1.2.34"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					-1.2,
					Error: com.force.formula.impl.InvalidNumericValueException,
					-1.2"/>
      <testData input="-"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input=".."
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input="..1"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input="1.."
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					1,
					Error: com.force.formula.impl.InvalidNumericValueException,
					1"/>
      <testData input="1..1"
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					1,
					Error: com.force.formula.impl.InvalidNumericValueException,
					1"/>
      <testData input="."
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input="-."
                expectedOutput="Error: com.force.formula.impl.InvalidNumericValueException,
					0,
					Error: com.force.formula.impl.InvalidNumericValueException,
					0"/>
      <testData input="1." expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1" expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input="+1." expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="+.1" expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input="1.e1" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="1.e+1" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="1.e-1" expectedOutput="0.1,
					0.1,
					0.1,
					0.1"/>
      <testData input=".1e1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1e+1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1e-1" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
      <testData input="123.4512345e2"
                expectedOutput="12345.12345,
					12345.12344999999,
					12345.12345,
					12345.12344999999"/>
      <testData input="" expectedOutput="null,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testISNUMBER"
             fieldName="testISNUMBER"
             dataType="Double"
             formula="if(ISNUMBER(customtext1__c),1,0)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="1234" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1234" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.234" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1.234" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="--1234" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="1-234" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="-1.2.34" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="-" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input=".." expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="..1" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="1.." expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="1..1" expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="." expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="-." expectedOutput="0,
					1,
					0,
					1"/>
      <testData input="1." expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="+1." expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="+.1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.e1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.e+1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.e-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1e1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1e+1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".1e-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123.4512345e2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testAddSimple"
             fieldName="testAddSimple"
             dataType="Double"
             formula="(customnumber1__c+customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="24,
					24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="98.0,
					98,
					98.0,
					98"/>
      <testData input="99,
					-1" expectedOutput="98,
					98,
					98,
					98"/>
      <testData input="-20,-40" expectedOutput="-60,
					-60,
					-60,
					-60"/>
      <testData input="1.1111,1.1111"
                expectedOutput="2.2222,
					2.2222,
					2.2222,
					2.2222"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.11114,
					1.11114,
					1.11114,
					1.11114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.11115,
					1.11115,
					1.11115,
					1.11115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.111155,
					1.111155,
					1.111155,
					1.111155"/>
      <testData input="123456789,123456789"
                expectedOutput="246913578,
					246913578,
					246913578,
					246913578"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="246913578.246913578,
					246913578.2469135,
					246913578.246913578,
					246913578.2469135"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="0.000000000,
					0,
					0.000000000,
					0"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-246913578.246913578,
					-246913578.2469135,
					-246913578.246913578,
					-246913578.2469135"/>
      <testData input="600, 0.000600"
                expectedOutput="600.000600,
					600.0006,
					600.000600,
					600.0006"/>
      <testData input="600,
					-600" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.2345,
					1.2345" expectedOutput="2.4690,
					2.469,
					2.4690,
					2.469"/>
      <testData input="1.245,
					0" expectedOutput="1.245,
					1.245,
					1.245,
					1.245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="12.123456789,
					12.123456789,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="241.00596,
					241.00596,
					241.00596,
					241.00596"/>
      <testData input="0,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input=".0000000000001,1000"
                expectedOutput="1000.0000000000001,
					1000,
					1000.0000000000001,
					1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="-999.9999999999999,
					-1000,
					-999.9999999999999,
					-1000"/>
   </testcase>
   <testcase testName="testAddScale"
             fieldName="testAddScale"
             dataType="Double"
             formula="(customnumber1__c+custompercent1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <testData input=",24" expectedOutput="0.24,
					0.24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-0.01,
					-0.01,
					-0.01,
					-0.01"/>
      <testData input="99,
					-1" expectedOutput="98.99,
					98.99,
					98.99,
					98.99"/>
      <testData input="-20,-40" expectedOutput="-20.4,
					-20.4,
					-20.4,
					-20.4"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.122211,
					1.122211,
					1.122211,
					1.122211"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.11114,
					1.11114,
					1.11114,
					1.11114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.11115,
					1.11115,
					1.11115,
					1.11115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.11111243,
					1.11111243,
					1.11111243,
					1.11111243"/>
      <testData input="123456789,123456789"
                expectedOutput="124691356.89,
					124691356.89,
					124691356.89,
					124691356.89"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="124691357.01469135689,
					124691357.0146913,
					124691357.01469135689,
					124691357.0146913"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="122222221.23222222111,
					122222221.2322222,
					122222221.23222222111,
					122222221.2322222"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-124691357.01469135689,
					-124691357.0146913,
					-124691357.01469135689,
					-124691357.0146913"/>
      <testData input="600, 0.000600"
                expectedOutput="600.000006,
					600.000006,
					600.000006,
					600.000006"/>
      <testData input="600,
					-600" expectedOutput="594,
					594,
					594,
					594"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.246845,
					1.246845,
					1.246845,
					1.246845"/>
      <testData input="1.245,
					0" expectedOutput="1.245,
					1.245,
					1.245,
					1.245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="0.12123456789,
					0.12123456789,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="3.40596,
					3.40596,
					3.40596,
					3.40596"/>
      <testData input="0,240" expectedOutput="2.4,
					2.4,
					2.4,
					2.4"/>
      <testData input=".0000000000001,1000"
                expectedOutput="10.0000000000001,
					10,
					10.0000000000001,
					10"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="-9.9999999999999,
					-10,
					-9.9999999999999,
					-10"/>
   </testcase>
   <testcase testName="testAddWithDivisionSimple"
             fieldName="testAddWithDivisionSimple"
             dataType="Double"
             formula="customnumber1__c/customnumber2__c + 1"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="9,
					9" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="9,
					10" expectedOutput="1.9,
					1.9,
					1.9,
					1.9"/>
      <testData input="12, 11"
                expectedOutput="2.09090909090909090909090909090909,
					2.090909090909,
					2.09090909090909090909090909090909,
					2.090909090909"/>
   </testcase>
   <testcase testName="testAddWithDivision"
             fieldName="testAddWithDivision"
             dataType="Double"
             formula="customnumber1__c/(customnumber2__c + 1)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="9,
					9" expectedOutput="0.9,
					0.9,
					0.9,
					0.9"/>
      <testData input="9, 10"
                expectedOutput="0.81818181818181818181818181818182,
					0.818181818182,
					0.81818181818181818181818181818182,
					0.818181818182"/>
      <testData input="12,
					11" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testSubWithDivisionSimple"
             fieldName="testSubWithDivisionSimple"
             dataType="Double"
             formula="customnumber1__c/customnumber2__c - 1"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="9,
					9" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="9,
					10" expectedOutput="-0.1,
					-0.1,
					-0.1,
					-0.1"/>
      <testData input="12, 11"
                expectedOutput="0.09090909090909090909090909090909,
					0.090909090909,
					0.09090909090909090909090909090909,
					0.090909090909"/>
   </testcase>
   <testcase testName="testSubWithDivision"
             fieldName="testSubWithDivision"
             dataType="Double"
             formula="customnumber1__c/(customnumber2__c - 1)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="9,
					9" expectedOutput="1.125,
					1.125,
					1.125,
					1.125"/>
      <testData input="9,
					10" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="12,
					11" expectedOutput="1.2,
					1.2,
					1.2,
					1.2"/>
   </testcase>
   <testcase testName="testSubSimple"
             fieldName="testSubSimple"
             dataType="Double"
             formula="(customnumber1__c-customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="-24,
					-24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-100.0,
					-100,
					-100.0,
					-100"/>
      <testData input="99,
					-1" expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="-20,-40" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="1.1111,1.1111" expectedOutput="0.0000,
					0,
					0.0000,
					0"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.11114,
					1.11114,
					1.11114,
					1.11114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.11115,
					1.11115,
					1.11115,
					1.11115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.111069,
					1.111069,
					1.111069,
					1.111069"/>
      <testData input="123456789,123456789" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="0.000000000,
					0,
					0.000000000,
					0"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="246913578.246913578,
					246913578.2469135,
					246913578.246913578,
					246913578.2469135"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="0.000000000,
					0,
					0.000000000,
					0"/>
      <testData input="600, 0.000600"
                expectedOutput="599.999400,
					599.9994,
					599.999400,
					599.9994"/>
      <testData input="600,
					-600" expectedOutput="1200,
					1200,
					1200,
					1200"/>
      <testData input="1.2345,
					1.2345" expectedOutput="0.0000,
					0,
					0.0000,
					0"/>
      <testData input="1.245,
					0" expectedOutput="1.245,
					1.245,
					1.245,
					1.245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="-12.123456789,
					-12.123456789,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="-238.99404,
					-238.99404,
					-238.99404,
					-238.99404"/>
      <testData input="0,240" expectedOutput="-240,
					-240,
					-240,
					-240"/>
      <testData input=".0000000000001,1000"
                expectedOutput="-999.9999999999999,
					-1000,
					-999.9999999999999,
					-1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="1000.0000000000001,
					1000,
					1000.0000000000001,
					1000"/>
   </testcase>
   <testcase testName="testSubUnary"
             fieldName="testSubUnary"
             dataType="Double"
             formula="-(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="24" expectedOutput="-24,
					-24,
					-24,
					-24"/>
      <testData input=".99" expectedOutput="-0.99,
					-0.99,
					-0.99,
					-0.99"/>
      <testData input="-24" expectedOutput="24,
					24,
					24,
					24"/>
   </testcase>
   <testcase testName="testMultiplyWithExpr"
             fieldName="testMultiplyWithExpr"
             dataType="Currency"
             formula="(customformula0__c*customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="(custompercent1__c*customcurrency1__c)">
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
      </referenceField>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="100,200,100"
                expectedOutput="20000,
					20000.0,
					20000,
					20000.0"/>
      <testData input="0,0,0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="-1,-1,-1"
                expectedOutput="-0.01,
					-0.01,
					-0.01,
					-0.01"/>
      <testData input="123456789,123456789,12345678"
                expectedOutput="1881676234614946109182.38,
					1881676234614946000000,
					1881676234614946109182.38,
					1881676234614946000000"/>
      <testData input=",22,0" expectedOutput="0,
					0.0,
					null,
					null"/>
      <testData input=",,10" expectedOutput="0,
					0.0,
					null,
					null"/>
   </testcase>
   <testcase testName="testIfNumCompareGreater"
             fieldName="testIfNumCompareGreater"
             dataType="Double"
             formula="IF((customnumber1__c&gt;customcurrency1__c),customcurrency2__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="12345678,1234567,200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input=",10.24,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="10.24,,200,300" expectedOutput="200,
					200,
					300,
					300"/>
      <testData input=",,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="0,0,200,300" expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.123456789,
					0.123456789,
					0.123456789"/>
   </testcase>
   <testcase testName="testIfNumCompareGreaterOrEqual"
             fieldName="testIfNumCompareGreaterOrEqual"
             dataType="Currency"
             formula="IF((customcurrency1__c&gt;=customcurrency2__c),customcurrency3__c,customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <referenceField fieldName="customcurrency3" dataType="Currency"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input=",10.24,200,300" expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="10.24,,200,300" expectedOutput="200,
					200.0,
					300,
					300.0"/>
      <testData input=",,200,300" expectedOutput="200,
					200.0,
					300,
					300.0"/>
      <testData input="123.23456789,123.123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="300,
					300.0,
					300,
					300.0"/>
      <testData input="200, -200.434, 200,300"
                expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="0,0,200,300" expectedOutput="200,
					200.0,
					200,
					200.0"/>
      <testData input="200,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
      <testData input="201,200,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
      <testData input="200,201,0.123456789,0.123456789"
                expectedOutput="0.123456789,
					0.1234567889999999,
					0.123456789,
					0.1234567889999999"/>
   </testcase>
   <testcase testName="testAbsUsesExp"
             fieldName="testAbsUsesExp"
             dataType="Double"
             formula="ABS(EXP(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="2"
                expectedOutput="7.38905609893065,
					7.389056098931,
					7.38905609893065,
					7.389056098931"/>
      <testData input="-1"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="56"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="110"
                expectedOutput="592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000,
					592097202766467000000000000000000000000000000000"/>
      <testData input="20"
                expectedOutput="485165195.4097903,
					485165195.4097902,
					485165195.4097903,
					485165195.4097902"/>
   </testcase>
   <testcase testName="testAbsUsesCeiling"
             fieldName="testAbsUsesCeiling"
             dataType="Double"
             formula="ABS(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-0.245" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".24456" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.24456" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testAbsUsesFloor"
             fieldName="testAbsUsesFloor"
             dataType="Double"
             formula="ABS(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.24456" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testAbsUsesAbs"
             fieldName="testAbsUsesAbs"
             dataType="Double"
             formula="ABS(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345"
                expectedOutput="20.12345,
					20.12345,
					20.12345,
					20.12345"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="0.00034,
					0.00034,
					0.00034,
					0.00034"/>
      <testData input="-.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.245" expectedOutput="0.245,
					0.245,
					0.245,
					0.245"/>
      <testData input=".24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="0.24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testAbsUsesLog"
             fieldName="testAbsUsesLog"
             dataType="Double"
             formula="ABS(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.30102999566398114,
					0.301029995664,
					0.30102999566398114,
					0.301029995664"/>
      <testData input="3"
                expectedOutput="0.47712125471966244,
					0.47712125472,
					0.47712125471966244,
					0.47712125472"/>
      <testData input="4"
                expectedOutput="0.6020599913279623,
					0.602059991328,
					0.6020599913279623,
					0.602059991328"/>
      <testData input="5"
                expectedOutput="0.6989700043360187,
					0.698970004336,
					0.6989700043360187,
					0.698970004336"/>
      <testData input="6"
                expectedOutput="0.7781512503836435,
					0.778151250384,
					0.7781512503836435,
					0.778151250384"/>
      <testData input="10000" expectedOutput="4.0,
					4,
					4.0,
					4"/>
      <testData input="10" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="16"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="2.56"
                expectedOutput="0.40823996531184953,
					0.408239965312,
					0.40823996531184953,
					0.408239965312"/>
      <testData input="123456789.123456789"
                expectedOutput="8.091514977603564,
					8.091514977604,
					8.091514977603564,
					8.091514977604"/>
   </testcase>
   <testcase testName="testAbsUsesLn"
             fieldName="testAbsUsesLn"
             dataType="Double"
             formula="ABS(LN(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.6931471805599453,
					0.693147180559,
					0.6931471805599453,
					0.693147180559"/>
      <testData input="3"
                expectedOutput="1.0986122886681098,
					1.098612288666,
					1.0986122886681098,
					1.098612288666"/>
      <testData input="4"
                expectedOutput="1.3862943611198906,
					1.386294361117,
					1.3862943611198906,
					1.386294361117"/>
      <testData input="5"
                expectedOutput="1.6094379124341003,
					1.609437912431,
					1.6094379124341003,
					1.609437912431"/>
      <testData input="6"
                expectedOutput="1.791759469228055,
					1.791759469225,
					1.791759469228055,
					1.791759469225"/>
      <testData input="10000"
                expectedOutput="9.210340371976184,
					9.21034037196,
					9.210340371976184,
					9.21034037196"/>
      <testData input="10"
                expectedOutput="2.302585092994046,
					2.30258509299,
					2.302585092994046,
					2.30258509299"/>
      <testData input="16"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="2.56"
                expectedOutput="0.9400072584914712,
					0.94000725849,
					0.9400072584914712,
					0.94000725849"/>
      <testData input="123456789.123456789"
                expectedOutput="18.63140176716802,
					18.631401767135,
					18.63140176716802,
					18.631401767135"/>
   </testcase>
   <testcase testName="testAbsUsesSqrt"
             fieldName="testAbsUsesSqrt"
             dataType="Double"
             formula="ABS(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="1.4142135623730951,
					1.414213562373,
					1.4142135623730951,
					1.414213562373"/>
      <testData input="3"
                expectedOutput="1.7320508075688772,
					1.732050807569,
					1.7320508075688772,
					1.732050807569"/>
      <testData input="4" expectedOutput="2.0,
					2,
					2.0,
					2"/>
      <testData input="7"
                expectedOutput="2.6457513110645907,
					2.645751311065,
					2.6457513110645907,
					2.645751311065"/>
      <testData input="12"
                expectedOutput="3.4641016151377544,
					3.464101615138,
					3.4641016151377544,
					3.464101615138"/>
      <testData input="16" expectedOutput="4.0,
					4,
					4.0,
					4"/>
      <testData input="256" expectedOutput="16.0,
					16,
					16.0,
					16"/>
      <testData input="65536.00" expectedOutput="256.0,
					256,
					256.0,
					256"/>
      <testData input="65536.16"
                expectedOutput="256.0003124998093,
					256.000312499809,
					256.0003124998093,
					256.000312499809"/>
      <testData input="65536.64"
                expectedOutput="256.0012499969483,
					256.001249996948,
					256.0012499969483,
					256.001249996948"/>
      <testData input="65536.4816"
                expectedOutput="256.0009406232719,
					256.000940623272,
					256.0009406232719,
					256.000940623272"/>
   </testcase>
   <testcase testName="testAbsUsesRound"
             fieldName="testAbsUsesRound"
             dataType="Double"
             formula="ABS(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="20.123444,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.123445,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12345,4"
                expectedOutput="20.1235,
					20.1235,
					20.1235,
					20.1235"/>
      <testData input="20.12,4" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="-1,2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1,0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-.244,2" expectedOutput="0.24,
					0.24,
					0.24,
					0.24"/>
      <testData input="-0.244,2" expectedOutput="0.24,
					0.24,
					0.24,
					0.24"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="256,
					256,
					null,
					null"/>
   </testcase>
   <testcase testName="testAbsUsesTrunc"
             fieldName="testAbsUsesRound"
             dataType="Double"
             formula="ABS(TRUNC(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="20.123444,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.123445,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12345,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12,4" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="-1,2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1,0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-.244,2" expectedOutput="0.24,
					0.24,
					0.24,
					0.24"/>
      <testData input="-0.244,2" expectedOutput="0.24,
					0.24,
					0.24,
					0.24"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="256,
					256,
					null,
					null"/>
   </testcase>
   <testcase testName="testAbsUsesMOD"
             fieldName="testAbsUsesMOD"
             dataType="Double"
             formula="ABS(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345, 2"
                expectedOutput="0.12345,
					0.12345,
					0.12345,
					0.12345"/>
      <testData input="20.123444,13"
                expectedOutput="7.123444,
					7.123444,
					7.123444,
					7.123444"/>
      <testData input="20.123445,7"
                expectedOutput="6.123445,
					6.123445,
					6.123445,
					6.123445"/>
      <testData input="20.12345,23"
                expectedOutput="20.12345,
					20.12345,
					20.12345,
					20.12345"/>
      <testData input="20.12,1" expectedOutput="0.12,
					0.12,
					0.12,
					0.12"/>
      <testData input="-1,2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1,2654" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="1.123456789,
					1.123456791043,
					1.123456789,
					1.123456791043"/>
      <testData input="123456789.123456789,2"
                expectedOutput="1.123456789,
					1.123456791043,
					1.123456789,
					1.123456791043"/>
      <testData input="46,-456" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3"
                expectedOutput="0.00034,
					0.00034,
					0.00034,
					0.00034"/>
      <testData input="-.244,2" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.244,2" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.245,23223244" expectedOutput="0.245,
					0.245,
					0.245,
					0.245"/>
      <testData input=".24456,123456789"
                expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="0.24456,0.000045"
                expectedOutput="0.000030,
					0.00003,
					0.000030,
					0.00003"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testAbsCurr"
             fieldName="testAbsCurr"
             dataType="Currency"
             formula="ABS(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="20" expectedOutput="20,
					20.0,
					20,
					20.0"/>
      <testData input="20.12345"
                expectedOutput="20.12345,
					20.12344999999999,
					20.12345,
					20.12344999999999"/>
      <testData input="-1" expectedOutput="1,
					1.0,
					1,
					1.0"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="46"
                expectedOutput="46,
					45.99999999999999,
					46,
					45.99999999999999"/>
      <testData input="-0" expectedOutput="0,
					0.0,
					0,
					0.0"/>
      <testData input="-0.00034" expectedOutput="0.00034,
					0.00034,
					0.00034,
					0.00034"/>
      <testData input="-.244"
                expectedOutput="0.244,
					0.2439999999999999,
					0.244,
					0.2439999999999999"/>
      <testData input="-0.244"
                expectedOutput="0.244,
					0.2439999999999999,
					0.244,
					0.2439999999999999"/>
      <testData input="-0.245"
                expectedOutput="0.245,
					0.2449999999999999,
					0.245,
					0.2449999999999999"/>
      <testData input=".24456"
                expectedOutput="0.24456,
					0.2445599999999999,
					0.24456,
					0.2445599999999999"/>
      <testData input="0.24456"
                expectedOutput="0.24456,
					0.2445599999999999,
					0.24456,
					0.2445599999999999"/>
      <testData input="16" expectedOutput="16,
					16.0,
					16,
					16.0"/>
      <testData input="256"
                expectedOutput="256,
					255.9999999999999,
					256,
					255.9999999999999"/>
      <testData input="-256"
                expectedOutput="256,
					255.9999999999999,
					256,
					255.9999999999999"/>
   </testcase>
   <testcase testName="testAbsSwapTypes"
             fieldName="testAbsSwapTypes"
             dataType="Double"
             formula="ABS(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345"
                expectedOutput="20.12345,
					20.12345,
					20.12345,
					20.12345"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="0.00034,
					0.00034,
					0.00034,
					0.00034"/>
      <testData input="-.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.245" expectedOutput="0.245,
					0.245,
					0.245,
					0.245"/>
      <testData input=".24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="0.24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testAbsUsesIf"
             fieldName="testAbsUsesIf"
             dataType="Double"
             formula="ABS(IF(true,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="99,
					-1" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="-20,-40" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.1111,
					1.1111,
					1.1111,
					1.1111"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.11114,
					1.11114,
					1.11114,
					1.11114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.11115,
					1.11115,
					1.11115,
					1.11115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.111112,
					1.111112,
					1.111112,
					1.111112"/>
      <testData input="123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="600,
					0.000600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="600,
					-600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.2345,
					1.2345,
					1.2345,
					1.2345"/>
      <testData input="1.245,
					0" expectedOutput="1.245,
					1.245,
					1.245,
					1.245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="1.00596,
					1.00596,
					1.00596,
					1.00596"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000"
                expectedOutput="0.0000000000001,
					0,
					0.0000000000001,
					0"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="0.0000000000001,
					0,
					0.0000000000001,
					0"/>
   </testcase>
   <testcase testName="testAbsUsesCase"
             fieldName="testAbsUsesCase"
             dataType="Double"
             formula="ABS(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",,200,2004:12:04,300,400" expectedOutput="400,
					400,
					400,
					400"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,,,," expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testAbsUsesLen"
             fieldName="testAbsUsesLen"
             dataType="Double"
             formula="ABS(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true" expectedOutput="27,
					27,
					27,
					27"/>
      <testData input="making a way" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="blunder" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="makesense" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="does not make sense" expectedOutput="19,
					19,
					19,
					19"/>
      <testData input="working my way" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="e" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="172,
					172,
					172,
					172"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="52,
					52,
					52,
					52"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="57,
					57,
					57,
					57"/>
   </testcase>
   <testcase testName="testAbsUsesValue"
             fieldName="testAbsUsesValue"
             dataType="Double"
             formula="ABS(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345"
                expectedOutput="20.12345,
					20.12345,
					20.12345,
					20.12345"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="0.00034,
					0.00034,
					0.00034,
					0.00034"/>
      <testData input="-.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.244" expectedOutput="0.244,
					0.244,
					0.244,
					0.244"/>
      <testData input="-0.245" expectedOutput="0.245,
					0.245,
					0.245,
					0.245"/>
      <testData input=".24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="0.24456" expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testAbsUsesMinus"
             fieldName="testAbsUsesMinus"
             dataType="Double"
             formula="ABS((custompercent1__c-customcurrency1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input=",24" expectedOutput="24,
					24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="99.01,
					99.01,
					99.01,
					99.01"/>
      <testData input="99,
					-1" expectedOutput="1.99,
					1.99,
					1.99,
					1.99"/>
      <testData input="-20,-40" expectedOutput="39.8,
					39.8,
					39.8,
					39.8"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.099989,
					1.099989,
					1.099989,
					1.099989"/>
      <testData input="1.11114,0.00000"
                expectedOutput="0.0111114,
					0.0111114,
					0.0111114,
					0.0111114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="0.0111115,
					0.0111115,
					0.0111115,
					0.0111115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="0.01106812,
					0.01106812,
					0.01106812,
					0.01106812"/>
      <testData input="123456789,123456789"
                expectedOutput="122222221.11,
					122222221.1099999,
					122222221.11,
					122222221.1099999"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="122222221.23222222111,
					122222221.2322222,
					122222221.23222222111,
					122222221.2322222"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="124691357.01469135689,
					124691357.0146913,
					124691357.01469135689,
					124691357.0146913"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="122222221.23222222111,
					122222221.2322222,
					122222221.23222222111,
					122222221.2322222"/>
      <testData input="600, 0.000600"
                expectedOutput="5.999400,
					5.9994,
					5.999400,
					5.9994"/>
      <testData input="600,
					-600" expectedOutput="606,
					606,
					606,
					606"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.222155,
					1.222155,
					1.222155,
					1.222155"/>
      <testData input="1.245,
					0" expectedOutput="0.01245,
					0.01245,
					0.01245,
					0.01245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0.01,
					0.01,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="12.123456789,
					12.123456789,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="239.9899404,
					239.9899404,
					239.9899404,
					239.9899404"/>
      <testData input="0,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input=".0000000000001,1000"
                expectedOutput="999.999999999999999,
					1000,
					999.999999999999999,
					1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="1000.000000000000001,
					1000,
					1000.000000000000001,
					1000"/>
   </testcase>
   <testcase testName="testAbsUsesPlus"
             fieldName="testAbsUsesPlus"
             dataType="Double"
             formula="ABS((custompercent1__c+customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",24" expectedOutput="24,
					24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="98.99,
					98.99,
					98.99,
					98.99"/>
      <testData input="99,
					-1" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
      <testData input="-20,-40" expectedOutput="40.2,
					40.2,
					40.2,
					40.2"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.122211,
					1.122211,
					1.122211,
					1.122211"/>
      <testData input="1.11114,0.00000"
                expectedOutput="0.0111114,
					0.0111114,
					0.0111114,
					0.0111114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="0.0111115,
					0.0111115,
					0.0111115,
					0.0111115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="0.01115412,
					0.01115412,
					0.01115412,
					0.01115412"/>
      <testData input="123456789,123456789"
                expectedOutput="124691356.89,
					124691356.89,
					124691356.89,
					124691356.89"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="124691357.01469135689,
					124691357.0146913,
					124691357.01469135689,
					124691357.0146913"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="122222221.23222222111,
					122222221.2322222,
					122222221.23222222111,
					122222221.2322222"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="124691357.01469135689,
					124691357.0146913,
					124691357.01469135689,
					124691357.0146913"/>
      <testData input="600, 0.000600"
                expectedOutput="6.000600,
					6.0006,
					6.000600,
					6.0006"/>
      <testData input="600,
					-600" expectedOutput="594,
					594,
					594,
					594"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.246845,
					1.246845,
					1.246845,
					1.246845"/>
      <testData input="1.245,
					0" expectedOutput="0.01245,
					0.01245,
					0.01245,
					0.01245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0.01,
					0.01,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="12.123456789,
					12.123456789,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="240.0100596,
					240.0100596,
					240.0100596,
					240.0100596"/>
      <testData input="0,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input=".0000000000001,1000"
                expectedOutput="1000.000000000000001,
					1000,
					1000.000000000000001,
					1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="999.999999999999999,
					1000,
					999.999999999999999,
					1000"/>
   </testcase>
   <testcase testName="testRoundUsesCase"
             fieldName="testRoundUsesCase"
             dataType="Double"
             formula="ROUND(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c),customformula1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="CASE(customdatetime1__c,customdatetime2__c,customnumber4__c,customdatetime3__c,customnumber5__c,customnumber6__c)">
         <referenceField fieldName="customdatetime1" dataType="DateTime"/>
         <referenceField fieldName="customdatetime2" dataType="DateTime"/>
         <referenceField fieldName="customnumber4" dataType="Double"/>
         <referenceField fieldName="customdatetime3" dataType="DateTime"/>
         <referenceField fieldName="customnumber5" dataType="Double"/>
         <referenceField fieldName="customnumber6" dataType="Double"/>
      </referenceField>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400,1999:12:31:24:00:00,2000:01:01:00:00:00,0,1999:12:31:23:59:59,1,2"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,,,,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testRoundSimple"
             fieldName="testRoundSimple"
             dataType="Double"
             formula="ROUND(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=".002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input=".002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-.002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20000.000,2"
                expectedOutput="20000.00,
					20000,
					20000.00,
					20000"/>
      <testData input="20000.000,-2" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="4.47,1" expectedOutput="4.5,
					4.5,
					4.5,
					4.5"/>
      <testData input="4.47,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-4.47,1" expectedOutput="-4.5,
					-4.5,
					-4.5,
					-4.5"/>
      <testData input="-4.47,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456.7895,2"
                expectedOutput="123456.79,
					123456.7899999999,
					123456.79,
					123456.7899999999"/>
      <testData input="123456.7895,-2"
                expectedOutput="123500,
					123500,
					123500,
					123500"/>
      <testData input="-123456.7895,2"
                expectedOutput="-123456.79,
					-123456.7899999999,
					-123456.79,
					-123456.7899999999"/>
      <testData input="-123456.7895,-2"
                expectedOutput="-123500,
					-123500,
					-123500,
					-123500"/>
      <testData input="123456.3335,2"
                expectedOutput="123456.33,
					123456.33,
					123456.33,
					123456.33"/>
      <testData input="123456.3335,-2"
                expectedOutput="123500,
					123500,
					123500,
					123500"/>
      <testData input="-123456.3335,2"
                expectedOutput="-123456.33,
					-123456.33,
					-123456.33,
					-123456.33"/>
      <testData input="-123456.3335,-2"
                expectedOutput="-123500,
					-123500,
					-123500,
					-123500"/>
      <testData input=".2345,2" expectedOutput="0.23,
					0.23,
					0.23,
					0.23"/>
      <testData input=".2345,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.2345,2" expectedOutput="-0.23,
					-0.23,
					-0.23,
					-0.23"/>
      <testData input="-.2345,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".2345,1" expectedOutput="0.2,
					0.2,
					0.2,
					0.2"/>
      <testData input=".2345,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.2345,1" expectedOutput="-0.2,
					-0.2,
					-0.2,
					-0.2"/>
      <testData input="-.2345,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1234.567,0" expectedOutput="1235,
					1235,
					1235,
					1235"/>
      <testData input=".3333,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input=".002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-.002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20000.000,2"
                expectedOutput="20000.00,
					20000,
					20000.00,
					20000"/>
      <testData input="20000.000,-2" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
   </testcase>
   <testcase testName="testRoundSwapTypes"
             fieldName="testRoundSwapTypes"
             dataType="Double"
             formula="ROUND(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="20.123444,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.123445,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12345,4"
                expectedOutput="20.1235,
					20.1235,
					20.1235,
					20.1235"/>
      <testData input="20.12,4" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789.12,
					-123456789.12,
					-123456789.12,
					-123456789.12"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-.244,2" expectedOutput="-0.24,
					-0.24,
					-0.24,
					-0.24"/>
      <testData input="-0.244,2" expectedOutput="-0.24,
					-0.24,
					-0.24,
					-0.24"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testRoundUsesExp"
             fieldName="testRoundUsesExp"
             dataType="Double"
             formula="ROUND(EXP(customnumber1__c),CEILING(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1,2" expectedOutput="2.72,
					2.72,
					2.72,
					2.72"/>
      <testData input="2,4" expectedOutput="7.3891,
					7.3891,
					7.3891,
					7.3891"/>
      <testData input="-1,-12" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-10,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-100,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="56,5"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,0"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="56,12"
                expectedOutput="2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000,
					2091659496012996000000000"/>
      <testData input="," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
   </testcase>
   <testcase testName="testRoundUsesFloorAbs"
             fieldName="testRoundUsesFloorAbs"
             dataType="Double"
             formula="ROUND(FLOOR(customnumber1__c),ABS(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123444,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123445,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789,
					-123456789,
					-123456789,
					-123456789"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testRoundUsesLog"
             fieldName="testRoundUsesLog"
             dataType="Double"
             formula="ROUND(LOG(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2,1" expectedOutput="0.3,
					0.3,
					0.3,
					0.3"/>
      <testData input="3,2" expectedOutput="0.48,
					0.48,
					0.48,
					0.48"/>
      <testData input="4.1234,2" expectedOutput="0.62,
					0.62,
					0.62,
					0.62"/>
      <testData input="5.000000008,8"
                expectedOutput="0.69897001,
					0.69897001,
					0.69897001,
					0.69897001"/>
      <testData input="-200,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="10000,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="16,16"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="2.56,19"
                expectedOutput="0.40823996531184953,
					0.408239965312,
					0.40823996531184953,
					0.408239965312"/>
      <testData input="123456789.123456789,12"
                expectedOutput="8.091514977604,
					8.091514977604,
					8.091514977604,
					8.091514977604"/>
   </testcase>
   <testcase testName="testRoundUsesLn"
             fieldName="testRoundUsesLn"
             dataType="Double"
             formula="ROUND(LN(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2,1" expectedOutput="0.7,
					0.7,
					0.7,
					0.7"/>
      <testData input="3,2" expectedOutput="1.10,
					1.1,
					1.10,
					1.1"/>
      <testData input="4.1234,2" expectedOutput="1.42,
					1.42,
					1.42,
					1.42"/>
      <testData input="5.000000008,8"
                expectedOutput="1.60943791,
					1.60943791,
					1.60943791,
					1.60943791"/>
      <testData input="-200,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="10000,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10"
                expectedOutput="2.3025850930,
					2.302585093,
					2.3025850930,
					2.302585093"/>
      <testData input="16,16"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="2.56,19"
                expectedOutput="0.9400072584914712,
					0.94000725849,
					0.9400072584914712,
					0.94000725849"/>
      <testData input="123456789.123456789,12"
                expectedOutput="18.631401767168,
					18.631401767135,
					18.631401767168,
					18.631401767135"/>
   </testcase>
   <testcase testName="testRoundUsesSqrt"
             fieldName="testRoundUsesSqrt"
             dataType="Double"
             formula="ROUND(SQRT(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345,
					2" expectedOutput="4.49,
					4.49,
					4.49,
					4.49"/>
      <testData input="20.123444,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.123445,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.12345,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.12,4" expectedOutput="4.4855,
					4.4855,
					4.4855,
					4.4855"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="11111.11,
					11111.11,
					11111.11,
					11111.11"/>
      <testData input="46,
					0" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="-0,2" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="-256,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testRoundUsesRoundMinus"
             fieldName="testRoundUsesRoundMinus"
             dataType="Double"
             formula="ROUND(ROUND(custompercent1__c,customnumber1__c),customformula1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="(customcurrency1__c-customcurrency2__c)">
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
         <referenceField fieldName="customcurrency2" dataType="Currency"/>
      </referenceField>
      <testData input="123456789,123456789,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="12345678,123456789,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="12345678,1234567,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",10.24,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10.24,,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="123.23456789,0,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,1,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,2,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,3,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,4,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,5,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,6,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,7,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,8,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,9,200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-200.434,200.434,
					200,
					300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",,," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="200,,," expectedOutput="2,
					2,
					null,
					null"/>
      <testData input=",1,,10" expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testRoundUsesIf"
             fieldName="testRoundUsesIf"
             dataType="Double"
             formula="ROUND(IF(customcheckbox1__c,customnumber1__c,customnumber2__c),customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="true,100,200,400" expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="false,123456789,123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="true,45.4356,45,900"
                expectedOutput="45.4356,
					45.4356,
					45.4356,
					45.4356"/>
      <testData input="true,0.00000984,0.9,0.4560001" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="false,-200,-0.000000008,-0.0000012"
                expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testTruncSimple"
             fieldName="testTruncSimple"
             dataType="Double"
             formula="TRUNC(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=".002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input=".002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-.002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20000.000,2"
                expectedOutput="20000.00,
					20000,
					20000.00,
					20000"/>
      <testData input="20000.000,-2" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="4.47,1" expectedOutput="4.4,
					4.4,
					4.4,
					4.4"/>
      <testData input="4.47,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-4.47,1" expectedOutput="-4.4,
					-4.4,
					-4.4,
					-4.4"/>
      <testData input="-4.47,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456.7895,2"
                expectedOutput="123456.78,
					123456.7799999999,
					123456.78,
					123456.7799999999"/>
      <testData input="123456.7895,-2"
                expectedOutput="123400,
					123399.9999999999,
					123400,
					123399.9999999999"/>
      <testData input="-123456.7895,2"
                expectedOutput="-123456.78,
					-123456.7799999999,
					-123456.78,
					-123456.7799999999"/>
      <testData input="-123456.7895,-2"
                expectedOutput="-123400,
					-123399.9999999999,
					-123400,
					-123399.9999999999"/>
      <testData input="123456.3335,2"
                expectedOutput="123456.33,
					123456.33,
					123456.33,
					123456.33"/>
      <testData input="123456.3335,-2"
                expectedOutput="123400,
					123399.9999999999,
					123400,
					123399.9999999999"/>
      <testData input="-123456.3335,2"
                expectedOutput="-123456.33,
					-123456.33,
					-123456.33,
					-123456.33"/>
      <testData input="-123456.3335,-2"
                expectedOutput="-123400,
					-123399.9999999999,
					-123400,
					-123399.9999999999"/>
      <testData input=".2345,2" expectedOutput="0.23,
					0.23,
					0.23,
					0.23"/>
      <testData input=".2345,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.2345,2" expectedOutput="-0.23,
					-0.23,
					-0.23,
					-0.23"/>
      <testData input="-.2345,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".2345,1" expectedOutput="0.2,
					0.2,
					0.2,
					0.2"/>
      <testData input=".2345,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.2345,1" expectedOutput="-0.2,
					-0.2,
					-0.2,
					-0.2"/>
      <testData input="-.2345,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1234.567,0"
                expectedOutput="1234,
					1233.999999999999,
					1234,
					1233.999999999999"/>
      <testData input=".3333,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input=".002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.002,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-.002,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20000.000,2"
                expectedOutput="20000.00,
					20000,
					20000.00,
					20000"/>
      <testData input="20000.000,-2" expectedOutput="20000,
					20000,
					20000,
					20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
      <testData input="-20000.000,2"
                expectedOutput="-20000.00,
					-20000,
					-20000.00,
					-20000"/>
   </testcase>
   <testcase testName="testTruncSwapTypes"
             fieldName="testTruncSwapTypes"
             dataType="Double"
             formula="TRUNC(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="20.123444,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.123445,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12345,4"
                expectedOutput="20.1234,
					20.1234,
					20.1234,
					20.1234"/>
      <testData input="20.12,4" expectedOutput="20.12,
					20.12,
					20.12,
					20.12"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789.12,
					-123456789.12,
					-123456789.12,
					-123456789.12"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789.12,
					123456789.12,
					123456789.12,
					123456789.12"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-.244,2" expectedOutput="-0.24,
					-0.24,
					-0.24,
					-0.24"/>
      <testData input="-0.244,2" expectedOutput="-0.24,
					-0.24,
					-0.24,
					-0.24"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testTruncUsesExp"
             fieldName="testTruncUsesExp"
             dataType="Double"
             formula="TRUNC(EXP(customnumber1__c),CEILING(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1,2" expectedOutput="2.71,
					2.71,
					2.71,
					2.71"/>
      <testData input="2,4" expectedOutput="7.3890,
					7.389,
					7.3890,
					7.389"/>
      <testData input="-1,-12" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-10,2" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="-100,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="56,5"
                expectedOutput="2091659496012996000000000,
					-92233720368547.77,
					2091659496012996000000000,
					-92233720368547.77"/>
      <testData input="56,0"
                expectedOutput="2091659496012996000000000,
					-9223372036854776000,
					2091659496012996000000000,
					-9223372036854776000"/>
      <testData input="56,12"
                expectedOutput="2091659496012996000000000,
					-9223372.036854776,
					2091659496012996000000000,
					-9223372.036854776"/>
      <testData input="," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
   </testcase>
   <testcase testName="testTruncUsesFloorAbs"
             fieldName="testTruncUsesFloorAbs"
             dataType="Double"
             formula="TRUNC(FLOOR(customnumber1__c),ABS(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123444,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123445,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789,
					-123456789,
					-123456789,
					-123456789"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testTruncUsesLog"
             fieldName="testTruncUsesLog"
             dataType="Double"
             formula="TRUNC(LOG(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2,1" expectedOutput="0.3,
					0.3,
					0.3,
					0.3"/>
      <testData input="3,2" expectedOutput="0.47,
					0.47,
					0.47,
					0.47"/>
      <testData input="4.1234,2" expectedOutput="0.61,
					0.61,
					0.61,
					0.61"/>
      <testData input="5.000000008,8"
                expectedOutput="0.69897000,
					0.69897,
					0.69897000,
					0.69897"/>
      <testData input="-200,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="10000,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="16,16"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="2.56,19"
                expectedOutput="0.40823996531184953,
					0.408239965312,
					0.40823996531184953,
					0.408239965312"/>
      <testData input="123456789.123456789,12"
                expectedOutput="8.091514977603,
					8.091514977603,
					8.091514977603,
					8.091514977603"/>
   </testcase>
   <testcase testName="testTruncUsesLn"
             fieldName="testTruncUsesLn"
             dataType="Double"
             formula="TRUNC(LN(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2,1" expectedOutput="0.6,
					0.6,
					0.6,
					0.6"/>
      <testData input="3,2" expectedOutput="1.09,
					1.09,
					1.09,
					1.09"/>
      <testData input="4.1234,2" expectedOutput="1.41,
					1.41,
					1.41,
					1.41"/>
      <testData input="5.000000008,8"
                expectedOutput="1.60943791,
					1.60943791,
					1.60943791,
					1.60943791"/>
      <testData input="-200,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="10000,-2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10"
                expectedOutput="2.3025850929,
					2.3025850929,
					2.3025850929,
					2.3025850929"/>
      <testData input="16,16"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="2.56,19"
                expectedOutput="0.9400072584914712,
					-0.922337203685,
					0.9400072584914712,
					-0.922337203685"/>
      <testData input="123456789.123456789,12"
                expectedOutput="18.631401767168,
					18.631401767135,
					18.631401767168,
					18.631401767135"/>
   </testcase>
   <testcase testName="testTruncUsesSqrt"
             fieldName="testTruncUsesSqrt"
             dataType="Double"
             formula="TRUNC(SQRT(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345,
					2" expectedOutput="4.48,
					4.48,
					4.48,
					4.48"/>
      <testData input="20.123444,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.123445,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.12345,4" expectedOutput="4.4859,
					4.4859,
					4.4859,
					4.4859"/>
      <testData input="20.12,4" expectedOutput="4.4855,
					4.4855,
					4.4855,
					4.4855"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="11111.11,
					11111.11,
					11111.11,
					11111.11"/>
      <testData input="46,
					0" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="-0,2" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="-256,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testSqrtSwap"
             fieldName="testSqrtSwap"
             dataType="Double"
             formula="SQRT(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="1.4142135623730951,
					1.414213562373,
					1.4142135623730951,
					1.414213562373"/>
      <testData input="3"
                expectedOutput="1.7320508075688772,
					1.732050807569,
					1.7320508075688772,
					1.732050807569"/>
      <testData input="4" expectedOutput="2.0,
					2,
					2.0,
					2"/>
      <testData input="7"
                expectedOutput="2.6457513110645907,
					2.645751311065,
					2.6457513110645907,
					2.645751311065"/>
      <testData input="12"
                expectedOutput="3.4641016151377544,
					3.464101615138,
					3.4641016151377544,
					3.464101615138"/>
      <testData input="16" expectedOutput="4.0,
					4,
					4.0,
					4"/>
      <testData input="256" expectedOutput="16.0,
					16,
					16.0,
					16"/>
      <testData input="65536.00" expectedOutput="256.0,
					256,
					256.0,
					256"/>
      <testData input="65536.16"
                expectedOutput="256.0003124998093,
					256.000312499809,
					256.0003124998093,
					256.000312499809"/>
      <testData input="65536.64"
                expectedOutput="256.0012499969483,
					256.001249996948,
					256.0012499969483,
					256.001249996948"/>
      <testData input="65536.4816"
                expectedOutput="256.0009406232719,
					256.000940623272,
					256.0009406232719,
					256.000940623272"/>
   </testcase>
   <testcase testName="testSqrtUsesExp"
             fieldName="testSqrtUsesExp"
             dataType="Double"
             formula="SQRT(EXP(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="1.6487212707001282,
					1.6487212707,
					1.6487212707001282,
					1.6487212707"/>
      <testData input="2"
                expectedOutput="2.718281828459045,
					2.718281828459,
					2.718281828459045,
					2.718281828459"/>
      <testData input="-1"
                expectedOutput="0.6065306597126334,
					0.606530659713,
					0.6065306597126334,
					0.606530659713"/>
      <testData input="-10"
                expectedOutput="0.006737946999085467,
					0.006737946999,
					0.006737946999085467,
					0.006737946999"/>
      <testData input="-100"
                expectedOutput="0.00000000000000000000019287498480,
					0,
					0.00000000000000000000019287498480,
					0"/>
      <testData input="56"
                expectedOutput="1446257064291.475,
					1446257064291.475,
					1446257064291.475,
					1446257064291.475"/>
      <testData input="110"
                expectedOutput="769478526514201800000000,
					769478526514201800000000,
					769478526514201800000000,
					769478526514201800000000"/>
      <testData input="20"
                expectedOutput="22026.465794806718,
					22026.46579480671,
					22026.465794806718,
					22026.46579480671"/>
   </testcase>
   <testcase testName="testSqrtUsesFloor"
             fieldName="testSqrtUsesFloor"
             dataType="Double"
             formula="SQRT(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="4.47213595499958,
					4.472135955,
					4.47213595499958,
					4.472135955"/>
      <testData input="123456789.54321"
                expectedOutput="11111.111060555555,
					11111.11106055555,
					11111.111060555555,
					11111.11106055555"/>
      <testData input="123456789.123456789"
                expectedOutput="11111.111060555555,
					11111.11106055555,
					11111.111060555555,
					11111.11106055555"/>
      <testData input="49.55" expectedOutput="7.0,
					7,
					7.0,
					7"/>
      <testData input="0.00034" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.244" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="25.7456" expectedOutput="5.0,
					5,
					5.0,
					5"/>
      <testData input="64.456" expectedOutput="8.0,
					8,
					8.0,
					8"/>
      <testData input="-.4" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-.7" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testSqrtUsesLog"
             fieldName="testSqrtUsesLog"
             dataType="Double"
             formula="ROUND(SQRT(LOG(customnumber1__c)),15)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.548662004939271,
					0.548662004939,
					0.548662004939271,
					0.548662004939"/>
      <testData input="3"
                expectedOutput="0.690739643222873,
					0.690739643223,
					0.690739643222873,
					0.690739643223"/>
      <testData input="4"
                expectedOutput="0.775925248543932,
					0.775925248544,
					0.775925248543932,
					0.775925248544"/>
      <testData input="5"
                expectedOutput="0.836044259794910,
					0.836044259795,
					0.836044259794910,
					0.836044259795"/>
      <testData input="6"
                expectedOutput="0.882128817341120,
					0.882128817341,
					0.882128817341120,
					0.882128817341"/>
      <testData input="10000" expectedOutput="2.0,
					2,
					2.0,
					2"/>
      <testData input="10" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="16"
                expectedOutput="1.097324009878543,
					1.097324009879,
					1.097324009878543,
					1.097324009879"/>
      <testData input="2.56"
                expectedOutput="0.638936589429538,
					0.63893658943,
					0.638936589429538,
					0.63893658943"/>
      <testData input="123456789.123456789"
                expectedOutput="2.844558837078882,
					2.844558837079,
					2.844558837078882,
					2.844558837079"/>
   </testcase>
   <testcase testName="testSqrtUsesCeil"
             fieldName="testSqrtUsesCeil"
             dataType="Double"
             formula="SQRT(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="4.58257569495584,
					4.582575694956,
					4.58257569495584,
					4.582575694956"/>
      <testData input="123456789.54321"
                expectedOutput="11111.111105555556,
					11111.11110555555,
					11111.111105555556,
					11111.11110555555"/>
      <testData input="123456789.123456789"
                expectedOutput="11111.111105555556,
					11111.11110555555,
					11111.111105555556,
					11111.11110555555"/>
      <testData input="49.55"
                expectedOutput="7.0710678118654755,
					7.071067811865,
					7.0710678118654755,
					7.071067811865"/>
      <testData input="0.00034" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0.244" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="25.7456"
                expectedOutput="5.0990195135927845,
					5.099019513593,
					5.0990195135927845,
					5.099019513593"/>
      <testData input="64.456"
                expectedOutput="8.06225774829855,
					8.062257748299,
					8.06225774829855,
					8.062257748299"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testSqrtUsesSqrt"
             fieldName="testSqrtUsesSqrt"
             dataType="Double"
             formula="SQRT(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="1.189207115002721,
					1.189207115003,
					1.189207115002721,
					1.189207115003"/>
      <testData input="3"
                expectedOutput="1.3160740129524924,
					1.316074012952,
					1.3160740129524924,
					1.316074012952"/>
      <testData input="4"
                expectedOutput="1.4142135623730951,
					1.414213562373,
					1.4142135623730951,
					1.414213562373"/>
      <testData input="7"
                expectedOutput="1.6265765616977859,
					1.626576561698,
					1.6265765616977859,
					1.626576561698"/>
      <testData input="12"
                expectedOutput="1.8612097182041991,
					1.861209718204,
					1.8612097182041991,
					1.861209718204"/>
      <testData input="16" expectedOutput="2.0,
					2,
					2.0,
					2"/>
      <testData input="256" expectedOutput="4.0,
					4,
					4.0,
					4"/>
      <testData input="65536.00" expectedOutput="16.0,
					16,
					16.0,
					16"/>
      <testData input="65536.16"
                expectedOutput="16.00000976561606,
					16.000009765616,
					16.00000976561606,
					16.000009765616"/>
      <testData input="65536.64"
                expectedOutput="16.00003906235695,
					16.000039062357,
					16.00003906235695,
					16.000039062357"/>
      <testData input="65536.4816"
                expectedOutput="16.000029394450245,
					16.00002939445,
					16.000029394450245,
					16.00002939445"/>
   </testcase>
   <testcase testName="testSqrtUsesMinus"
             fieldName="testSqrtUsesMinus"
             dataType="Double"
             formula="SQRT((customcurrency1__c-customcurrency2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <testData input=",24"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-1.0,99.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="99,
					-1" expectedOutput="10.0,
					10,
					10.0,
					10"/>
      <testData input="-20,-40"
                expectedOutput="4.47213595499958,
					4.472135955,
					4.47213595499958,
					4.472135955"/>
      <testData input="1.1111,1.1111" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.0541062565035841,
					1.054106256504,
					1.0541062565035841,
					1.054106256504"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.054110999847739,
					1.054110999848,
					1.054110999847739,
					1.054110999848"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.0540725781463058,
					1.054072578146,
					1.0540725781463058,
					1.054072578146"/>
      <testData input="123456789,123456789" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="15713.483962728113,
					15713.48396272811,
					15713.483962728113,
					15713.48396272811"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="600, 0.000600"
                expectedOutput="24.494885180380006,
					24.49488518038,
					24.494885180380006,
					24.49488518038"/>
      <testData input="600, -600"
                expectedOutput="34.64101615137755,
					34.641016151378,
					34.64101615137755,
					34.641016151378"/>
      <testData input="1.2345,
					1.2345" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1.245, 0"
                expectedOutput="1.11579568022107,
					1.115795680221,
					1.11579568022107,
					1.115795680221"/>
      <testData input="," expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="31.622776601683796,
					31.622776601684,
					31.622776601683796,
					31.622776601684"/>
   </testcase>
   <testcase testName="testSqrtUsesPlus"
             fieldName="testSqrtUsesPlus"
             dataType="Double"
             formula="SQRT(customformula0__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="(customnumber1__c+customnumber2__c)">
         <referenceField fieldName="customnumber1" dataType="Double"/>
         <referenceField fieldName="customnumber2" dataType="Double"/>
      </referenceField>
      <testData input=",24"
                expectedOutput="4.898979485566356,
					4.898979485566,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-1.0,99.0"
                expectedOutput="9.899494936611665,
					9.899494936612,
					9.899494936611665,
					9.899494936612"/>
      <testData input="99, -1"
                expectedOutput="9.899494936611665,
					9.899494936612,
					9.899494936611665,
					9.899494936612"/>
      <testData input="-20,-40"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.4907045314213008,
					1.490704531421,
					1.4907045314213008,
					1.490704531421"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.0541062565035841,
					1.054106256504,
					1.0541062565035841,
					1.054106256504"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.054110999847739,
					1.054110999848,
					1.054110999847739,
					1.054110999848"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.0541133715118123,
					1.054113371512,
					1.0541133715118123,
					1.054113371512"/>
      <testData input="123456789,123456789"
                expectedOutput="15713.48395487137,
					15713.48395487136,
					15713.48395487137,
					15713.48395487136"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="15713.483962728113,
					15713.48396272811,
					15713.483962728113,
					15713.48396272811"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="600, 0.000600"
                expectedOutput="24.494909675277434,
					24.494909675277,
					24.494909675277434,
					24.494909675277"/>
      <testData input="600,
					-600" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.5713051899615174,
					1.571305189962,
					1.5713051899615174,
					1.571305189962"/>
      <testData input="1.245, 0"
                expectedOutput="1.11579568022107,
					1.115795680221,
					1.11579568022107,
					1.115795680221"/>
      <testData input="," expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="3.4818754700592036,
					3.481875470059,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="15.524366653747906,
					15.524366653748,
					15.524366653747906,
					15.524366653748"/>
      <testData input="0,240"
                expectedOutput="15.491933384829668,
					15.49193338483,
					15.491933384829668,
					15.49193338483"/>
      <testData input=".0000000000001,1000"
                expectedOutput="31.622776601683796,
					31.622776601684,
					31.622776601683796,
					31.622776601684"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testSqrtUsesCase"
             fieldName="testSqrtUsesCase"
             dataType="Double"
             formula="SQRT(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="14.142135623730951,
					14.142135623731,
					14.142135623730951,
					14.142135623731"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="17.320508075688775,
					17.320508075689,
					17.320508075688775,
					17.320508075689"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="20.0,
					20,
					20.0,
					20"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="20.0,
					20,
					20.0,
					20"/>
      <testData input=",,200,2004:12:04,300,400" expectedOutput="20.0,
					20,
					20.0,
					20"/>
      <testData input="2004:12:04,2004:12:04,1600,,300,400"
                expectedOutput="40.0,
					40,
					40.0,
					40"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="17.320508075688775,
					17.320508075689,
					17.320508075688775,
					17.320508075689"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="0.0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testFloorSimple"
             fieldName="testFloorSimple"
             dataType="Double"
             formula="FLOOR(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="123456789.54321"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="49.55" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="25.7456" expectedOutput="25,
					25,
					25,
					25"/>
      <testData input="64.456" expectedOutput="64,
					64,
					64,
					64"/>
      <testData input="-.4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.7" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testMFloorSimple"
             fieldName="testMFloorSimple"
             dataType="Double"
             formula="MFLOOR(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="123456789.54321"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="49.55" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="25.7456" expectedOutput="25,
					25,
					25,
					25"/>
      <testData input="64.456" expectedOutput="64,
					64,
					64,
					64"/>
      <testData input="-.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.4" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="-1.7" expectedOutput="-2,
					-2,
					-2,
					-2"/>
   </testcase>
   <testcase testName="testFloorRound"
             fieldName="testFloorRound"
             dataType="Double"
             formula="FLOOR((customnumber1__c/customnumber2__c)*customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,9" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,9" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,9" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,9" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,9" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,9" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,9" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,9" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1,11" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,11" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,11" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,11" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,11" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,11" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,11" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,11" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="9,11" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="10,11" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="10,9" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="11,9" expectedOutput="11,
					11,
					11,
					11"/>
      <testData input="12,9" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="13,9" expectedOutput="13,
					13,
					13,
					13"/>
      <testData input="14,9" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="15,9" expectedOutput="15,
					15,
					15,
					15"/>
      <testData input="16,9" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="17,9" expectedOutput="17,
					17,
					17,
					17"/>
      <testData input="18,9" expectedOutput="18,
					18,
					18,
					18"/>
      <testData input="19,9" expectedOutput="19,
					19,
					19,
					19"/>
   </testcase>
   <testcase testName="testMFloorRound"
             fieldName="testMFloorRound"
             dataType="Double"
             formula="MFLOOR((customnumber1__c/customnumber2__c)*customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,9" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,9" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,9" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,9" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,9" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,9" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,9" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,9" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1,11" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,11" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,11" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,11" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,11" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,11" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,11" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,11" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="9,11" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="10,11" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="10,9" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="11,9" expectedOutput="11,
					11,
					11,
					11"/>
      <testData input="12,9" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="13,9" expectedOutput="13,
					13,
					13,
					13"/>
      <testData input="14,9" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="15,9" expectedOutput="15,
					15,
					15,
					15"/>
      <testData input="16,9" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="17,9" expectedOutput="17,
					17,
					17,
					17"/>
      <testData input="18,9" expectedOutput="18,
					18,
					18,
					18"/>
      <testData input="19,9" expectedOutput="19,
					19,
					19,
					19"/>
   </testcase>
   <testcase testName="testFloorUsesAbs"
             fieldName="testFloorUsesAbs"
             dataType="Double"
             formula="FLOOR(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.24456" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testFloorUsesCeil"
             fieldName="testFloorUsesCeil"
             dataType="Double"
             formula="FLOOR(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="123456789.54321"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="49.55" expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="25.7456" expectedOutput="26,
					26,
					26,
					26"/>
      <testData input="64.456" expectedOutput="65,
					65,
					65,
					65"/>
      <testData input="-.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.4" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="-1.7" expectedOutput="-2,
					-2,
					-2,
					-2"/>
   </testcase>
   <testcase testName="testFloorUsesFloor"
             fieldName="testFloorUsesFloor"
             dataType="Double"
             formula="FLOOR(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="123456789.54321"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="49.55" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="25.7456" expectedOutput="25,
					25,
					25,
					25"/>
      <testData input="64.456" expectedOutput="64,
					64,
					64,
					64"/>
      <testData input="-.4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.7" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testFloorUsesLog"
             fieldName="testFloorUsesLog"
             dataType="Double"
             formula="FLOOR(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="5" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="6" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10000" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="10" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="16" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2.56" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789.123456789" expectedOutput="8,
					8,
					8,
					8"/>
   </testcase>
   <testcase testName="testFloorUsesLn"
             fieldName="testFloorUsesLn"
             dataType="Double"
             formula="FLOOR(LN(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="3" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="4" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="5" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="6" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="10000" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="10" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="16" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2.56" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789.123456789" expectedOutput="18,
					18,
					18,
					18"/>
   </testcase>
   <testcase testName="testFloorUsesSqrt"
             fieldName="testFloorUsesSqrt"
             dataType="Double"
             formula="FLOOR(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="3" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="4" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="7" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="12" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="16" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="256" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="65536.00" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="65536.16" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="65536.64" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="65536.4816" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testFloorUsesRound"
             fieldName="testFloorUsesRound"
             dataType="Double"
             formula="FLOOR(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123444,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.123445,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12,4" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789,
					-123456789,
					-123456789,
					-123456789"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testFloorUsesMOD"
             fieldName="testFloorUsesMOD"
             dataType="Double"
             formula="FLOOR(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345,
					2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.123444,13" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="20.123445,7" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="20.12345,23" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,2654" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789,
					2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="123456789.123456789,2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="46,-456" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,23223244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456,123456789" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.24456,0.000045" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testFloorUsesIf"
             fieldName="testFloorUsesIf"
             dataType="Double"
             formula="FLOOR(IF(true,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="99,
					-1" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="-20,-40" expectedOutput="-20,
					-20,
					-20,
					-20"/>
      <testData input="1.1111,1.1111" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.11114,0.00000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.11115,0.00000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.111112,0.000043" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-123456789,
					-123456789,
					-123456789,
					-123456789"/>
      <testData input="600,
					0.000600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="600,
					-600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="1.2345,
					1.2345" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.245,
					0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,-1000" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testFloorUsesCase"
             fieldName="testFloorUsesCase"
             dataType="Double"
             formula="FLOOR(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",,200,2004:12:04,300,400" expectedOutput="400,
					400,
					400,
					400"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,,,," expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testFloorUsesLen"
             fieldName="testFloorUsesLen"
             dataType="Double"
             formula="FLOOR(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true" expectedOutput="27,
					27,
					27,
					27"/>
      <testData input="making a way" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="blunder" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="makesense" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="does not make sense" expectedOutput="19,
					19,
					19,
					19"/>
      <testData input="working my way" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="e" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="172,
					172,
					172,
					172"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="52,
					52,
					52,
					52"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="57,
					57,
					57,
					57"/>
   </testcase>
   <testcase testName="testFloorUsesValue"
             fieldName="testFloorUsesValue"
             dataType="Double"
             formula="FLOOR(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="-1" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-10" expectedOutput="-10,
					-10,
					-10,
					-10"/>
      <testData input="-100" expectedOutput="-100,
					-100,
					-100,
					-100"/>
      <testData input="56" expectedOutput="56,
					56,
					56,
					56"/>
      <testData input="110" expectedOutput="110,
					110,
					110,
					110"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
   </testcase>
   <testcase testName="testFloorUsesMultiply"
             fieldName="testFloorUsesMultiply"
             dataType="Double"
             formula="FLOOR(customformula0__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customformula0"
                      dataType="Double"
                      formula="(custompercent1__c*customcurrency1__c)">
         <referenceField fieldName="custompercent1" dataType="Percent"/>
         <referenceField fieldName="customcurrency1" dataType="Currency"/>
      </referenceField>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="99,
					-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-20,-40" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1.1111,1.1111" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.11114,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.11115,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.111112,0.000043" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789,123456789"
                expectedOutput="152415787501905,
					152415787501904.9,
					152415787501905,
					152415787501904.9"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="152415787806736,
					152415787806735.9,
					152415787806736,
					152415787806735.9"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="-152415787806736,
					-152415787806735.9,
					-152415787806736,
					-152415787806735.9"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="152415787806736,
					152415787806735.9,
					152415787806736,
					152415787806735.9"/>
      <testData input="600,
					0.000600" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="600, -600"
                expectedOutput="-3600,
					-3599.999999999999,
					-3600,
					-3599.999999999999"/>
      <testData input="1.2345,
					1.2345" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.245,
					0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,-1000" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testFloorUsesMinus"
             fieldName="testFloorUsesMinus"
             dataType="Double"
             formula="FLOOR((custompercent1__c-customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",24" expectedOutput="-24,
					-24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-99,
					-99,
					-99,
					-99"/>
      <testData input="99,
					-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-20,-40" expectedOutput="39,
					39,
					39,
					39"/>
      <testData input="1.1111,1.1111" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="1.11114,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.11115,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.111112,0.000043" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="123456789,123456789"
                expectedOutput="-122222221,
					-122222220.9999999,
					-122222221,
					-122222220.9999999"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="-122222221,
					-122222220.9999999,
					-122222221,
					-122222220.9999999"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="124691357,
					124691356.9999999,
					124691357,
					124691356.9999999"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="122222221,
					122222220.9999999,
					122222221,
					122222220.9999999"/>
      <testData input="600,
					0.000600" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="600,
					-600" expectedOutput="606,
					606,
					606,
					606"/>
      <testData input="1.2345,
					1.2345" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="1.245,
					0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",12.123456789" expectedOutput="-12,
					-12,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="-239,
					-239,
					-239,
					-239"/>
      <testData input="0,240" expectedOutput="-240,
					-240,
					-240,
					-240"/>
      <testData input=".0000000000001,1000"
                expectedOutput="-999,
					-1000,
					-999,
					-1000"/>
      <testData input=".0000000000001,-1000" expectedOutput="1000,
					1000,
					1000,
					1000"/>
   </testcase>
   <testcase testName="testCeilSimple"
             fieldName="testCeilSimple"
             dataType="Double"
             formula="CEILING(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="123456789.54321"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="49.55" expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="25.7456" expectedOutput="26,
					26,
					26,
					26"/>
      <testData input="64.456" expectedOutput="65,
					65,
					65,
					65"/>
      <testData input="-.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.4" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="-1.7" expectedOutput="-2,
					-2,
					-2,
					-2"/>
   </testcase>
   <testcase testName="testMCeilSimple"
             fieldName="testMCeilSimple"
             dataType="Double"
             formula="MCEILING(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="123456789.54321"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="49.55" expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="25.7456" expectedOutput="26,
					26,
					26,
					26"/>
      <testData input="64.456" expectedOutput="65,
					65,
					65,
					65"/>
      <testData input="-.4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.7" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testCeilRound"
             fieldName="testCeilRound"
             dataType="Double"
             formula="CEILING((customnumber1__c/customnumber2__c)*customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,9" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,9" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,9" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,9" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,9" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,9" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,9" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,9" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1,11" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,11" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,11" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,11" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,11" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,11" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,11" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,11" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="9,11" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="10,11" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="10,9" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="11,9" expectedOutput="11,
					11,
					11,
					11"/>
      <testData input="12,9" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="13,9" expectedOutput="13,
					13,
					13,
					13"/>
      <testData input="14,9" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="15,9" expectedOutput="15,
					15,
					15,
					15"/>
      <testData input="16,9" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="17,9" expectedOutput="17,
					17,
					17,
					17"/>
      <testData input="18,9" expectedOutput="18,
					18,
					18,
					18"/>
      <testData input="19,9" expectedOutput="19,
					19,
					19,
					19"/>
   </testcase>
   <testcase testName="testMCeilRound"
             fieldName="testMCeilRound"
             dataType="Double"
             formula="MCEILING((customnumber1__c/customnumber2__c)*customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="1,9" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,9" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,9" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,9" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,9" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,9" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,9" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,9" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1,11" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2,11" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3,11" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="4,11" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="5,11" expectedOutput="5,
					5,
					5,
					5"/>
      <testData input="6,11" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="7,11" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="8,11" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="9,11" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="10,11" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="10,9" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="11,9" expectedOutput="11,
					11,
					11,
					11"/>
      <testData input="12,9" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="13,9" expectedOutput="13,
					13,
					13,
					13"/>
      <testData input="14,9" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="15,9" expectedOutput="15,
					15,
					15,
					15"/>
      <testData input="16,9" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="17,9" expectedOutput="17,
					17,
					17,
					17"/>
      <testData input="18,9" expectedOutput="18,
					18,
					18,
					18"/>
      <testData input="19,9" expectedOutput="19,
					19,
					19,
					19"/>
   </testcase>
   <testcase testName="testCeilUsesAbs"
             fieldName="testCeilUsesAbs"
             dataType="Double"
             formula="CEILING(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="-1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="46" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-0.245" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".24456" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.24456" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="16" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="256" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="-256" expectedOutput="256,
					256,
					256,
					256"/>
   </testcase>
   <testcase testName="testCeilUsesCeil"
             fieldName="testCeilUsesCeil"
             dataType="Double"
             formula="CEILING(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="123456789.54321"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="49.55" expectedOutput="50,
					50,
					50,
					50"/>
      <testData input="0.00034" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.244" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="25.7456" expectedOutput="26,
					26,
					26,
					26"/>
      <testData input="64.456" expectedOutput="65,
					65,
					65,
					65"/>
      <testData input="-.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.4" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="-1.7" expectedOutput="-2,
					-2,
					-2,
					-2"/>
   </testcase>
   <testcase testName="testCeilUsesFloor"
             fieldName="testCeilUsesFloor"
             dataType="Double"
             formula="CEILING(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="123456789.54321"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="49.55" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="25.7456" expectedOutput="25,
					25,
					25,
					25"/>
      <testData input="64.456" expectedOutput="64,
					64,
					64,
					64"/>
      <testData input="-.4" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.7" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testMCeilUsesMFloor"
             fieldName="testMCeilUsesMFloor"
             dataType="Double"
             formula="MCEILING(MFLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="123456789.54321"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="49.55" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="0.00034" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="25.7456" expectedOutput="25,
					25,
					25,
					25"/>
      <testData input="64.456" expectedOutput="64,
					64,
					64,
					64"/>
      <testData input="-.4" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.7" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1.4" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="-1.7" expectedOutput="-2,
					-2,
					-2,
					-2"/>
   </testcase>
   <testcase testName="testCeilUsesLog"
             fieldName="testCeilUsesLog"
             dataType="Double"
             formula="CEILING(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="3" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="4" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="5" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="6" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="10000" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="10" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="16" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="2.56" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456789.123456789" expectedOutput="9,
					9,
					9,
					9"/>
   </testcase>
   <testcase testName="testCeilUsesLn"
             fieldName="testCeilUsesLn"
             dataType="Double"
             formula="CEILING(LN(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="3" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="4" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="5" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="6" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="10000" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input="10" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="16" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="2.56" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456789.123456789" expectedOutput="19,
					19,
					19,
					19"/>
   </testcase>
   <testcase testName="testCeilUsesSqrt"
             fieldName="testCeilUsesSqrt"
             dataType="Double"
             formula="CEILING(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="3" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="4" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="7" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="12" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="16" expectedOutput="4,
					4,
					4,
					4"/>
      <testData input="256" expectedOutput="16,
					16,
					16,
					16"/>
      <testData input="65536.00" expectedOutput="256,
					256,
					256,
					256"/>
      <testData input="65536.16" expectedOutput="257,
					257,
					257,
					257"/>
      <testData input="65536.64" expectedOutput="257,
					257,
					257,
					257"/>
      <testData input="65536.4816" expectedOutput="257,
					257,
					257,
					257"/>
   </testcase>
   <testcase testName="testCeilUsesRound"
             fieldName="testCeilUsesRound"
             dataType="Double"
             formula="CEILING(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.123444,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.123445,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.12345,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.12,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456790,
					-123456789.9999999,
					-123456790,
					-123456789.9999999"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-0.244,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testMCeilUsesRound"
             fieldName="testMCeilUsesRound"
             dataType="Double"
             formula="MCEILING(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12345,
					2" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.123444,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.123445,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.12345,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.12,4" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-123456789,
					-123456789,
					-123456789,
					-123456789"/>
      <testData input="123456789.123456789,2"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="46,
					0" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.24456," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256," expectedOutput="-256,
					-256,
					null,
					null"/>
   </testcase>
   <testcase testName="testCeilUsesMOD"
             fieldName="testCeilUsesMOD"
             dataType="Double"
             formula="CEILING(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345,
					2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="20.123444,13" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="20.123445,7" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="20.12345,23" expectedOutput="21,
					21,
					21,
					21"/>
      <testData input="20.12,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,2654" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789,
					2" expectedOutput="-2,
					-2,
					-2,
					-2"/>
      <testData input="123456789.123456789,2" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="46,-456" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-.244,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-0.244,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-0.245,23223244" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input=".24456,123456789" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.24456,0.000045" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testCeilUsesIf"
             fieldName="testCeilUsesIf"
             dataType="Double"
             formula="CEILING(IF(true,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="99,
					-1" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="-20,-40" expectedOutput="-20,
					-20,
					-20,
					-20"/>
      <testData input="1.1111,1.1111" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.11114,0.00000" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.11115,0.00000" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.111112,0.000043" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="123456790,
					123456789.9999999,
					123456790,
					123456789.9999999"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-123456790,
					-123456789.9999999,
					-123456790,
					-123456789.9999999"/>
      <testData input="600,
					0.000600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="600,
					-600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="1.2345,
					1.2345" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.245,
					0" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".0000000000001,-1000" expectedOutput="1,
					1,
					1,
					1"/>
   </testcase>
   <testcase testName="testCeilUsesCase"
             fieldName="testCeilUsesCase"
             dataType="Double"
             formula="CEILING(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="400,
					400,
					400,
					400"/>
      <testData input=",,200,2004:12:04,300,400" expectedOutput="400,
					400,
					400,
					400"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400"
                expectedOutput="200,
					200,
					200,
					200"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="300,
					300,
					300,
					300"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,,,," expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testCeilUsesLen"
             fieldName="testCeilUsesLen"
             dataType="Double"
             formula="CEILING(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true" expectedOutput="27,
					27,
					27,
					27"/>
      <testData input="making a way" expectedOutput="12,
					12,
					12,
					12"/>
      <testData input="" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="blunder" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="makesense" expectedOutput="9,
					9,
					9,
					9"/>
      <testData input="does not make sense" expectedOutput="19,
					19,
					19,
					19"/>
      <testData input="working my way" expectedOutput="14,
					14,
					14,
					14"/>
      <testData input="e" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="172,
					172,
					172,
					172"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="52,
					52,
					52,
					52"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="57,
					57,
					57,
					57"/>
   </testcase>
   <testcase testName="testCeilUsesValue"
             fieldName="testCeilUsesValue"
             dataType="Double"
             formula="CEILING(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="2" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="-1" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-10" expectedOutput="-10,
					-10,
					-10,
					-10"/>
      <testData input="-100" expectedOutput="-100,
					-100,
					-100,
					-100"/>
      <testData input="56" expectedOutput="56,
					56,
					56,
					56"/>
      <testData input="110" expectedOutput="110,
					110,
					110,
					110"/>
      <testData input="20" expectedOutput="20,
					20,
					20,
					20"/>
   </testcase>
   <testcase testName="testCeilUsesMultiply"
             fieldName="testCeilUsesMultiply"
             dataType="Double"
             formula="CEILING((custompercent1__c*customcurrency1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="99,
					-1" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-20,-40" expectedOutput="8,
					8,
					8,
					8"/>
      <testData input="1.1111,1.1111" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.11114,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.11115,0.00000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="1.111112,0.000043" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456789,123456789"
                expectedOutput="152415787501906,
					152415787501905.9,
					152415787501906,
					152415787501905.9"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="152415787806737,
					152415787806737,
					152415787806737,
					152415787806737"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="-152415787806737,
					-152415787806737,
					-152415787806737,
					-152415787806737"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="152415787806737,
					152415787806737,
					152415787806737,
					152415787806737"/>
      <testData input="600,
					0.000600" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="600, -600"
                expectedOutput="-3600,
					-3599.999999999999,
					-3600,
					-3599.999999999999"/>
      <testData input="1.2345,
					1.2345" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.245,
					0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="3,
					3,
					3,
					3"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input=".0000000000001,-1000" expectedOutput="-1,
					-1,
					-1,
					-1"/>
   </testcase>
   <testcase testName="testCeilUsesPlus"
             fieldName="testCeilUsesPlus"
             dataType="Double"
             formula="CEILING((custompercent1__c+customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",24" expectedOutput="24,
					24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="99,
					-1" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-20,-40" expectedOutput="-41,
					-41,
					-41,
					-41"/>
      <testData input="1.1111,1.1111" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.11114,0.00000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.11115,0.00000" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.111112,0.000043" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123456789,123456789"
                expectedOutput="124691357,
					124691356.9999999,
					124691357,
					124691356.9999999"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="124691358,
					124691358,
					124691358,
					124691358"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="-122222222,
					-122222222,
					-122222222,
					-122222222"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-124691358,
					-124691358,
					-124691358,
					-124691358"/>
      <testData input="600,
					0.000600" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="600,
					-600" expectedOutput="-594,
					-594,
					-594,
					-594"/>
      <testData input="1.2345,
					1.2345" expectedOutput="2,
					2,
					2,
					2"/>
      <testData input="1.245,
					0" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",12.123456789" expectedOutput="13,
					13,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="241,
					241,
					241,
					241"/>
      <testData input="0,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input=".0000000000001,1000" expectedOutput="1001,
					1000,
					1001,
					1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="-1000,
					-1000,
					-1000,
					-1000"/>
   </testcase>
   <testcase testName="testModSwapTypes"
             fieldName="testModSwapTypes"
             dataType="Double"
             formula="MOD(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345, 2"
                expectedOutput="0.12345,
					0.12345,
					0.12345,
					0.12345"/>
      <testData input="20.123444,13"
                expectedOutput="7.123444,
					7.123444,
					7.123444,
					7.123444"/>
      <testData input="20.123445,7"
                expectedOutput="6.123445,
					6.123445,
					6.123445,
					6.123445"/>
      <testData input="20.12345,23"
                expectedOutput="20.12345,
					20.12345,
					20.12345,
					20.12345"/>
      <testData input="20.12,1" expectedOutput="0.12,
					0.12,
					0.12,
					0.12"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,2654" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="-1.123456789,
					-1.123456791043,
					-1.123456789,
					-1.123456791043"/>
      <testData input="123456789.123456789,2"
                expectedOutput="1.123456789,
					1.123456791043,
					1.123456789,
					1.123456791043"/>
      <testData input="46,-456" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3"
                expectedOutput="-0.00034,
					-0.00034,
					-0.00034,
					-0.00034"/>
      <testData input="-.244,2" expectedOutput="-0.244,
					-0.244,
					-0.244,
					-0.244"/>
      <testData input="-0.244,2" expectedOutput="-0.244,
					-0.244,
					-0.244,
					-0.244"/>
      <testData input="-0.245,23223244"
                expectedOutput="-0.245,
					-0.245,
					-0.245,
					-0.245"/>
      <testData input=".24456,123456789"
                expectedOutput="0.24456,
					0.24456,
					0.24456,
					0.24456"/>
      <testData input="0.24456,0.000045"
                expectedOutput="0.000030,
					0.00003,
					0.000030,
					0.00003"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testModUsesExpCeil"
             fieldName="testModUsesExpCeil"
             dataType="Double"
             formula="MOD(EXP(customnumber1__c),CEILING(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="0,1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1,2"
                expectedOutput="0.718281828459045,
					0.718281828459,
					0.718281828459045,
					0.718281828459"/>
      <testData input="2,4"
                expectedOutput="3.38905609893065,
					3.389056098931,
					3.38905609893065,
					3.389056098931"/>
      <testData input="-1,-12"
                expectedOutput="0.36787944117144233,
					0.367879441171,
					0.36787944117144233,
					0.367879441171"/>
      <testData input="-10,2"
                expectedOutput="0.000045399929762484854,
					0.00004539993,
					0.000045399929762484854,
					0.00004539993"/>
      <testData input="-100,-1"
                expectedOutput="0.00000000000000000000000000000000,
					0,
					0.00000000000000000000000000000000,
					0"/>
      <testData input="30,5" expectedOutput="4.463,
					4.462890625,
					4.463,
					4.462890625"/>
      <testData input="30,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="30,12"
                expectedOutput="4.463,
					4.462890625,
					4.463,
					4.462890625"/>
      <testData input=","
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",2" expectedOutput="1.0,
					1,
					null,
					null"/>
   </testcase>
   <testcase testName="testModUsesFloorAbs"
             fieldName="testModUsesFloorAbs"
             dataType="Double"
             formula="MOD(FLOOR(customnumber1__c),ABS(customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.12345,
					2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="20.123444,13" expectedOutput="7,
					7,
					7,
					7"/>
      <testData input="20.123445,7" expectedOutput="6,
					6,
					6,
					6"/>
      <testData input="20.12345,23" expectedOutput="20,
					20,
					20,
					20"/>
      <testData input="20.12,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-1,2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-1,2654" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-123456789.123456789,
					2" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="123456789.123456789,2" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="46,-456" expectedOutput="46,
					46,
					46,
					46"/>
      <testData input="-0,-1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.00034,3" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.244,2" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="-0.245,23223244" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".24456,123456789" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="0.24456,0.000045" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",16" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="-256,16" expectedOutput="0,
					0,
					0,
					0"/>
   </testcase>
   <testcase testName="testModUsesLog"
             fieldName="testModUsesLog"
             dataType="Double"
             formula="MOD(LOG(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="0.301029995663981,
					0.301029995664,
					0.301029995663981,
					0.301029995664"/>
      <testData input="20.12345, 2"
                expectedOutput="1.3037024389842002,
					1.303702438984,
					1.3037024389842002,
					1.303702438984"/>
      <testData input="20.123444,13"
                expectedOutput="1.3037023094951077,
					1.303702309495,
					1.3037023094951077,
					1.303702309495"/>
      <testData input="20.123445,7"
                expectedOutput="1.3037023310766258,
					1.303702331077,
					1.3037023310766258,
					1.303702331077"/>
      <testData input="20.12345,23"
                expectedOutput="1.3037024389842002,
					1.303702438984,
					1.3037024389842002,
					1.303702438984"/>
      <testData input="20.12,1"
                expectedOutput="0.3036279763838898,
					0.303627976384,
					0.3036279763838898,
					0.303627976384"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,2654"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="0.091514977603564,
					0.091514977604,
					0.091514977603564,
					0.091514977604"/>
      <testData input="46,-456"
                expectedOutput="1.6627578316815739,
					1.662757831682,
					1.6627578316815739,
					1.662757831682"/>
      <testData input="-0,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,23223244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,123456789"
                expectedOutput="-0.6116145742819675,
					-0.611614574282,
					-0.6116145742819675,
					-0.611614574282"/>
      <testData input="0.24456,0.000045"
                expectedOutput="-0.0000195742819675,
					-0.000019574282,
					-0.0000195742819675,
					-0.000019574282"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testModUsesLn"
             fieldName="testModUsesLn"
             dataType="Double"
             formula="MOD(LN(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="0.995732273553991,
					0.995732273549,
					0.995732273553991,
					0.995732273549"/>
      <testData input="20.12345, 2"
                expectedOutput="1.0018858017049994,
					1.0018858017,
					1.0018858017049994,
					1.0018858017"/>
      <testData input="20.123444,13"
                expectedOutput="3.001885503545345,
					3.00188550354,
					3.001885503545345,
					3.00188550354"/>
      <testData input="20.123445,7"
                expectedOutput="3.001885553238627,
					3.001885553233,
					3.001885553238627,
					3.001885553233"/>
      <testData input="20.12345,23"
                expectedOutput="3.0018858017049994,
					3.0018858017,
					3.0018858017049994,
					3.0018858017"/>
      <testData input="20.12,1"
                expectedOutput="0.0017143452315387,
					0.001714345226,
					0.0017143452315387,
					0.001714345226"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,2654"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="0.63140176716802,
					0.631401767135,
					0.63140176716802,
					0.631401767135"/>
      <testData input="46,-456"
                expectedOutput="3.828641396489095,
					3.828641396482,
					3.828641396489095,
					3.828641396482"/>
      <testData input="-0,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,23223244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,123456789"
                expectedOutput="-1.408294601399558,
					-1.408294601397,
					-1.408294601399558,
					-1.408294601397"/>
      <testData input="0.24456,0.000045"
                expectedOutput="-0.000019601399558,
					-0.000019601397,
					-0.000019601399558,
					-0.000019601397"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testModUsesSqrt"
             fieldName="testModUsesSqrt"
             dataType="Double"
             formula="MOD(SQRT(customnumber1__c),customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="20,-1"
                expectedOutput="0.47213595499958,
					0.472135955,
					0.47213595499958,
					0.472135955"/>
      <testData input="20.12345, 2"
                expectedOutput="0.485916851659201,
					0.485916851659,
					0.485916851659201,
					0.485916851659"/>
      <testData input="20.123444,13"
                expectedOutput="4.485916182899542,
					4.4859161829,
					4.485916182899542,
					4.4859161829"/>
      <testData input="20.123445,7"
                expectedOutput="4.485916294359493,
					4.485916294359,
					4.485916294359493,
					4.485916294359"/>
      <testData input="20.12345,23"
                expectedOutput="4.485916851659201,
					4.485916851659,
					4.485916851659201,
					4.485916851659"/>
      <testData input="20.12,1"
                expectedOutput="0.485532298401161,
					0.485532298401,
					0.485532298401161,
					0.485532298401"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,2654"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="1.11106611111,
					1.111066111111,
					1.11106611111,
					1.111066111111"/>
      <testData input="46,-456"
                expectedOutput="6.782329983125268,
					6.782329983125,
					6.782329983125268,
					6.782329983125"/>
      <testData input="-0,-1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,23223244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,123456789"
                expectedOutput="0.4945300799749192,
					0.494530079975,
					0.4945300799749192,
					0.494530079975"/>
      <testData input="0.24456,0.000045"
                expectedOutput="0.0000250799749192,
					0.000025079975,
					0.0000250799749192,
					0.000025079975"/>
      <testData input=",16" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input=",2" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="-256,16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testModUsesRoundPlus"
             fieldName="testModUsesRoundPlus"
             dataType="Double"
             formula="MOD(ROUND(custompercent1__c,customnumber1__c),(customcurrency1__c+customcurrency2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <referenceField fieldName="customcurrency2" dataType="Currency"/>
      <testData input="123456789,123456789,200,300"
                expectedOutput="67.89,
					67.889999998966,
					67.89,
					67.889999998966"/>
      <testData input="12345678,123456789,200,300"
                expectedOutput="456.78,
					456.779999999897,
					456.78,
					456.779999999897"/>
      <testData input="12345678,1234567,200,300"
                expectedOutput="456.78,
					456.779999999897,
					456.78,
					456.779999999897"/>
      <testData input=",10.24,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10.24,,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,200,300" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="123.23456789,0,200,300" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="123.23456789,1,200,300" expectedOutput="1.2,
					1.2,
					1.2,
					1.2"/>
      <testData input="123.23456789,2,200,300"
                expectedOutput="1.23,
					1.23,
					1.23,
					1.23"/>
      <testData input="123.23456789,3,200,300"
                expectedOutput="1.232,
					1.232,
					1.232,
					1.232"/>
      <testData input="123.23456789,4,200,300"
                expectedOutput="1.2323,
					1.2323,
					1.2323,
					1.2323"/>
      <testData input="123.23456789,5,200,300"
                expectedOutput="1.23235,
					1.23235,
					1.23235,
					1.23235"/>
      <testData input="123.23456789,6,200,300"
                expectedOutput="1.232346,
					1.232346,
					1.232346,
					1.232346"/>
      <testData input="123.23456789,7,200,300"
                expectedOutput="1.2323457,
					1.2323457,
					1.2323457,
					1.2323457"/>
      <testData input="123.23456789,8,200,300"
                expectedOutput="1.23234568,
					1.23234568,
					1.23234568,
					1.23234568"/>
      <testData input="123.23456789,9,200,300"
                expectedOutput="1.232345679,
					1.232345679,
					1.232345679,
					1.232345679"/>
      <testData input="123.23456780,123.123456789,200,300"
                expectedOutput="1.232345678,
					1.232345678,
					1.232345678,
					1.232345678"/>
      <testData input="123.23456789,123.123456780,200,300"
                expectedOutput="1.2323456789,
					1.2323456789,
					1.2323456789,
					1.2323456789"/>
      <testData input="-200.434,200.434, 200, 300"
                expectedOutput="-2.00434,
					-2.00434,
					-2.00434,
					-2.00434"/>
      <testData input="200,
					-200.434,
					200,300" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="200,,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",1,,10" expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testModUsesIf"
             fieldName="testModUsesIf"
             dataType="Double"
             formula="MOD(IF(customcheckbox1__c,customnumber1__c,customnumber2__c),customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customcheckbox1" dataType="Boolean"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="true,100,200,400" expectedOutput="100,
					100,
					100,
					100"/>
      <testData input="false,123456789,123456789,123456789"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="true,45.4356,45,900"
                expectedOutput="45.4356,
					45.4356,
					45.4356,
					45.4356"/>
      <testData input="true,0.00000984,0.9,0.4560001"
                expectedOutput="0.00000984,
					0.00000984,
					0.00000984,
					0.00000984"/>
      <testData input="false,-200,-0.000000008,-0.0000012"
                expectedOutput="-0.000000008,
					-0.000000008,
					-0.000000008,
					-0.000000008"/>
   </testcase>
   <testcase testName="testModUsesCase"
             fieldName="testModUsesCase"
             dataType="Double"
             formula="MOD(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c),customformula1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <referenceField fieldName="customformula1"
                      dataType="Double"
                      formula="CASE(customdatetime1__c,customdatetime2__c,customnumber4__c,customdatetime3__c,customnumber5__c,customnumber6__c)">
         <referenceField fieldName="customdatetime1" dataType="DateTime"/>
         <referenceField fieldName="customdatetime2" dataType="DateTime"/>
         <referenceField fieldName="customnumber4" dataType="Double"/>
         <referenceField fieldName="customdatetime3" dataType="DateTime"/>
         <referenceField fieldName="customnumber5" dataType="Double"/>
         <referenceField fieldName="customnumber6" dataType="Double"/>
      </referenceField>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400,1999:12:31:24:00:00,2000:01:01:00:00:00,0,1999:12:31:23:59:59,1,2"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,,,,,2004:12:04:12:00:00,2004:12:04:00:00:00,0,2004:12:04:00:00:00,1,2"
                expectedOutput="0,
					0,
					null,
					null"/>
   </testcase>
   <testcase testName="testModRounding"
             fieldName="testModRounding"
             dataType="Double"
             formula="MOD(customnumber1__c * 10000, 2)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="56.925559"
                expectedOutput="1.590000,
					1.589999999967,
					1.590000,
					1.589999999967"/>
      <testData input="1.111123"
                expectedOutput="1.230000,
					1.230000000001,
					1.230000,
					1.230000000001"/>
      <testData input="1.111145"
                expectedOutput="1.450000,
					1.450000000001,
					1.450000,
					1.450000000001"/>
      <testData input="1.111155"
                expectedOutput="1.550000,
					1.549999999999,
					1.550000,
					1.549999999999"/>
      <testData input="1.111160"
                expectedOutput="1.600000,
					1.599999999999,
					1.600000,
					1.599999999999"/>
   </testcase>
   <testcase testName="testModRoundingNoScale"
             fieldName="testModRounding"
             dataType="Double"
             formula="MOD(customnumber1__c * 10000, 2)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="56.925559"
                expectedOutput="1.590000,
					1.589999999967,
					1.590000,
					1.589999999967"/>
      <testData input="1.111123"
                expectedOutput="1.230000,
					1.230000000001,
					1.230000,
					1.230000000001"/>
      <testData input="1.111145"
                expectedOutput="1.450000,
					1.450000000001,
					1.450000,
					1.450000000001"/>
      <testData input="1.111155"
                expectedOutput="1.550000,
					1.549999999999,
					1.550000,
					1.549999999999"/>
      <testData input="1.111160"
                expectedOutput="1.600000,
					1.599999999999,
					1.600000,
					1.599999999999"/>
   </testcase>
   <testcase testName="testLogSimple"
             fieldName="testLogSimple"
             dataType="Double"
             formula="Log(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.30102999566398114,
					0.301029995664,
					0.30102999566398114,
					0.301029995664"/>
      <testData input="3"
                expectedOutput="0.47712125471966244,
					0.47712125472,
					0.47712125471966244,
					0.47712125472"/>
      <testData input="4"
                expectedOutput="0.6020599913279623,
					0.602059991328,
					0.6020599913279623,
					0.602059991328"/>
      <testData input="5"
                expectedOutput="0.6989700043360187,
					0.698970004336,
					0.6989700043360187,
					0.698970004336"/>
      <testData input="6"
                expectedOutput="0.7781512503836435,
					0.778151250384,
					0.7781512503836435,
					0.778151250384"/>
      <testData input="10000" expectedOutput="4.0,
					4,
					4.0,
					4"/>
      <testData input="10" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="16"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="2.56"
                expectedOutput="0.40823996531184953,
					0.408239965312,
					0.40823996531184953,
					0.408239965312"/>
      <testData input="123456789.123456789"
                expectedOutput="8.091514977603564,
					8.091514977604,
					8.091514977603564,
					8.091514977604"/>
   </testcase>
   <testcase testName="testLogUsesAbs"
             fieldName="testLogUsesAbs"
             dataType="Double"
             formula="Log(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20"
                expectedOutput="1.301029995663981,
					1.301029995664,
					1.301029995663981,
					1.301029995664"/>
      <testData input="20.12345"
                expectedOutput="1.3037024389842002,
					1.303702438984,
					1.3037024389842002,
					1.303702438984"/>
      <testData input="-1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-123456789.123456789"
                expectedOutput="8.091514977603564,
					8.091514977604,
					8.091514977603564,
					8.091514977604"/>
      <testData input="123456789.123456789"
                expectedOutput="8.091514977603564,
					8.091514977604,
					8.091514977603564,
					8.091514977604"/>
      <testData input="46"
                expectedOutput="1.6627578316815739,
					1.662757831682,
					1.6627578316815739,
					1.662757831682"/>
      <testData input="-0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034"
                expectedOutput="-3.4685210829577446,
					-3.468521082958,
					-3.4685210829577446,
					-3.468521082958"/>
      <testData input="-.244"
                expectedOutput="-0.6126101736612705,
					-0.612610173661,
					-0.6126101736612705,
					-0.612610173661"/>
      <testData input="-0.244"
                expectedOutput="-0.6126101736612705,
					-0.612610173661,
					-0.6126101736612705,
					-0.612610173661"/>
      <testData input="-0.245"
                expectedOutput="-0.6108339156354675,
					-0.610833915635,
					-0.6108339156354675,
					-0.610833915635"/>
      <testData input=".24456"
                expectedOutput="-0.6116145742819675,
					-0.611614574282,
					-0.6116145742819675,
					-0.611614574282"/>
      <testData input="0.24456"
                expectedOutput="-0.6116145742819675,
					-0.611614574282,
					-0.6116145742819675,
					-0.611614574282"/>
      <testData input="16"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="256"
                expectedOutput="2.408239965311849,
					2.408239965312,
					2.408239965311849,
					2.408239965312"/>
      <testData input="-256"
                expectedOutput="2.408239965311849,
					2.408239965312,
					2.408239965311849,
					2.408239965312"/>
   </testcase>
   <testcase testName="testLogUsesCeil"
             fieldName="testLogUsesCeil"
             dataType="Double"
             formula="Log(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="1.322219294733919,
					1.322219294734,
					1.322219294733919,
					1.322219294734"/>
      <testData input="123456789.54321"
                expectedOutput="8.091514980687055,
					8.091514980687,
					8.091514980687055,
					8.091514980687"/>
      <testData input="123456789.123456789"
                expectedOutput="8.091514980687055,
					8.091514980687,
					8.091514980687055,
					8.091514980687"/>
      <testData input="49.55"
                expectedOutput="1.6989700043360185,
					1.698970004336,
					1.6989700043360185,
					1.698970004336"/>
      <testData input="0.00034" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.244" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="25.7456"
                expectedOutput="1.414973347970818,
					1.414973347971,
					1.414973347970818,
					1.414973347971"/>
      <testData input="64.456"
                expectedOutput="1.8129133566428552,
					1.812913356643,
					1.8129133566428552,
					1.812913356643"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLogUsesMCeil"
             fieldName="testLogUsesMCeil"
             dataType="Double"
             formula="Log(MCEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="1.322219294733919,
					1.322219294734,
					1.322219294733919,
					1.322219294734"/>
      <testData input="123456789.54321"
                expectedOutput="8.091514980687055,
					8.091514980687,
					8.091514980687055,
					8.091514980687"/>
      <testData input="123456789.123456789"
                expectedOutput="8.091514980687055,
					8.091514980687,
					8.091514980687055,
					8.091514980687"/>
      <testData input="49.55"
                expectedOutput="1.6989700043360185,
					1.698970004336,
					1.6989700043360185,
					1.698970004336"/>
      <testData input="0.00034" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.244" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="25.7456"
                expectedOutput="1.414973347970818,
					1.414973347971,
					1.414973347970818,
					1.414973347971"/>
      <testData input="64.456"
                expectedOutput="1.8129133566428552,
					1.812913356643,
					1.8129133566428552,
					1.812913356643"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLogUsesFloor"
             fieldName="testLogUsesFloor"
             dataType="Double"
             formula="Log(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="1.301029995663981,
					1.301029995664,
					1.301029995663981,
					1.301029995664"/>
      <testData input="123456789.54321"
                expectedOutput="8.09151497716927,
					8.091514977169,
					8.09151497716927,
					8.091514977169"/>
      <testData input="123456789.123456789"
                expectedOutput="8.09151497716927,
					8.091514977169,
					8.09151497716927,
					8.091514977169"/>
      <testData input="49.55"
                expectedOutput="1.6901960800285134,
					1.690196080029,
					1.6901960800285134,
					1.690196080029"/>
      <testData input="0.00034"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="25.7456"
                expectedOutput="1.3979400086720375,
					1.397940008672,
					1.3979400086720375,
					1.397940008672"/>
      <testData input="64.456"
                expectedOutput="1.8061799739838869,
					1.806179973984,
					1.8061799739838869,
					1.806179973984"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLogUsesLog"
             fieldName="testLogUsesLog"
             dataType="Double"
             formula="Log(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="-0.5213902276543249,
					-0.521390227654,
					-0.5213902276543249,
					-0.521390227654"/>
      <testData input="3"
                expectedOutput="-0.3213712361305425,
					-0.321371236131,
					-0.3213712361305425,
					-0.321371236131"/>
      <testData input="4"
                expectedOutput="-0.22036023199034366,
					-0.22036023199,
					-0.22036023199034366,
					-0.22036023199"/>
      <testData input="5"
                expectedOutput="-0.1555414612083443,
					-0.155541461208,
					-0.1555414612083443,
					-0.155541461208"/>
      <testData input="6"
                expectedOutput="-0.10893598035898745,
					-0.108935980359,
					-0.10893598035898745,
					-0.108935980359"/>
      <testData input="10000"
                expectedOutput="0.6020599913279623,
					0.602059991328,
					0.6020599913279623,
					0.602059991328"/>
      <testData input="10" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="16"
                expectedOutput="0.0806697636736375,
					0.080669763674,
					0.0806697636736375,
					0.080669763674"/>
      <testData input="2.56"
                expectedOutput="-0.38908448157782616,
					-0.389084481578,
					-0.38908448157782616,
					-0.389084481578"/>
      <testData input="123456789.123456789"
                expectedOutput="0.9080298423558821,
					0.908029842356,
					0.9080298423558821,
					0.908029842356"/>
   </testcase>
   <testcase testName="testLogUsesLn"
             fieldName="testLogUsesLn"
             dataType="Double"
             formula="Log(LN(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="-0.15917453895486158,
					-0.159174538956,
					-0.15917453895486158,
					-0.159174538956"/>
      <testData input="3"
                expectedOutput="0.04084445256892067,
					0.040844452568,
					0.04084445256892067,
					0.040844452568"/>
      <testData input="4"
                expectedOutput="0.14185545670911956,
					0.141855456708,
					0.14185545670911956,
					0.141855456708"/>
      <testData input="5"
                expectedOutput="0.20667422749111886,
					0.20667422749,
					0.20667422749111886,
					0.20667422749"/>
      <testData input="6"
                expectedOutput="0.25327970834047575,
					0.25327970834,
					0.25327970834047575,
					0.25327970834"/>
      <testData input="10000"
                expectedOutput="0.9642756800274255,
					0.964275680027,
					0.9642756800274255,
					0.964275680027"/>
      <testData input="10"
                expectedOutput="0.36221568869946325,
					0.362215688699,
					0.36221568869946325,
					0.362215688699"/>
      <testData input="16"
                expectedOutput="0.44288545237310073,
					0.442885452372,
					0.44288545237310073,
					0.442885452372"/>
      <testData input="2.56"
                expectedOutput="-0.02686879287836291,
					-0.026868792879,
					-0.02686879287836291,
					-0.026868792879"/>
      <testData input="123456789.123456789"
                expectedOutput="1.2702455310553453,
					1.270245531055,
					1.2702455310553453,
					1.270245531055"/>
   </testcase>
   <testcase testName="testLogUsesSqrt"
             fieldName="testLogUsesSqrt"
             dataType="Double"
             formula="Log(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="0.1505149978319906,
					0.150514997832,
					0.1505149978319906,
					0.150514997832"/>
      <testData input="3"
                expectedOutput="0.23856062735983116,
					0.23856062736,
					0.23856062735983116,
					0.23856062736"/>
      <testData input="4"
                expectedOutput="0.30102999566398114,
					0.301029995664,
					0.30102999566398114,
					0.301029995664"/>
      <testData input="7"
                expectedOutput="0.4225490200071284,
					0.422549020007,
					0.4225490200071284,
					0.422549020007"/>
      <testData input="12"
                expectedOutput="0.5395906230238123,
					0.539590623024,
					0.5395906230238123,
					0.539590623024"/>
      <testData input="16"
                expectedOutput="0.6020599913279623,
					0.602059991328,
					0.6020599913279623,
					0.602059991328"/>
      <testData input="256"
                expectedOutput="1.2041199826559246,
					1.204119982656,
					1.2041199826559246,
					1.204119982656"/>
      <testData input="65536.00"
                expectedOutput="2.408239965311849,
					2.408239965312,
					2.408239965311849,
					2.408239965312"/>
      <testData input="65536.16"
                expectedOutput="2.4082404954558334,
					2.408240495456,
					2.4082404954558334,
					2.408240495456"/>
      <testData input="65536.64"
                expectedOutput="2.40824208588002,
					2.40824208588,
					2.40824208588002,
					2.40824208588"/>
      <testData input="65536.4816"
                expectedOutput="2.408241561041326,
					2.408241561041,
					2.408241561041326,
					2.408241561041"/>
   </testcase>
   <testcase testName="testLogUsesRound"
             fieldName="testLogUsesRound"
             dataType="Double"
             formula="Log(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="1.301029995663981,
					1.301029995664,
					1.301029995663981,
					1.301029995664"/>
      <testData input="20.12345, 2"
                expectedOutput="1.3036279763838898,
					1.303627976384,
					1.3036279763838898,
					1.303627976384"/>
      <testData input="20.123444,4"
                expectedOutput="1.3037013599072491,
					1.303701359907,
					1.3037013599072491,
					1.303701359907"/>
      <testData input="20.123445,4"
                expectedOutput="1.3037013599072491,
					1.303701359907,
					1.3037013599072491,
					1.303701359907"/>
      <testData input="20.12345,4"
                expectedOutput="1.3037035180584702,
					1.303703518058,
					1.3037035180584702,
					1.303703518058"/>
      <testData input="20.12,4"
                expectedOutput="1.3036279763838898,
					1.303627976384,
					1.3036279763838898,
					1.303627976384"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="8.091514977591405,
					8.091514977591,
					8.091514977591405,
					8.091514977591"/>
      <testData input="46, 0"
                expectedOutput="1.6627578316815739,
					1.662757831682,
					1.6627578316815739,
					1.662757831682"/>
      <testData input="-0,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.24456,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testLogUsesMOD"
             fieldName="testLogUsesMOD"
             dataType="Double"
             formula="Log(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20.12345, 2"
                expectedOutput="-0.9085089057320488,
					-0.908508905732,
					-0.9085089057320488,
					-0.908508905732"/>
      <testData input="20.123444,13"
                expectedOutput="0.8526900145032738,
					0.852690014503,
					0.8526900145032738,
					0.852690014503"/>
      <testData input="20.123445,7"
                expectedOutput="0.7869958214187462,
					0.786995821419,
					0.7869958214187462,
					0.786995821419"/>
      <testData input="20.12345,23"
                expectedOutput="1.3037024389842002,
					1.303702438984,
					1.3037024389842002,
					1.303702438984"/>
      <testData input="20.12,1"
                expectedOutput="-0.9208187539523751,
					-0.920818753952,
					-0.9208187539523751,
					-0.920818753952"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,2654"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="0.05055637300814937,
					0.050556373798,
					0.05055637300814937,
					0.050556373798"/>
      <testData input="46,-456"
                expectedOutput="1.6627578316815739,
					1.662757831682,
					1.6627578316815739,
					1.662757831682"/>
      <testData input="-0,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,23223244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,123456789"
                expectedOutput="-0.6116145742819675,
					-0.611614574282,
					-0.6116145742819675,
					-0.611614574282"/>
      <testData input="0.24456,0.000045"
                expectedOutput="-4.522878745280337,
					-4.522878745281,
					-4.522878745280337,
					-4.522878745281"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLogUsesIf"
             fieldName="testLogUsesIf"
             dataType="Double"
             formula="Log(IF(false,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24"
                expectedOutput="1.380211241711606,
					1.380211241712,
					1.380211241711606,
					1.380211241712"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="1.9956351945975497,
					1.995635194598,
					1.9956351945975497,
					1.995635194598"/>
      <testData input="99, -1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-20,-40"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.1111,1.1111"
                expectedOutput="0.04575314759414121,
					0.045753147594,
					0.04575314759414121,
					0.045753147594"/>
      <testData input="1.11114,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.11115,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-4.366531544420413,
					-4.36653154442,
					-4.366531544420413,
					-4.36653154442"/>
      <testData input="123456789,123456789"
                expectedOutput="8.09151497716927,
					8.091514977169,
					8.09151497716927,
					8.091514977169"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="8.091514977603564,
					8.091514977604,
					8.091514977603564,
					8.091514977604"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="600, 0.000600"
                expectedOutput="-3.221848749616356,
					-3.221848749616,
					-3.221848749616356,
					-3.221848749616"/>
      <testData input="600, -600"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="0.09149109426795106,
					0.091491094268,
					0.09149109426795106,
					0.091491094268"/>
      <testData input="1.245, 0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="1.0836264688680546,
					1.083626468868,
					1.0836264688680546,
					1.083626468868"/>
      <testData input="1.00596,240"
                expectedOutput="2.380211241711606,
					2.380211241712,
					2.380211241711606,
					2.380211241712"/>
      <testData input="0,240"
                expectedOutput="2.380211241711606,
					2.380211241712,
					2.380211241711606,
					2.380211241712"/>
      <testData input=".0000000000001,1000"
                expectedOutput="2.9999999999999996,
					3,
					2.9999999999999996,
					3"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLogUsesCase"
             fieldName="testLogUsesCase"
             dataType="Double"
             formula="Log(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="2.301029995663981,
					2.301029995664,
					2.301029995663981,
					2.301029995664"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="2.477121254719662,
					2.47712125472,
					2.477121254719662,
					2.47712125472"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400"
                expectedOutput="2.301029995663981,
					2.301029995664,
					2.301029995663981,
					2.301029995664"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="2.602059991327962,
					2.602059991328,
					2.602059991327962,
					2.602059991328"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="2.602059991327962,
					2.602059991328,
					2.602059991327962,
					2.602059991328"/>
      <testData input=",,200,2004:12:04,300,400"
                expectedOutput="2.602059991327962,
					2.602059991328,
					2.602059991327962,
					2.602059991328"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400"
                expectedOutput="2.301029995663981,
					2.301029995664,
					2.301029995663981,
					2.301029995664"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="2.477121254719662,
					2.47712125472,
					2.477121254719662,
					2.47712125472"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",,,,,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testLogUsesLen"
             fieldName="testLogUsesLen"
             dataType="Double"
             formula="Log(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="1.4313637641589871,
					1.431363764159,
					1.4313637641589871,
					1.431363764159"/>
      <testData input="making a way"
                expectedOutput="1.0791812460476247,
					1.079181246048,
					1.0791812460476247,
					1.079181246048"/>
      <testData input=""
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="blunder"
                expectedOutput="0.8450980400142567,
					0.845098040014,
					0.8450980400142567,
					0.845098040014"/>
      <testData input="makesense"
                expectedOutput="0.9542425094393249,
					0.954242509439,
					0.9542425094393249,
					0.954242509439"/>
      <testData input="does not make sense"
                expectedOutput="1.2787536009528289,
					1.278753600953,
					1.2787536009528289,
					1.278753600953"/>
      <testData input="working my way"
                expectedOutput="1.1461280356782377,
					1.146128035678,
					1.1461280356782377,
					1.146128035678"/>
      <testData input="e" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="2.2355284469075487,
					2.235528446908,
					2.2355284469075487,
					2.235528446908"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="1.716003343634799,
					1.716003343635,
					1.716003343634799,
					1.716003343635"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="1.7558748556724912,
					1.755874855672,
					1.7558748556724912,
					1.755874855672"/>
   </testcase>
   <testcase testName="testLogUsesValue"
             fieldName="testLogUsesValue"
             dataType="Double"
             formula="Log(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.30102999566398114,
					0.301029995664,
					0.30102999566398114,
					0.301029995664"/>
      <testData input="-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-10"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-100"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="56"
                expectedOutput="1.7481880270062005,
					1.748188027006,
					1.7481880270062005,
					1.748188027006"/>
      <testData input="110"
                expectedOutput="2.041392685158225,
					2.041392685158,
					2.041392685158225,
					2.041392685158"/>
      <testData input="20"
                expectedOutput="1.301029995663981,
					1.301029995664,
					1.301029995663981,
					1.301029995664"/>
   </testcase>
   <testcase testName="testLogUsesMinus"
             fieldName="testLogUsesMinus"
             dataType="Double"
             formula="Log((custompercent1__c-customcurrency1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input=",24"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="99, -1"
                expectedOutput="0.2988530764097066,
					0.29885307641,
					0.2988530764097066,
					0.29885307641"/>
      <testData input="-20,-40"
                expectedOutput="1.5998830720736876,
					1.599883072074,
					1.5998830720736876,
					1.599883072074"/>
      <testData input="1.1111,1.1111"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.11114,0.00000"
                expectedOutput="-1.9542312179295842,
					-1.95423121793,
					-1.9542312179295842,
					-1.95423121793"/>
      <testData input="1.11115,0.00000"
                expectedOutput="-1.9542273093984572,
					-1.954227309398,
					-1.9542273093984572,
					-1.954227309398"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-1.9559261409066446,
					-1.955926140907,
					-1.9559261409066446,
					-1.955926140907"/>
      <testData input="123456789,123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="8.095836351386207,
					8.095836351386,
					8.095836351386207,
					8.095836351386"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="8.087150172201113,
					8.087150172201,
					8.087150172201113,
					8.087150172201"/>
      <testData input="600, 0.000600"
                expectedOutput="0.778107818763836,
					0.778107818764,
					0.778107818763836,
					0.778107818764"/>
      <testData input="600, -600"
                expectedOutput="2.782472624166286,
					2.782472624166,
					2.782472624166286,
					2.782472624166"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.245, 0"
                expectedOutput="-1.904830648568245,
					-1.904830648568,
					-1.904830648568245,
					-1.904830648568"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1," expectedOutput="-1.9999999999999996,
					-2,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="2.9999999999999996,
					3,
					2.9999999999999996,
					3"/>
   </testcase>
   <testcase testName="testLogUsesMultiply"
             fieldName="testLogUsesMultiply"
             dataType="Double"
             formula="Log((custompercent1__c*customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",24"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="99, -1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-20,-40"
                expectedOutput="0.9030899869919434,
					0.903089986992,
					0.9030899869919434,
					0.903089986992"/>
      <testData input="1.1111,1.1111"
                expectedOutput="-1.9084937048117172,
					-1.908493704812,
					-1.9084937048117172,
					-1.908493704812"/>
      <testData input="1.11114,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.11115,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-6.320773706424291,
					-6.320773706424,
					-6.320773706424291,
					-6.320773706424"/>
      <testData input="123456789,123456789"
                expectedOutput="14.183029954338538,
					14.183029954339,
					14.183029954338538,
					14.183029954339"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="14.183029955207127,
					14.183029955207,
					14.183029955207127,
					14.183029955207"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="14.183029955207127,
					14.183029955207,
					14.183029955207127,
					14.183029955207"/>
      <testData input="600, 0.000600"
                expectedOutput="-2.4436974992327127,
					-2.443697499233,
					-2.4436974992327127,
					-2.443697499233"/>
      <testData input="600, -600"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="-1.8170178114640978,
					-1.817017811464,
					-1.8170178114640978,
					-1.817017811464"/>
      <testData input="1.245, 0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="0.3827919539179473,
					0.382791953918,
					0.3827919539179473,
					0.382791953918"/>
      <testData input="0,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,1000"
                expectedOutput="-11.999999999999998,
					-12,
					-11.999999999999998,
					-12"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNSimple"
             fieldName="testLNSimple"
             dataType="Double"
             formula="LN(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.6931471805599453,
					0.693147180559,
					0.6931471805599453,
					0.693147180559"/>
      <testData input="3"
                expectedOutput="1.0986122886681098,
					1.098612288666,
					1.0986122886681098,
					1.098612288666"/>
      <testData input="4"
                expectedOutput="1.3862943611198906,
					1.386294361117,
					1.3862943611198906,
					1.386294361117"/>
      <testData input="5"
                expectedOutput="1.6094379124341003,
					1.609437912431,
					1.6094379124341003,
					1.609437912431"/>
      <testData input="6"
                expectedOutput="1.791759469228055,
					1.791759469225,
					1.791759469228055,
					1.791759469225"/>
      <testData input="10000"
                expectedOutput="9.210340371976184,
					9.21034037196,
					9.210340371976184,
					9.21034037196"/>
      <testData input="10"
                expectedOutput="2.302585092994046,
					2.30258509299,
					2.302585092994046,
					2.30258509299"/>
      <testData input="16"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="2.56"
                expectedOutput="0.9400072584914712,
					0.94000725849,
					0.9400072584914712,
					0.94000725849"/>
      <testData input="123456789.123456789"
                expectedOutput="18.63140176716802,
					18.631401767135,
					18.63140176716802,
					18.631401767135"/>
   </testcase>
   <testcase testName="testLNUsesAbs"
             fieldName="testLNUsesAbs"
             dataType="Double"
             formula="LN(ABS(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20"
                expectedOutput="2.995732273553991,
					2.995732273549,
					2.995732273553991,
					2.995732273549"/>
      <testData input="20.12345"
                expectedOutput="3.0018858017049994,
					3.0018858017,
					3.0018858017049994,
					3.0018858017"/>
      <testData input="-1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-123456789.123456789"
                expectedOutput="18.63140176716802,
					18.631401767135,
					18.63140176716802,
					18.631401767135"/>
      <testData input="123456789.123456789"
                expectedOutput="18.63140176716802,
					18.631401767135,
					18.63140176716802,
					18.631401767135"/>
      <testData input="46"
                expectedOutput="3.828641396489095,
					3.828641396482,
					3.828641396489095,
					3.828641396482"/>
      <testData input="-0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034"
                expectedOutput="-7.986564940354067,
					-7.98656494034,
					-7.986564940354067,
					-7.98656494034"/>
      <testData input="-.244"
                expectedOutput="-1.410587053688935,
					-1.410587053686,
					-1.410587053688935,
					-1.410587053686"/>
      <testData input="-0.244"
                expectedOutput="-1.410587053688935,
					-1.410587053686,
					-1.410587053688935,
					-1.410587053686"/>
      <testData input="-0.245"
                expectedOutput="-1.40649706843741,
					-1.406497068435,
					-1.40649706843741,
					-1.406497068435"/>
      <testData input=".24456"
                expectedOutput="-1.408294601399558,
					-1.408294601397,
					-1.408294601399558,
					-1.408294601397"/>
      <testData input="0.24456"
                expectedOutput="-1.408294601399558,
					-1.408294601397,
					-1.408294601399558,
					-1.408294601397"/>
      <testData input="16"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="256"
                expectedOutput="5.545177444479562,
					5.54517744447,
					5.545177444479562,
					5.54517744447"/>
      <testData input="-256"
                expectedOutput="5.545177444479562,
					5.54517744447,
					5.545177444479562,
					5.54517744447"/>
   </testcase>
   <testcase testName="testLNUsesCeil"
             fieldName="testLNUsesCeil"
             dataType="Double"
             formula="LN(CEILING(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="3.044522437723423,
					3.044522437718,
					3.044522437723423,
					3.044522437718"/>
      <testData input="123456789.54321"
                expectedOutput="18.631401774268017,
					18.631401774235,
					18.631401774268017,
					18.631401774235"/>
      <testData input="123456789.123456789"
                expectedOutput="18.631401774268017,
					18.631401774235,
					18.631401774268017,
					18.631401774235"/>
      <testData input="49.55"
                expectedOutput="3.912023005428146,
					3.912023005421,
					3.912023005428146,
					3.912023005421"/>
      <testData input="0.00034" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.244" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="25.7456"
                expectedOutput="3.258096538021482,
					3.258096538016,
					3.258096538021482,
					3.258096538016"/>
      <testData input="64.456"
                expectedOutput="4.174387269895637,
					4.174387269888,
					4.174387269895637,
					4.174387269888"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNUsesFloor"
             fieldName="testLNUsesFloor"
             dataType="Double"
             formula="LN(FLOOR(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="20.842345"
                expectedOutput="2.995732273553991,
					2.995732273549,
					2.995732273553991,
					2.995732273549"/>
      <testData input="123456789.54321"
                expectedOutput="18.63140176616802,
					18.631401766135,
					18.63140176616802,
					18.631401766135"/>
      <testData input="123456789.123456789"
                expectedOutput="18.63140176616802,
					18.631401766135,
					18.63140176616802,
					18.631401766135"/>
      <testData input="49.55"
                expectedOutput="3.8918202981106265,
					3.891820298104,
					3.8918202981106265,
					3.891820298104"/>
      <testData input="0.00034"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="25.7456"
                expectedOutput="3.2188758248682006,
					3.218875824863,
					3.2188758248682006,
					3.218875824863"/>
      <testData input="64.456"
                expectedOutput="4.1588830833596715,
					4.158883083352,
					4.1588830833596715,
					4.158883083352"/>
      <testData input="-.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.4"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.7"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNUsesLog"
             fieldName="testLNUsesLog"
             dataType="Double"
             formula="LN(LOG(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="-1.2005453658296203,
					-1.200545365828,
					-1.2005453658296203,
					-1.200545365828"/>
      <testData input="3"
                expectedOutput="-0.7399846176312568,
					-0.73998461763,
					-0.7399846176312568,
					-0.73998461763"/>
      <testData input="4"
                expectedOutput="-0.507398185269675,
					-0.507398185269,
					-0.507398185269675,
					-0.507398185269"/>
      <testData input="5"
                expectedOutput="-0.35814744992084524,
					-0.35814744992,
					-0.35814744992084524,
					-0.35814744992"/>
      <testData input="6"
                expectedOutput="-0.25083436446529667,
					-0.250834364465,
					-0.25083436446529667,
					-0.250834364465"/>
      <testData input="10000"
                expectedOutput="1.3862943611198906,
					1.386294361117,
					1.3862943611198906,
					1.386294361117"/>
      <testData input="10" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="16"
                expectedOutput="0.1857489952902703,
					0.18574899529,
					0.1857489952902703,
					0.18574899529"/>
      <testData input="2.56"
                expectedOutput="-0.895900127196419,
					-0.895900127195,
					-0.895900127196419,
					-0.895900127195"/>
      <testData input="123456789.123456789"
                expectedOutput="2.0908159790023877,
					2.090815978999,
					2.0908159790023877,
					2.090815978999"/>
   </testcase>
   <testcase testName="testLNUsesLn"
             fieldName="testLNUsesLn"
             dataType="Double"
             formula="LN(LN(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="-0.36651292058166435,
					-0.366512920583,
					-0.36651292058166435,
					-0.366512920583"/>
      <testData input="3"
                expectedOutput="0.0940478276166991,
					0.094047827615,
					0.0940478276166991,
					0.094047827615"/>
      <testData input="4"
                expectedOutput="0.32663425997828094,
					0.326634259976,
					0.32663425997828094,
					0.326634259976"/>
      <testData input="5"
                expectedOutput="0.47588499532711054,
					0.475884995325,
					0.47588499532711054,
					0.475884995325"/>
      <testData input="6"
                expectedOutput="0.5831980807826592,
					0.58319808078,
					0.5831980807826592,
					0.58319808078"/>
      <testData input="10000"
                expectedOutput="2.2203268063678463,
					2.220326806362,
					2.2203268063678463,
					2.220326806362"/>
      <testData input="10"
                expectedOutput="0.834032445247956,
					0.834032445245,
					0.834032445247956,
					0.834032445245"/>
      <testData input="16"
                expectedOutput="1.0197814405382262,
					1.019781440535,
					1.0197814405382262,
					1.019781440535"/>
      <testData input="2.56"
                expectedOutput="-0.06186768194846302,
					-0.06186768195,
					-0.06186768194846302,
					-0.06186768195"/>
      <testData input="123456789.123456789"
                expectedOutput="2.9248484242503436,
					2.924848424243,
					2.9248484242503436,
					2.924848424243"/>
   </testcase>
   <testcase testName="testLNUsesSqrt"
             fieldName="testLNUsesSqrt"
             dataType="Double"
             formula="LN(SQRT(customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2"
                expectedOutput="0.3465735902799727,
					0.346573590279,
					0.3465735902799727,
					0.346573590279"/>
      <testData input="3"
                expectedOutput="0.5493061443340548,
					0.549306144333,
					0.5493061443340548,
					0.549306144333"/>
      <testData input="4"
                expectedOutput="0.6931471805599453,
					0.693147180559,
					0.6931471805599453,
					0.693147180559"/>
      <testData input="7"
                expectedOutput="0.9729550745276567,
					0.972955074526,
					0.9729550745276567,
					0.972955074526"/>
      <testData input="12"
                expectedOutput="1.2424533248940002,
					1.242453324892,
					1.2424533248940002,
					1.242453324892"/>
      <testData input="16"
                expectedOutput="1.3862943611198906,
					1.386294361117,
					1.3862943611198906,
					1.386294361117"/>
      <testData input="256"
                expectedOutput="2.772588722239781,
					2.772588722235,
					2.772588722239781,
					2.772588722235"/>
      <testData input="65536.00"
                expectedOutput="5.545177444479562,
					5.54517744447,
					5.545177444479562,
					5.54517744447"/>
      <testData input="65536.16"
                expectedOutput="5.545178665181197,
					5.545178665171,
					5.545178665181197,
					5.545178665171"/>
      <testData input="65536.64"
                expectedOutput="5.545182327268221,
					5.545182327258,
					5.545182327268221,
					5.545182327258"/>
      <testData input="65536.4816"
                expectedOutput="5.545181118782468,
					5.545181118773,
					5.545181118782468,
					5.545181118773"/>
   </testcase>
   <testcase testName="testLNUsesRound"
             fieldName="testLNUsesRound"
             dataType="Double"
             formula="LN(ROUND(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="2.995732273553991,
					2.995732273549,
					2.995732273553991,
					2.995732273549"/>
      <testData input="20.12345, 2"
                expectedOutput="3.0017143452315387,
					3.001714345226,
					3.0017143452315387,
					3.001714345226"/>
      <testData input="20.123444,4"
                expectedOutput="3.0018833170384975,
					3.001883317033,
					3.0018833170384975,
					3.001883317033"/>
      <testData input="20.123445,4"
                expectedOutput="3.0018833170384975,
					3.001883317033,
					3.0018833170384975,
					3.001883317033"/>
      <testData input="20.12345,4"
                expectedOutput="3.0018882863653276,
					3.00188828636,
					3.0018882863653276,
					3.00188828636"/>
      <testData input="20.12,4"
                expectedOutput="3.0017143452315387,
					3.001714345226,
					3.0017143452315387,
					3.001714345226"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="18.63140176714002,
					18.631401767107,
					18.63140176714002,
					18.631401767107"/>
      <testData input="46, 0"
                expectedOutput="3.828641396489095,
					3.828641396482,
					3.828641396489095,
					3.828641396482"/>
      <testData input="-0,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.24456,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testLNUsesMOD"
             fieldName="testLNUsesMOD"
             dataType="Double"
             formula="LN(MOD(customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input="0,1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="20.12345, 2"
                expectedOutput="-2.0919190631909483,
					-2.091919063187,
					-2.0919190631909483,
					-2.091919063187"/>
      <testData input="20.123444,13"
                expectedOutput="1.9633913163401149,
					1.963391316337,
					1.9633913163401149,
					1.963391316337"/>
      <testData input="20.123445,7"
                expectedOutput="1.8121248466474094,
					1.812124846644,
					1.8121248466474094,
					1.812124846644"/>
      <testData input="20.12345,23"
                expectedOutput="3.0018858017049994,
					3.0018858017,
					3.0018858017049994,
					3.0018858017"/>
      <testData input="20.12,1"
                expectedOutput="-2.120263536200091,
					-2.120263536196,
					-2.120263536200091,
					-2.120263536196"/>
      <testData input="-1,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1,2654"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789, 2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="123456789.123456789,2"
                expectedOutput="0.11641035084441129,
					0.116410352663,
					0.11641035084441129,
					0.116410352663"/>
      <testData input="46,-456"
                expectedOutput="3.828641396489095,
					3.828641396482,
					3.828641396489095,
					3.828641396482"/>
      <testData input="-0,-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.00034,3"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.244,2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-0.245,23223244"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".24456,123456789"
                expectedOutput="-1.408294601399558,
					-1.408294601397,
					-1.408294601399558,
					-1.408294601397"/>
      <testData input="0.24456,0.000045"
                expectedOutput="-10.41431317630212,
					-10.414313176285,
					-10.41431317630212,
					-10.414313176285"/>
      <testData input=",16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",2"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="-256,16"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNUsesIf"
             fieldName="testLNUsesIf"
             dataType="Double"
             formula="LN(IF(false,customnumber1__c,customnumber2__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24"
                expectedOutput="3.1780538303479458,
					3.178053830342,
					3.1780538303479458,
					3.178053830342"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="4.59511985013459,
					4.595119850127,
					4.59511985013459,
					4.595119850127"/>
      <testData input="99, -1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-20,-40"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.1111,1.1111"
                expectedOutput="0.10535051560782595,
					0.105350515608,
					0.10535051560782595,
					0.105350515608"/>
      <testData input="1.11114,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.11115,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-10.054310442270712,
					-10.054310442253,
					-10.054310442270712,
					-10.054310442253"/>
      <testData input="123456789,123456789"
                expectedOutput="18.63140176616802,
					18.631401766135,
					18.63140176616802,
					18.631401766135"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="18.63140176716802,
					18.631401767135,
					18.63140176716802,
					18.631401767135"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="600, 0.000600"
                expectedOutput="-7.418580902748128,
					-7.418580902735,
					-7.418580902748128,
					-7.418580902735"/>
      <testData input="600, -600"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="0.2106660298030971,
					0.210666029803,
					0.2106660298030971,
					0.210666029803"/>
      <testData input="1.245, 0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="2.495142153589359,
					2.495142153585,
					2.495142153589359,
					2.495142153585"/>
      <testData input="1.00596,240"
                expectedOutput="5.480638923341991,
					5.480638923332,
					5.480638923341991,
					5.480638923332"/>
      <testData input="0,240"
                expectedOutput="5.480638923341991,
					5.480638923332,
					5.480638923341991,
					5.480638923332"/>
      <testData input=".0000000000001,1000"
                expectedOutput="6.907755278982137,
					6.90775527897,
					6.907755278982137,
					6.90775527897"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNUsesCase"
             fieldName="testLNUsesCase"
             dataType="Double"
             formula="LN(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customdate1" dataType="DateOnly"/>
      <referenceField fieldName="customdate2" dataType="DateOnly"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customdate3" dataType="DateOnly"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="5.298317366548036,
					5.298317366539,
					5.298317366548036,
					5.298317366539"/>
      <testData input="2004:12:04,2004:12:03,200,2004:12:04,300,400"
                expectedOutput="5.703782474656201,
					5.703782474646,
					5.703782474656201,
					5.703782474646"/>
      <testData input="2004:12:04,2004:12:04,200,2004:12:03,300,400"
                expectedOutput="5.298317366548036,
					5.298317366539,
					5.298317366548036,
					5.298317366539"/>
      <testData input="2004:12:05,2004:12:04,200,2004:12:04,300,400"
                expectedOutput="5.991464547107982,
					5.991464547097,
					5.991464547107982,
					5.991464547097"/>
      <testData input=",2004:12:04,200,2004:12:04,300,400"
                expectedOutput="5.991464547107982,
					5.991464547097,
					5.991464547107982,
					5.991464547097"/>
      <testData input=",,200,2004:12:04,300,400"
                expectedOutput="5.991464547107982,
					5.991464547097,
					5.991464547107982,
					5.991464547097"/>
      <testData input="2004:12:04,2004:12:04,200,,300,400"
                expectedOutput="5.298317366548036,
					5.298317366539,
					5.298317366548036,
					5.298317366539"/>
      <testData input="2004:12:04,,200,2004:12:04,300,400"
                expectedOutput="5.703782474656201,
					5.703782474646,
					5.703782474656201,
					5.703782474646"/>
      <testData input="2004:12:04,2004:12:04,,2004:12:04,300,400"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:04,,400"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:04,2004:12:05,200,2004:12:06,,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="2004:12:06,2004:12:04,200,2004:12:04,300,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",,,,,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
   </testcase>
   <testcase testName="testLNUsesLen"
             fieldName="testLNUsesLen"
             dataType="Double"
             formula="LN(LEN(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="This is too good to be true"
                expectedOutput="3.295836866004329,
					3.295836865999,
					3.295836866004329,
					3.295836865999"/>
      <testData input="making a way"
                expectedOutput="2.4849066497880004,
					2.484906649784,
					2.4849066497880004,
					2.484906649784"/>
      <testData input=""
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="blunder"
                expectedOutput="1.9459101490553132,
					1.945910149052,
					1.9459101490553132,
					1.945910149052"/>
      <testData input="makesense"
                expectedOutput="2.1972245773362196,
					2.197224577332,
					2.1972245773362196,
					2.197224577332"/>
      <testData input="does not make sense"
                expectedOutput="2.9444389791664403,
					2.944438979161,
					2.9444389791664403,
					2.944438979161"/>
      <testData input="working my way"
                expectedOutput="2.6390573296152584,
					2.639057329611,
					2.6390573296152584,
					2.639057329611"/>
      <testData input="e" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="hgsgthsghsngnskgstwtosgsgnsagjshgsatswouhwsogshglsalkgjslhgootwhtghwghshgjshthwtafkjhsigjhwtuwoifosjhgijsahtwtwuoshosangoiawtw9toahvojhsathwa9twofisajkghishtg9auwtwahgoshag"
                expectedOutput="5.147494476813453,
					5.147494476804,
					5.147494476813453,
					5.147494476804"/>
      <testData input="250508140)#)@%)^)^)%)!_$^%)*^_!%%&amp;%)%!)_*%)&amp;^%)!%_(_"
                expectedOutput="3.9512437185814275,
					3.951243718574,
					3.9512437185814275,
					3.951243718574"/>
      <testData input="blajh lsjdksj   dlsdlfgs   swcdglslgoiw slgslglsg\n\t\q\r"
                expectedOutput="4.04305126783455,
					4.043051267827,
					4.04305126783455,
					4.043051267827"/>
   </testcase>
   <testcase testName="testLNUsesValue"
             fieldName="testLNUsesValue"
             dataType="Double"
             formula="LN(VALUE(customtext1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customtext1" dataType="Text"/>
      <testData input="0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="2"
                expectedOutput="0.6931471805599453,
					0.693147180559,
					0.6931471805599453,
					0.693147180559"/>
      <testData input="-1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-10"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-100"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="56"
                expectedOutput="4.02535169073515,
					4.025351690728,
					4.02535169073515,
					4.025351690728"/>
      <testData input="110"
                expectedOutput="4.700480365792417,
					4.700480365784,
					4.700480365792417,
					4.700480365784"/>
      <testData input="20"
                expectedOutput="2.995732273553991,
					2.995732273549,
					2.995732273553991,
					2.995732273549"/>
   </testcase>
   <testcase testName="testLNUsesPlus"
             fieldName="testLNUsesPlus"
             dataType="Double"
             formula="LN((custompercent1__c+customcurrency1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customcurrency1" dataType="Currency"/>
      <testData input=",24"
                expectedOutput="3.1780538303479458,
					3.178053830342,
					null,
					null"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="4.595018834931716,
					4.595018834924,
					4.595018834931716,
					4.595018834924"/>
      <testData input="99, -1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-20,-40"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.1111,1.1111"
                expectedOutput="0.11530084646099412,
					0.115300846461,
					0.11530084646099412,
					0.115300846461"/>
      <testData input="1.11114,0.00000"
                expectedOutput="-4.4997836706682595,
					-4.49978367066,
					-4.4997836706682595,
					-4.49978367066"/>
      <testData input="1.11115,0.00000"
                expectedOutput="-4.499774670942751,
					-4.499774670935,
					-4.499774670942751,
					-4.499774670935"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-4.49594634260035,
					-4.495946342592,
					-4.49594634260035,
					-4.495946342592"/>
      <testData input="123456789,123456789"
                expectedOutput="18.641352097021187,
					18.641352096988,
					18.641352097021187,
					18.641352096988"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="18.641352098021187,
					18.641352097988,
					18.641352098021187,
					18.641352097988"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="600, 0.000600"
                expectedOutput="1.7918594642283883,
					1.791859464225,
					1.7918594642283883,
					1.791859464225"/>
      <testData input="600, -600"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="0.22061636065626522,
					0.220616360656,
					0.22061636065626522,
					0.220616360656"/>
      <testData input="1.245, 0"
                expectedOutput="-4.386034656071421,
					-4.386034656064,
					-4.386034656071421,
					-4.386034656064"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1,"
                expectedOutput="-4.605170185988091,
					-4.60517018598,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="2.495142153589359,
					2.495142153585,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="5.4806808374635825,
					5.480680837454,
					5.4806808374635825,
					5.480680837454"/>
      <testData input="0,240"
                expectedOutput="5.480638923341991,
					5.480638923332,
					5.480638923341991,
					5.480638923332"/>
      <testData input=".0000000000001,1000"
                expectedOutput="6.907755278982137,
					6.90775527897,
					6.907755278982137,
					6.90775527897"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testLNUsesMultiply"
             fieldName="testLNUsesMultiply"
             dataType="Double"
             formula="LN((custompercent1__c*customnumber1__c))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="custompercent1" dataType="Percent"/>
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=",24"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="0.0,0.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.00,0.00"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="0.000,0.000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-1.0,99.0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="99, -1"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-20,-40"
                expectedOutput="2.0794415416798357,
					2.079441541676,
					2.0794415416798357,
					2.079441541676"/>
      <testData input="1.1111,1.1111"
                expectedOutput="-4.394469154772439,
					-4.394469154765,
					-4.394469154772439,
					-4.394469154765"/>
      <testData input="1.11114,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.11115,0.00000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.111112,0.000043"
                expectedOutput="-14.554119312601296,
					-14.554119312576,
					-14.554119312601296,
					-14.554119312576"/>
      <testData input="123456789,123456789"
                expectedOutput="32.65763334634794,
					32.657633346291,
					32.65763334634794,
					32.657633346291"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="32.65763334834794,
					32.657633348291,
					32.65763334834794,
					32.657633348291"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="32.65763334834794,
					32.657633348291,
					32.65763334834794,
					32.657633348291"/>
      <testData input="600, 0.000600"
                expectedOutput="-5.626821433520073,
					-5.62682143351,
					-5.626821433520073,
					-5.62682143351"/>
      <testData input="600, -600"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="-4.183838126381898,
					-4.183838126375,
					-4.183838126381898,
					-4.183838126375"/>
      <testData input="1.245, 0"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=","
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1,"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="0.8814110468095292,
					0.881411046808,
					0.8814110468095292,
					0.881411046808"/>
      <testData input="0,240"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input=".0000000000001,1000"
                expectedOutput="-27.631021115928547,
					-27.63102111588,
					-27.631021115928547,
					-27.63102111588"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testBigDivide"
             fieldName="testBigDivide"
             dataType="Double"
             formula="((customnumber1__c/customnumber2__c)*customnumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="1,1000000000,1000000000"
                expectedOutput="1.000000000,
					1,
					1.000000000,
					1"/>
      <testData input="1,123456789123456.24,123456789123456.24"
                expectedOutput="1.00000000000000000000000000000000,
					1,
					1.00000000000000000000000000000000,
					1"/>
      <testData input="1,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
      <testData input="0,1,1" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=",,1"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="0,,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input=",,"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					null,
					null"/>
      <testData input="0,0,0"
                expectedOutput="Error: java.lang.ArithmeticException,
					null,
					Error: java.lang.ArithmeticException,
					null"/>
   </testcase>
   <testcase testName="testBigDivideWithFunc"
             fieldName="testBigDivideWithFunc"
             dataType="Double"
             formula="( ( (customnumber1__c * customnumber2__c )/(value(text(customnumber2__c )) ^ customnumber2__c ) )*(customnumber3__c ^ customnumber3__c ))"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <referenceField fieldName="customnumber3" dataType="Double"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10,10"
                expectedOutput="100.00000000,
					100,
					100.00000000,
					100"/>
      <testData input=",10,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,10," expectedOutput="0.00000001,
					0.00000001,
					null,
					null"/>
      <testData input=",,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.1,1.1,1.1"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1,49,1.49"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1.5,1.5,1.5"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="1,99,1.99"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
      <testData input="0.01,0.01,0.01"
                expectedOutput="Error: com.force.formula.FormulaEvaluationException,
					null,
					Error: com.force.formula.FormulaEvaluationException,
					null"/>
   </testcase>
   <testcase testName="testConstDoubleNegation"
             fieldName="testConstDoubleNegation"
             dataType="Double"
             formula="customnumber__c -- 2 + customnumber__c - (2-4) + customnumber__c - (-2)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber" dataType="Double"/>
      <testData input="" expectedOutput="6,
					6,
					null,
					null"/>
      <testData input="0.0" expectedOutput="6.0,
					6,
					6.0,
					6"/>
      <testData input="24" expectedOutput="78,
					78,
					78,
					78"/>
      <testData input=".99" expectedOutput="8.97,
					8.97,
					8.97,
					8.97"/>
      <testData input="-24" expectedOutput="-66,
					-66,
					-66,
					-66"/>
   </testcase>
   <testcase testName="testMax"
             fieldName="testMax"
             dataType="Double"
             formula="MAX(customNumber1__c,customNumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customNumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="24,
					24,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="99.0,
					99,
					99.0,
					99"/>
      <testData input="99,
					-1" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="-20,-40" expectedOutput="-20,
					-20,
					-20,
					-20"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.1111,
					1.1111,
					1.1111,
					1.1111"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.11114,
					1.11114,
					1.11114,
					1.11114"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.11115,
					1.11115,
					1.11115,
					1.11115"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.111112,
					1.111112,
					1.111112,
					1.111112"/>
      <testData input="123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-123456789.123456789,
					-123456789.1234567,
					-123456789.123456789,
					-123456789.1234567"/>
      <testData input="600,
					0.000600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="600,
					-600" expectedOutput="600,
					600,
					600,
					600"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.2345,
					1.2345,
					1.2345,
					1.2345"/>
      <testData input="1.245,
					0" expectedOutput="1.245,
					1.245,
					1.245,
					1.245"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="1,
					1,
					null,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="12.123456789,
					12.123456789,
					null,
					null"/>
      <testData input="1.00596,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input="0,240" expectedOutput="240,
					240,
					240,
					240"/>
      <testData input=".0000000000001,1000" expectedOutput="1000,
					1000,
					1000,
					1000"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="0.0000000000001,
					0,
					0.0000000000001,
					0"/>
   </testcase>
   <testcase testName="testMin"
             fieldName="testMin"
             dataType="Double"
             formula="MIN(customNumber1__c,customNumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customNumber2" dataType="Double"/>
      <testData input=",24" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.00,
					0,
					0.00,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.000,
					0,
					0.000,
					0"/>
      <testData input="-1.0,99.0" expectedOutput="-1.0,
					-1,
					-1.0,
					-1"/>
      <testData input="99,
					-1" expectedOutput="-1,
					-1,
					-1,
					-1"/>
      <testData input="-20,-40" expectedOutput="-40,
					-40,
					-40,
					-40"/>
      <testData input="1.1111,1.1111"
                expectedOutput="1.1111,
					1.1111,
					1.1111,
					1.1111"/>
      <testData input="1.11114,0.00000" expectedOutput="0.00000,
					0,
					0.00000,
					0"/>
      <testData input="1.11115,0.00000" expectedOutput="0.00000,
					0,
					0.00000,
					0"/>
      <testData input="1.111112,0.000043"
                expectedOutput="0.000043,
					0.000043,
					0.000043,
					0.000043"/>
      <testData input="123456789,123456789"
                expectedOutput="123456789,
					123456789,
					123456789,
					123456789"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="123456789.123456789,
					123456789.1234567,
					123456789.123456789,
					123456789.1234567"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="-123456789.123456789,
					-123456789.1234567,
					-123456789.123456789,
					-123456789.1234567"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-123456789.123456789,
					-123456789.1234567,
					-123456789.123456789,
					-123456789.1234567"/>
      <testData input="600, 0.000600"
                expectedOutput="0.000600,
					0.0006,
					0.000600,
					0.0006"/>
      <testData input="600,
					-600" expectedOutput="-600,
					-600,
					-600,
					-600"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="1.2345,
					1.2345,
					1.2345,
					1.2345"/>
      <testData input="1.245,
					0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",12.123456789" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="1.00596,
					1.00596,
					1.00596,
					1.00596"/>
      <testData input="0,240" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input=".0000000000001,1000"
                expectedOutput="0.0000000000001,
					0,
					0.0000000000001,
					0"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="-1000,
					-1000,
					-1000,
					-1000"/>
   </testcase>
   <testcase testName="testMax3"
             fieldName="testMax"
             dataType="Double"
             formula="MAX(customNumber1__c,customNumber2__c,customNumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customNumber2" dataType="Double"/>
      <referenceField fieldName="customNumber3" dataType="Double"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10,10" expectedOutput="10,
					10,
					null,
					null"/>
      <testData input="10,,10" expectedOutput="10,
					10,
					null,
					null"/>
      <testData input="10,10," expectedOutput="10,
					10,
					null,
					null"/>
      <testData input=",,10" expectedOutput="10,
					10,
					null,
					null"/>
      <testData input="10,," expectedOutput="10,
					10,
					null,
					null"/>
      <testData input=",10," expectedOutput="10,
					10,
					null,
					null"/>
      <testData input=",," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1.1,
					1.1,
					1.1,
					1.1"/>
      <testData input="1,49,1.49" expectedOutput="49,
					49,
					49,
					49"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1.5,
					1.5,
					1.5,
					1.5"/>
      <testData input="1,99,1.99" expectedOutput="99,
					99,
					99,
					99"/>
      <testData input="0.01,0.01,0.01" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
   </testcase>
   <testcase testName="testMin3"
             fieldName="testMin"
             dataType="Double"
             formula="MIN(customNumber1__c,customNumber2__c,customNumber3__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customNumber1" dataType="Double"/>
      <referenceField fieldName="customNumber2" dataType="Double"/>
      <referenceField fieldName="customNumber3" dataType="Double"/>
      <testData input="1,1,1" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0,0,0" expectedOutput="0,
					0,
					0,
					0"/>
      <testData input="10,10,10" expectedOutput="10,
					10,
					10,
					10"/>
      <testData input=",10,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",,10" expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="10,," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",10," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input=",," expectedOutput="0,
					0,
					null,
					null"/>
      <testData input="1.1,1.1,1.1" expectedOutput="1.1,
					1.1,
					1.1,
					1.1"/>
      <testData input="1,49,1.49" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="1.5,1.5,1.5" expectedOutput="1.5,
					1.5,
					1.5,
					1.5"/>
      <testData input="1,99,1.99" expectedOutput="1,
					1,
					1,
					1"/>
      <testData input="0.01,0.01,0.01" expectedOutput="0.01,
					0.01,
					0.01,
					0.01"/>
   </testcase>
   <testcase testName="testSine"
             fieldName="testSine"
             dataType="Double"
             formula="SIN(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1"
                expectedOutput="0.8414709848078965,
					0.841470984808,
					0.8414709848078965,
					0.841470984808"/>
      <testData input="-1"
                expectedOutput="-0.8414709848078965,
					-0.841470984808,
					-0.8414709848078965,
					-0.841470984808"/>
      <testData input="3.141592653589793"
                expectedOutput="0.00000000000000012246467991473532,
					0,
					0.00000000000000012246467991473532,
					0"/>
      <testData input="-3.141592653589793"
                expectedOutput="-0.00000000000000012246467991473532,
					0,
					-0.00000000000000012246467991473532,
					0"/>
      <testData input="6.283185307179586"
                expectedOutput="-0.00000000000000024492935982947064,
					0,
					-0.00000000000000024492935982947064,
					0"/>
      <testData input="-6.283185307179586"
                expectedOutput="0.00000000000000024492935982947064,
					0,
					0.00000000000000024492935982947064,
					0"/>
      <testData input="2.718281828459045"
                expectedOutput="0.41078129050290885,
					0.410781290503,
					0.41078129050290885,
					0.410781290503"/>
      <testData input="-2.718281828459045"
                expectedOutput="-0.41078129050290885,
					-0.410781290503,
					-0.41078129050290885,
					-0.410781290503"/>
   </testcase>
   <testcase testName="testCosine"
             fieldName="testCosine"
             dataType="Double"
             formula="COS(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="1.0,
					1,
					null,
					null"/>
      <testData input="0" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="1"
                expectedOutput="0.5403023058681398,
					0.540302305868,
					0.5403023058681398,
					0.540302305868"/>
      <testData input="-1"
                expectedOutput="0.5403023058681398,
					0.540302305868,
					0.5403023058681398,
					0.540302305868"/>
      <testData input="3.141592653589793" expectedOutput="-1.0,
					-1,
					-1.0,
					-1"/>
      <testData input="-3.141592653589793" expectedOutput="-1.0,
					-1,
					-1.0,
					-1"/>
      <testData input="6.283185307179586" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="-6.283185307179586" expectedOutput="1.0,
					1,
					1.0,
					1"/>
      <testData input="2.718281828459045"
                expectedOutput="-0.9117339147869651,
					-0.911733914787,
					-0.9117339147869651,
					-0.911733914787"/>
      <testData input="-2.718281828459045"
                expectedOutput="-0.9117339147869651,
					-0.911733914787,
					-0.9117339147869651,
					-0.911733914787"/>
   </testcase>
   <testcase testName="testTangent"
             fieldName="testTangent"
             dataType="Double"
             formula="TAN(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1"
                expectedOutput="1.5574077246549023,
					1.557407724655,
					1.5574077246549023,
					1.557407724655"/>
      <testData input="-1"
                expectedOutput="-1.5574077246549023,
					-1.557407724655,
					-1.5574077246549023,
					-1.557407724655"/>
      <testData input="3.141592653589793"
                expectedOutput="-0.00000000000000012246467991473532,
					0,
					-0.00000000000000012246467991473532,
					0"/>
      <testData input="-3.141592653589793"
                expectedOutput="0.00000000000000012246467991473532,
					0,
					0.00000000000000012246467991473532,
					0"/>
      <testData input="6.283185307179586"
                expectedOutput="-0.00000000000000024492935982947064,
					0,
					-0.00000000000000024492935982947064,
					0"/>
      <testData input="-6.283185307179586"
                expectedOutput="0.00000000000000024492935982947064,
					0,
					0.00000000000000024492935982947064,
					0"/>
      <testData input="2.718281828459045"
                expectedOutput="-0.4505495340698077,
					-0.45054953407,
					-0.4505495340698077,
					-0.45054953407"/>
      <testData input="-2.718281828459045"
                expectedOutput="0.4505495340698077,
					0.45054953407,
					0.4505495340698077,
					0.45054953407"/>
   </testcase>
   <testcase testName="testArcSine"
             fieldName="testArcSine"
             dataType="Double"
             formula="ASIN(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					1.5707963267948966,
					1.570796326795"/>
      <testData input="-1"
                expectedOutput="-1.5707963267948966,
					-1.570796326795,
					-1.5707963267948966,
					-1.570796326795"/>
      <testData input="3.141592653589793"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-3.141592653589793"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="6.283185307179586"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-6.283185307179586"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2.718281828459045"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-2.718281828459045"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testArcCosine"
             fieldName="testArcCosine"
             dataType="Double"
             formula="ACOS(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input=""
                expectedOutput="1.5707963267948966,
					1.570796326795,
					null,
					null"/>
      <testData input="0"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					1.5707963267948966,
					1.570796326795"/>
      <testData input="1" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-1"
                expectedOutput="3.141592653589793,
					3.14159265359,
					3.141592653589793,
					3.14159265359"/>
      <testData input="3.141592653589793"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-3.141592653589793"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="6.283185307179586"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-6.283185307179586"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="2.718281828459045"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
      <testData input="-2.718281828459045"
                expectedOutput="Error: java.lang.NumberFormatException,
					null,
					Error: java.lang.NumberFormatException,
					null"/>
   </testcase>
   <testcase testName="testArcTangent"
             fieldName="testArcTangent"
             dataType="Double"
             formula="ATAN(customnumber1__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <testData input="" expectedOutput="0.0,
					0,
					null,
					null"/>
      <testData input="0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="1"
                expectedOutput="0.7853981633974483,
					0.785398163397,
					0.7853981633974483,
					0.785398163397"/>
      <testData input="-1"
                expectedOutput="-0.7853981633974483,
					-0.785398163397,
					-0.7853981633974483,
					-0.785398163397"/>
      <testData input="3.141592653589793"
                expectedOutput="1.2626272556789115,
					1.262627255679,
					1.2626272556789115,
					1.262627255679"/>
      <testData input="-3.141592653589793"
                expectedOutput="-1.2626272556789115,
					-1.262627255679,
					-1.2626272556789115,
					-1.262627255679"/>
      <testData input="6.283185307179586"
                expectedOutput="1.4129651365067377,
					1.412965136507,
					1.4129651365067377,
					1.412965136507"/>
      <testData input="-6.283185307179586"
                expectedOutput="-1.4129651365067377,
					-1.412965136507,
					-1.4129651365067377,
					-1.412965136507"/>
      <testData input="2.718281828459045"
                expectedOutput="1.2182829050172777,
					1.218282905017,
					1.2182829050172777,
					1.218282905017"/>
      <testData input="-2.718281828459045"
                expectedOutput="-1.2182829050172777,
					-1.218282905017,
					-1.2182829050172777,
					-1.218282905017"/>
   </testcase>
   <testcase testName="testPi"
             fieldName="testPi"
             dataType="Double"
             formula="ROUND(PI(),12)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <testData expectedOutput="3.141592653590,
					3.14159265359,
					3.141592653590,
					3.14159265359"/>
   </testcase>
   <testcase testName="testArcTan2"
             fieldName="testArcTan2"
             dataType="Double"
             formula="ATAN2(customnumber1__c,customnumber2__c)"
             executionPaths="formula,sql,formulaNullAsNull,sqlNullAsNull">
      <referenceField fieldName="customnumber1" dataType="Double"/>
      <referenceField fieldName="customnumber2" dataType="Double"/>
      <testData input=",24"
                expectedOutput="0.0,
					0,
					Error: java.lang.NullPointerException,
					null"/>
      <testData input="0.0,0.0" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.00,0.00" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="0.000,0.000" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input="-1.0,99.0"
                expectedOutput="-0.010100666585321907,
					-0.010100666585,
					-0.010100666585321907,
					-0.010100666585"/>
      <testData input="99, -1"
                expectedOutput="1.5808969933802186,
					1.58089699338,
					1.5808969933802186,
					1.58089699338"/>
      <testData input="-20,-40"
                expectedOutput="-2.677945044588987,
					-2.677945044589,
					-2.677945044588987,
					-2.677945044589"/>
      <testData input="1.1111,1.1111"
                expectedOutput="0.7853981633974483,
					0.785398163397,
					0.7853981633974483,
					0.785398163397"/>
      <testData input="1.11114,0.00000"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					1.5707963267948966,
					1.570796326795"/>
      <testData input="1.11115,0.00000"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					1.5707963267948966,
					1.570796326795"/>
      <testData input="1.111112,0.000043"
                expectedOutput="1.5707576268258758,
					1.570757626826,
					1.5707576268258758,
					1.570757626826"/>
      <testData input="123456789,123456789"
                expectedOutput="0.7853981633974483,
					0.785398163397,
					0.7853981633974483,
					0.785398163397"/>
      <testData input="123456789.123456789,123456789.123456789"
                expectedOutput="0.7853981633974483,
					0.785398163397,
					0.7853981633974483,
					0.785398163397"/>
      <testData input="123456789.123456789,-123456789.123456789"
                expectedOutput="2.356194490192345,
					2.356194490192,
					2.356194490192345,
					2.356194490192"/>
      <testData input="-123456789.123456789,-123456789.123456789"
                expectedOutput="-2.356194490192345,
					-2.356194490192,
					-2.356194490192345,
					-2.356194490192"/>
      <testData input="600, 0.000600"
                expectedOutput="1.5707953267948966,
					1.570795326795,
					1.5707953267948966,
					1.570795326795"/>
      <testData input="600, -600"
                expectedOutput="2.356194490192345,
					2.356194490192,
					2.356194490192345,
					2.356194490192"/>
      <testData input="1.2345, 1.2345"
                expectedOutput="0.7853981633974483,
					0.785398163397,
					0.7853981633974483,
					0.785398163397"/>
      <testData input="1.245, 0"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					1.5707963267948966,
					1.570796326795"/>
      <testData input=","
                expectedOutput="0.0,
					0,
					Error: java.lang.NullPointerException,
					null"/>
      <testData input="1,"
                expectedOutput="1.5707963267948966,
					1.570796326795,
					Error: java.lang.NullPointerException,
					null"/>
      <testData input=",12.123456789"
                expectedOutput="0.0,
					0,
					Error: java.lang.NullPointerException,
					null"/>
      <testData input="1.00596,240"
                expectedOutput="0.004191475453895499,
					0.004191475454,
					0.004191475453895499,
					0.004191475454"/>
      <testData input="0,240" expectedOutput="0.0,
					0,
					0.0,
					0"/>
      <testData input=".0000000000001,1000"
                expectedOutput="0.00000000000000010,
					0,
					0.00000000000000010,
					0"/>
      <testData input=".0000000000001,-1000"
                expectedOutput="3.141592653589793,
					3.14159265359,
					3.141592653589793,
					3.14159265359"/>
   </testcase>
</formula-test>
