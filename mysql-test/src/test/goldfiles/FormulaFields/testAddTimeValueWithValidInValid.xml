<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testAddTimeValueWithValidInValid">
   <testInstance formula="TimeValue(dateString__c) + 7200000" returntype="TimeOnly">
    <SqlOutput nullAsNull="true">
       <Sql>MOD(TIME_TO_SEC(TIME($!s0s!$.dateString__c))+ROUND(MOD(CAST(7200000 AS DOUBLE), 86400000))+86400000,86400000)</Sql>
       <Guard> $!s0s!$.dateString__c NOT REGEXP '^([01]\d|2[0-3]):[0-5][0-9]:[0-5][0-9]\.[0-9][0-9][0-9]$' </Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>MOD(TIME_TO_SEC(TIME($!s0s!$.dateString__c))+ROUND(MOD(CAST(7200000 AS DOUBLE), 86400000))+86400000,86400000)</Sql>
       <Guard> $!s0s!$.dateString__c NOT REGEXP '^([01]\d|2[0-3]):[0-5][0-9]:[0-5][0-9]\.[0-9][0-9][0-9]$' </Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">(context.record.dateString__c!=null)?(new Date(new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).getTime()+new $F.Decimal('7200000').toNumber())):null</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.dateString__c!=null)?(new Date(new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).getTime()+new $F.Decimal('7200000').toNumber())):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(context.record.dateString__c!=null)?(new Date(new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).getTime()+7200000)):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.dateString__c!=null)?(new Date(new Date(new Date(context.record.dateString__c).setUTCFullYear(1970,0,1)).getTime()+7200000)):null</JsOutput>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 12:34:55.666 viaSql null -->
      <inputvalues>[10:34:55.666]</inputvalues>
         <formula>12:34:55.666</formula>
         <sql>null</sql>
         <formulaNullAsNull>12:34:55.666</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: viaFormula 01:56:45.898 does not equal viaSql 02:01:26.205 -->
      <inputvalues>[23:56:45.898]</inputvalues>
         <formula>01:56:45.898</formula>
         <sql>02:01:26.205</sql>
         <formulaNullAsNull>01:56:45.898</formulaNullAsNull>
         <sqlNullAsNull>02:01:26.205</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 03:14:23.345 viaSql null -->
      <inputvalues>[01:14:23.345]</inputvalues>
         <formula>03:14:23.345</formula>
         <sql>null</sql>
         <formulaNullAsNull>03:14:23.345</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[01:66:29.345]</inputvalues>
         <formula>Error: java.lang.RuntimeException</formula>
         <sql>null</sql>
         <formulaNullAsNull>Error: java.lang.RuntimeException</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 02:00:29.345 viaSql null -->
      <inputvalues>[00:00:29.345]</inputvalues>
         <formula>02:00:29.345</formula>
         <sql>null</sql>
         <formulaNullAsNull>02:00:29.345</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 02:00:00.789 viaSql null -->
      <inputvalues>[00:00:00.789]</inputvalues>
         <formula>02:00:00.789</formula>
         <sql>null</sql>
         <formulaNullAsNull>02:00:00.789</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 02:00 viaSql null -->
      <inputvalues>[00:00:00.000]</inputvalues>
         <formula>02:00</formula>
         <sql>null</sql>
         <formulaNullAsNull>02:00</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[24:12:56.123]</inputvalues>
         <formula>Error: java.lang.RuntimeException</formula>
         <sql>null</sql>
         <formulaNullAsNull>Error: java.lang.RuntimeException</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[23:62:56.123]</inputvalues>
         <formula>Error: java.lang.RuntimeException</formula>
         <sql>null</sql>
         <formulaNullAsNull>Error: java.lang.RuntimeException</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[23:52:65.123]</inputvalues>
         <formula>Error: java.lang.RuntimeException</formula>
         <sql>null</sql>
         <formulaNullAsNull>Error: java.lang.RuntimeException</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <inputvalues>[01:14:23.3456]</inputvalues>
         <formula>Error: java.lang.RuntimeException</formula>
         <sql>null</sql>
         <formulaNullAsNull>Error: java.lang.RuntimeException</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: If one is null, they all should be null. viaFormula 02:00:01 viaSql null -->
      <inputvalues>[00:00:01.000]</inputvalues>
         <formula>02:00:01</formula>
         <sql>null</sql>
         <formulaNullAsNull>02:00:01</formulaNullAsNull>
         <sqlNullAsNull>null</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: viaFormula 01:59:59.999 does not equal viaSql 02:01:26.399 -->
      <inputvalues>[23:59:59.999]</inputvalues>
         <formula>01:59:59.999</formula>
         <sql>02:01:26.399</sql>
         <formulaNullAsNull>01:59:59.999</formulaNullAsNull>
         <sqlNullAsNull>02:01:26.399</sqlNullAsNull>
      </result>
   </testInstance>
</testCase>
