<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2004 salesforce.com,Inc. All rights reserved. Company Confidential.

This document contains the inventory of testCase descriptions to be used to
build dynamic ftests using specific data templates.


author: Srikanth Yendluri/Doug Chasman
-->
<formula-test>
     <testcase name="testDateTimeValueWithInvalidString" devName="testDateTimeValueWithInvalidString"
         labelName="testDateTimeValueWithInvalidString" dataType="DateOnly" eval="formula,template"
         scale="2" precision="12"
         code="DATETIMEVALUE(&quot;sample &quot;)">
     </testcase>
      <testcase name="testDateTimeValueWithValidString" devName="testDateTimeValueWithValidString"
         labelName="testDateTimeValueWithValidString" dataType="DateOnly" eval="formula,template"
         scale="2" precision="12"
         code="DATETIMEVALUE(&quot;2005-11-15 17:00:00 &quot;)">
     </testcase>
      <testcase name="testDateTimeValueWithValidInValid" devName="testDateTimeValueWithValidInValid"
         labelName="testDateTimeValueWithValidInValid" dataType="DateOnly" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="DATETIMEVALUE(dateString__c)">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <qatestcase subject="Date time value with various valid and invalid strings. valid strings first and then invalid " description="https://gus.salesforce.com/a07B0000000EriSIAS"
         userStory="Increase SQL limits for formula fields + enhancements - Part 2" hierarchy="Declarative App Builder.Formula Engine.DateTimeValue function"
         priority="Medium" expectedResults=""/>
      </testcase>
      
     <testcase name="testTimeValueWithValidString" devName="testTimeValueWithValidString"
         labelName="testTimeValueWithValidString" dataType="TimeOnly" eval="formula,template"
         scale="2" precision="12"
         code="TIMEVALUE(&quot;10:40:55.666&quot;)">
     </testcase>
     
      <testcase name="testHourWithValidString" devName="testHourWithValidString"
         labelName="testHourWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Hour(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testMinuteWithValidString" devName="testMinuteWithValidString"
         labelName="testMinuteWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Minute(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testSecondWithValidString" devName="testSecondWithValidString"
         labelName="testSecondWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Second(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testMillisecWithValidString" devName="testMillisecWithValidString"
         labelName="testMillisecWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="MilliSecond(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testTimeValueWithValidInValid" devName="testTimeValueWithValidInValid"
         labelName="testTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(DATETIMEVALUE(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
     
     <testcase name="testHourWithAddOperator" devName="testHourWithAddOperator"
         labelName="testHourWithAddOperator" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Hour(TIMEVALUE(&quot;10:40:55.666&quot;)+3600000)">
     </testcase>
     
     <testcase name="testAddTimeValueWithValidInValid" devName="testAddTimeValueWithValidInValid"
         labelName="testAddTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) + 7200000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testAddBigTimeValueWithValidInValid" devName="testAddBigTimeValueWithValidInValid"
         labelName="testAddBigTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) + 93600000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testSubtractTimeValueWithValidInValid" devName="testSubtractTimeValueWithValidInValid"
         labelName="testSubtractTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) - 7200000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testSubtractBigTimeValue" devName="testSubtractBigTimeValue"
         labelName="testSubtractBigTimeValue" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) - 180000000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testTextTimeValueWithValidInValid" devName="testTextTimeValueWithValidInValid"
         labelName="testTextTimeValueWithValidInValid" dataType="Text" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="Text(TimeValue(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase> 
     
     <testcase name="testSecondValueWithValidInValid" devName="testSecondValueWithValidInValid"
         labelName="testSecondValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Second(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
     <testcase name="testMillisecondValueWithValidInValid" devName="testMilliecondValueWithValidInValid"
         labelName="testSecondValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"  labels="extended"
         code="Second(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testMinuteValueWithValidInValid" devName="testMinuteValueWithValidInValid"
         labelName="testMinuteValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Minute(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testHourValueWithValidInValid" devName="testHourValueWithValidInValid"
         labelName="testHourValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Hour(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      <!--  
      <testcase name="testUrlEncodingInWebLinks" devName="testUrlEncodingInWebLinks"
         labelName="testUrlEncodingInWebLinks" dataType="Text" encoding="UTF-8"
         dataFile="weblinksEncoding" eval="formula, template" code="{!IF((customcflag__c), customurl1__c, customurl2__c)}">
         <referencefield devName="customcflag" labelName="customcflag"
             dataType="Boolean"/>
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customurl2" labelName="customurl2"
             dataType="url" length="255"/>
     </testcase>
    -->
     <testcase name="testTextFunctionWithDate" devName="testTextFunctionWithDate" eval="formula,template"
         labelName="testTextFunctionWithDate" dataType="Text" length="130" compareTemplate="formula"
         code="TEXT(DATE(2013,12,31))">
         <!-- VF doesn't support Date function and therefore testing only custom field and template(Custom buttons and links) context -->
     </testcase>
     <testcase name="testTextFunctionWithDateTime" devName="testTextFunctionWithDateTime"
         labelName="testTextFunctionWithDateTime" dataType="Text" length="130" compareTemplate="formula"
         code="TEXT(DATETIMEVALUE('2013-12-31 01:02:03'))">
     </testcase>
     
     <!-- Found BUG ID: 63109 - http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000HfK -->
     <!-- Found BUG ID: 64302 - http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000I04  -->
     <!-- Found BUG ID: 64520 -http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000I3w-->
     <testcase name="testAddSimple" devName="testAddSimple"
         labelName="testAddSimple" dataType="Double"
         dataFile="twoNumericFields" scale="2" labels="math"
         precision="12" code="(customnumber1__c+customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFunctionRight" devName="testFunctionRight"
         labelName="testFunctionRight" dataType="Text"
         dataFile="functionright" length="255"
         code="RIGHT(customtext__c, customnumber__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber" labelName="customnumber"
             dataType="Double" scale="4" precision="14"/>
     </testcase>
     <testcase name="testAddConcatSimple" devName="testAddConcatSimple"
         labelName="testAddConcatSimple" dataType="Text"
         dataFile="ifTextCompareReturnText" length="255"
         code="(customtext1__c+customtext2__c)">
         <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testAddScale" devName="testAddScale"
         labelName="testAddScale" dataType="Double" dataFile="twoNumericFields"
         swap="true" scale="4" precision="14" labels="math"
         code="(customnumber1__c+custompercent1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="14"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="4" precision="14"/>
     </testcase>
     <testcase name="testAddWithCaseExpr" devName="testAddWithCaseExpr" labels="extended"
         labelName="testAddWithCaseExpr" dataType="Double"
         dataFile="addWithCaseExpr" scale="2" precision="12"
         code="(customformula0__c+customcurrency2__c+customformula1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="CASE(customtext1__c,customtext2__c,custompercent1__c,customtext3__c,customcurrency1__c,customnumber1__c)">
             <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
             <referencefield devName="customtext2" labelName="customtext2"
                 dataType="Text" length="255"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customtext3" labelName="customtext3"
                 dataType="Text" length="255"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Percent" scale="2" precision="12"
             code="(custompercent2__c+customnumber2__c)">
             <referencefield devName="custompercent2"
                 labelName="custompercent2" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testAddWithIfExpr" devName="testAddWithIfExpr" labels="extended"
         labelName="testAddWithIfExpr" dataType="Double"
         dataFile="addWithIfExpr" scale="2" precision="12"
         code="(customformula0__c+customformula1__c+customnumber3__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Currency" scale="2" precision="12"
             code="IF(true,customnumber1__c,custompercent1__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customcurrency1__c+customnumber2__c)">
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddWithTextFunc"
         devName="testAddWithTextFunc" labelName="testAddWithTextFunc"
         dataType="Double" dataFile="addWithTextFunc" scale="2" precision="12"
         code="(customnumber1__c+customformula0__c+customnumber2__c+customformula1__c+customformula2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="VALUE(customtext1__c)">
             <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
         </referencefield>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="LEN(customtext2__c)">
             <referencefield devName="customtext2" labelName="customtext2"
                 dataType="Text" length="255"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c*customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testAddWithDateFunc" devName="testAddWithDateFunc" labels="extended"
         labelName="testAddWithDateFunc" dataType="Double"
         dataFile="addWithDateFunc" scale="2" precision="12"
         code="(customformula0__c+customformula1__c+customnumber1__c+customformula2__c+custompercent1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="DAY(customdate1__c)">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="YEAR(customdate2__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="Double" scale="2" precision="12"
             code="MONTH(customdate3__c)">
             <referencefield devName="customdate3" labelName="customdate3"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDate" devName="testAddDate"
         labelName="testAddDate" dataType="DateOnly" dataFile="addDate" swap="true"
         scale="2" precision="12" code="(customdate1__c+customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- AddMonths doesn't work right around leap years with dateonlys in Javascript... -->
     <testcase name="testAddMonths" devName="testAddMonths" labels="extended"
         labelName="testAddMonths" dataType="DateTime" dataFile="addMonths"
         scale="2" precision="12" code="ADDMONTHS(customdate1__c,customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddMonthsDate" devName="testAddMonthsDate" labels="extended"
         labelName="testAddMonthsDate" dataType="DateOnly" dataFile="addMonths"
         scale="2" precision="12" code="ADDMONTHS(customdate1__c,customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testWeekday" devName="testWeekday"
         labelName="testWeekday" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="WEEKDAY(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateWithExpr" devName="testAddDateWithExpr"
         labelName="testAddDateWithExpr" dataType="DateOnly"
         dataFile="addDateWithExpr" scale="2" precision="12" whyIgnoreSql="Date overflow"
         code="(customformula0__c+customnumber1__c+customformula1__c+customcurrency1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateOnly" code="(customdate1__c+custompercent1__c)">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customdate2__c-customdate3__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
             <referencefield devName="customdate3" labelName="customdate3"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTime" devName="testAddDateTime"
         labelName="testAddDateTime" dataType="DateTime" dataFile="addDateTime"
         swap="true" scale="2" precision="12"
         code="(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddMonthsDateTime" devName="testAddMonthsDateTime"
         labelName="testAddMonthsDateTime" dataType="DateTime" dataFile="addDateTime"
         scale="2" precision="12"  whyIgnoreSql="TODO: psql fractional day support differs from java"
         code="ADDMONTHS(customdatetime1__c,customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTimeMinutes" devName="testAddDateTimeMinutes"
         labelName="testAddDateTimeMinutes" dataType="DateTime" dataFile="addDateTimeMinutes"
         swap="false" scale="2" precision="12"
         code="customdatetime1__c+(customnumber1__c/(24*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- this one should be invalid but is currently accepted-->
     <testcase name="testAddDateTimeGivingDate"  labels="extended"
         devName="testAddDateTimeGivingDate"
         labelName="testAddDateTimeGivingDate" dataType="DateOnly"
         dataFile="addDateTime" swap="true" scale="2" precision="12"
         code="(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTimeGivingDateValue" labels="extended"
         devName="testAddDateTimeGivingDateValue"
         labelName="testAddDateTimeGivingDateValue" dataType="DateOnly"
         dataFile="addDateTime" swap="true" scale="2" precision="12"
         code="DateValue(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTimeWithExpr" devName="testAddDateTimeWithExpr"
         labelName="testAddDateTimeWithExpr" dataType="DateTime" compareTemplate="formula"
         dataFile="addDateTimeWithExpr" scale="2" precision="12"  whyIgnoreSql="Date overflow"
         code="(customformula0__c+custompercent2__c+customformula1__c+LEN(customtext1__c))">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateTime"
             code="(customdatetime1__c+custompercent1__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="custompercent2" labelName="custompercent2"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customdatetime2__c-customdatetime3__c)">
             <referencefield devName="customdatetime2"
                 labelName="customdatetime2" dataType="DateTime"/>
             <referencefield devName="customdatetime3"
                 labelName="customdatetime3" dataType="DateTime"/>
         </referencefield>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testSubSimple" devName="testSubSimple"
         labelName="testSubSimple" dataType="Double"
         dataFile="twoNumericFields" scale="2" labels="math"
         precision="12" code="(customnumber1__c-customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSubUnary" devName="testSubUnary"
         labelName="testSubUnary" dataType="Double"
         dataFile="oneNumericField" scale="2" labels="math"
         precision="12" code="-(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSubDate" devName="testSubDate"
         labelName="testSubDate" dataType="Double" dataFile="subDate"
         swap="true" scale="2" precision="12"
         code="(customdate1__c-customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testSubDateTime" devName="testSubDateTime"
         labelName="testSubDateTime" dataType="Double" dataFile="subDateTime"
         swap="true" scale="2" precision="12"
         code="(customdatetime1__c-customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <!-- The high precision numbers in decimal got confused when dividing (since floor/ceiling goes to 3 decimal places).  Low precision has floor issues too -->
     <testcase name="testSubDateTimeCorners1" devName="testSubDateTimeCorners1" accuracyIssue="badDecimal"
         labelName="testSubDateTimeCorners1" dataType="Double" dataFile="subDateTimeCornersData"
         swap="true" scale="2" precision="12"
         code="(floor((customdatetime1__c-customdatetime2__c)*1440*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testSubDateTimeCorners2" devName="testSubDateTimeCorners2" accuracyIssue="floorCeiling"
         labelName="testSubDateTimeCorners2" dataType="Double" dataFile="subDateTimeCornersData"
         swap="true" scale="2" precision="12"
         code="(ceiling((customdatetime1__c-customdatetime2__c)*1440*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testSubDateTimeGivingDateTime" labels="extended"
         devName="testSubDateTimeGivingDate"
         labelName="testSubDateTimeGivingDate" dataType="DateTime"
         dataFile="addDateTime" scale="2" precision="12"
         code="(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- this should be invalid -->
     <testcase name="testSubDateTimeGivingDate" labels="extended"
         devName="testSubDateTimeGivingDate"
         labelName="testSubDateTimeGivingDate" dataType="DateOnly"
         dataFile="addDateTime" scale="2" precision="12"
         code="(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- here the SQL operation seems to be incorrect -->
     <testcase name="testSubDateTimeGivingDateValue" labels="extended"
         devName="testSubDateTimeGivingDateValue"
         labelName="testSubDateTimeGivingDateValue" dataType="DateOnly"
         dataFile="addDateTime" scale="2" precision="12"  compareType="none"
         code="DateValue(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase labels="basic" name="testOriginDateTime"
         devName="testOriginDateTime" labelName="testOriginDateTime"
         dataType="DateTime" scale="2" precision="12"
         code="$System.originDateTime">
     </testcase>
     <testcase name="testDateTimeText" devName="testDateTimeText"
         labelName="testDateTimeText" dataType="Text" dataFile="addDateTime"
         scale="2" precision="12" code="Text(customdatetime1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testMultiplySimple" devName="testMultiplySimple"
         labelName="testMultiplySimple" dataType="Double"
         dataFile="multiplySimple" scale="2"
         precision="12" code="(customcurrency1__c*customcurrency2__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMultiplyWithExpr"
         devName="testMultiplyWithExpr" labelName="testMultiplyWithExpr"
         dataType="Currency" dataFile="multiplyWithExpr" scale="2" labels="math"
         precision="12" code="(customformula0__c*customnumber1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c*customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMultiplyWithDivideExpr" labels="extended"
         devName="testMultiplyWithDivideExpr"
         labelName="testMultiplyWithDivideExpr" dataType="Currency"
         dataFile="multiplyWithDivideExpr" scale="2" precision="12"
         code="(customformula0__c*customnumber1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="3" precision="12"
             code="(custompercent1__c/customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- this is same as above, except for scale of the nested formula field.
         This version results in different value in merge templates because of rounding of
         the operand, which doesn't occur in pure formula field case.
         So compare turned off here -->
     <testcase name="testMultiplyWithDivideExpr2" labels="extended"
         devName="testMultiplyWithDivideExpr2"
         labelName="testMultiplyWithDivideExpr2" dataType="Currency"
         dataFile="multiplyWithDivideExpr" scale="2" precision="12"
         code="(customformula0__c*customnumber1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c/customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTE: TESTCASES For IF function() and comparision operators -->
     <testcase name="testIfTextCompareNotEqualReturnNum"
         devName="testIfTextCompareNotEqualReturnNum"
         labelName="testIfTextCompareNotEqualReturnNum" dataType="Currency"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customtext1__c&lt;&gt;customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>


     <!-- FOUND: BUG ID: 63679 - http://bugforce/bug/bugDetail.jsp?id=100000000000HpF -->
     <testcase name="testIfTextCompareEqualReturnNum"
         devName="testIfTextCompareEqualReturnNum"
         labelName="testIfTextCompareEqualReturnNum" dataType="Percent"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customtext1__c=customtext2__c),customnumber1__c,customcurrency1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnDate" labels="extended"
         devName="testIfTextCompareEqualReturnDate"
         labelName="testIfTextCompareEqualReturnDate" dataType="DateOnly"
         dataFile="ifTextCompareReturnDate" scale="2" precision="12"
         code="IF((customtext1__c=customemail1__c),customdate1__c,customformula1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateOnly" code="(customdate2__c+customnumber1__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnDateTime" labels="extended"
         devName="testIfTextCompareEqualReturnDateTime"
         labelName="testIfTextCompareEqualReturnDateTime" dataType="DateTime"
         dataFile="ifTextCompareReturnDateTime" scale="2" precision="12"
         code="IF((customphone1__c=customphone2__c),customformula1__c,customdatetime2__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customphone2" labelName="customphone2"
             dataType="phone" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateTime"
             code="(customdatetime1__c-customcurrency1__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnText"
         devName="testIfTextCompareEqualReturnText"
         labelName="testIfTextCompareEqualReturnText" dataType="Text"
         dataFile="ifTextCompareReturnText" scale="2" precision="12"
         code="IF((customtext1__c=customtext2__c), &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfUsesTrue" devName="testIfUsesTrue"
         labelName="testIfUsesTrue" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="IF(true,1,0)"/>
     <testcase name="testIfUsesFalse" devName="testIfUsesFalse"
         labelName="testIfUsesFalse" dataType="Percent"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="IF(false,1,0)"/>


     <!-- Bug 118791 http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000XJu -->
     <testcase name="testIfIf" devName="testIfIf" labelName="testIfIf"
         dataType="Text" scale="2" dataFile="ifTextCompareReturnText"
         precision="12"
         code="if( if (customtext1__c=customtext2__c, true, false),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNullThenIf" devName="testIfNullThenIf" labels="extended"
         labelName="testIfNullThenIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, null, false),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNullElseIf" devName="testIfNullElseIf" labels="extended"
         labelName="testIfNullElseIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, true, null),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <!-- really dumb case... -->
     <testcase name="testIfNullNullIf" devName="testIfNullNullIf" labels="extended"
         labelName="testIfNullNullIf" dataType="Text" scale="2" whyIgnoreSql="Postgres incorrectly converts null to text for number comparison"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, null, null) = 0,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNotNull" devName="testIfNotNull" labels="extended"
         labelName="testIfNotNull" dataType="Text" scale="2" precision="12"
         code="if (not(null), &quot;True&quot;, &quot;False&quot;)">
     </testcase>
     <testcase name="testIfAndNull" devName="testIfAndNull" labels="extended"
         labelName="testIfAndNull" dataType="Text" scale="2" precision="12"
         dataFile="singleBooleanFieldData"
         code="IF(AND(null,customcheckbox1__c),&quot;T&quot;,&quot;F&quot;) &amp; IF(AND(customcheckbox1__c,null),&quot;T&quot;,&quot;F&quot;)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
     </testcase>
     <testcase name="testIfOrNull" devName="testIfOrNull" labels="extended"
         labelName="testIfOrNull" dataType="Text" scale="2" precision="12"
         dataFile="singleBooleanFieldData"
         code="IF(OR(null,customcheckbox1__c),&quot;T&quot;,&quot;F&quot;) &amp; IF(OR(customcheckbox1__c,null),&quot;T&quot;,&quot;F&quot;)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
     </testcase>
     <testcase name="testIfNumIf" devName="testIfNumIf" labelName="testIfNumIf" labels="extended"
         dataType="Text" scale="2" dataFile="ifTextCompareReturnText"
         precision="12"
         code="if( if (customtext1__c=customtext2__c, 1, 2) = 1,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNumNullIf" devName="testIfNumNullIf" labels="extended"
         labelName="testIfNumNullIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, 1, null) = 1,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>

     <testcase name="testIfNumCompareGreater" labels="math"
         devName="testIfNumCompareGreater" labelName="testIfNumCompareGreater"
         dataType="Double" dataFile="ifCompare" scale="2" precision="12"
         code="IF((customnumber1__c&gt;customcurrency1__c),customcurrency2__c,customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfNumCompareGreaterOrEqual" labels="extended"
         devName="testIfNumCompareGreaterOrEqual"
         labelName="testIfNumCompareGreaterOrEqual" dataType="Currency"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&gt;=customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- null == null in Javascript, and fixing that for low precision JS isn't a priority right now.  -->
     <testcase name="testIfNumCompareEqual" labels="extended" compareTemplate="formula"
         devName="testIfNumCompareEqual" labelName="testIfNumCompareEqual" accuracyIssue="needHp"
         dataType="Text" dataFile="ifCompare" scale="2" precision="12"
         code="IF((customnumber1__c=customcurrency1__c),customtext1__c,customphone1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
     </testcase>
     <testcase name="testIfNumCompareLess" labels="extended"
         devName="testIfNumCompareLess" labelName="testIfNumCompareLess"
         dataType="Percent" dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfNumCompareLessOrEqual" labels="extended"
         devName="testIfNumCompareLessOrEqual"
         labelName="testIfNumCompareLessOrEqual" dataType="Currency"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;=customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- Same issue as CompareEqual with number equality when using low precision numbers -->
     <testcase name="testIfNumCompareNotEqual" labels="extended"
         devName="testIfNumCompareNotEqual"
         labelName="testIfNumCompareNotEqual" dataType="Double"  accuracyIssue="needHp"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;&gt;customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- FOUND: BUG ID: 63777 - http://bugforce/bug/bugDetail.jsp?id=100000000000Hqp    -->
     <testcase name="testIfContainsFunc"
         devName="testIfContainsFunc" labelName="testIfContainsFunc"
         dataType="Double" dataFile="ifCompare" scale="2" precision="12"
         code="IF(CONTAINS(customtext1__c,customtext2__c),ABS(customnumber1__c),FLOOR(customnumber2__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDate" devName="testDate"
         labelName="testDate" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateConstVarVar" devName="testDateConstVarVar"
         labelName="testDateConstVarVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,customnumber2__c,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateVarConstVar" devName="testDateVarConstVar"
         labelName="testDateVarConstVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,12,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateVarVarConst" devName="testDateVarVarConst"
         labelName="testDateVarVarConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,customnumber2__c,28)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateVarConstConst" devName="testDateVarConstConst"
         labelName="testDateVarConstConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,11,25)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateConstVarConst" devName="testDateConstVarConst"
         labelName="testDateConstVarConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,customnumber2__c,28)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateConstConstVar" devName="testDateConstConstVar"
         labelName="testDateConstConstVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,11,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateLeapYear" devName="testDateLeapYear"
         labelName="testDateLeapYear" dataType="DateOnly" dataFile="functiondate-days"
         scale="2" precision="12"
         code="DATE(2012,2,day__c)">
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateNonLeapYear" devName="testDateNonLeapYear"
         labelName="testDateNonLeapYear" dataType="DateOnly" dataFile="functiondate-days"
         scale="2" precision="12"
         code="DATE(2011,2,day__c)">
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateLeapYear2" devName="testDateLeapYear2"
         labelName="testDateLeapYear2" dataType="DateOnly" dataFile="functiondate-months"
         scale="2" precision="12"
         code="DATE(2012,month__c,29)">
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateNonLeapYear2" devName="testDateNonLeapYear2"
         labelName="testDateNonLeapYear2" dataType="DateOnly" dataFile="functiondate-months"
         scale="2" precision="12"
         code="DATE(2011,month__c,29)">
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateLeapConstantMonth" devName="testDateLeapConstantMonth"
         labelName="testDateLeapConstantMonth" dataType="DateOnly" dataFile="functiondate-yearday"
         scale="2" precision="12"
         code="DATE(year__c,2,day__c)">
         <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateLeapConstantDay" devName="testDateLeapConstantDay"
         labelName="testDateLeapConstantDay" dataType="DateOnly" dataFile="functiondate-yearmonths"
         scale="2" precision="12"
         code="DATE(year__c,month__c,29)">
          <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateAllConstants" devName="testDateAllConstants"
         labelName="testDateAllConstants" dataType="DateOnly"
         scale="2" precision="12"
         code="DATE(2012,2,29)">
     </testcase>
    <testcase name="testDateAllConstantsNonLeap" devName="testDateAllConstantsNonLeap"
         labelName="testDateAllConstantsNonLeap" dataType="DateOnly"
         scale="2" precision="12"
         code="DATE(2011,2,29)">
     </testcase>
     <testcase name="testDateVariableYear" devName="testDateVariableYear"
         labelName="testDateVariableYear" dataType="DateOnly" dataFile="functiondate-years"
         scale="2" precision="12"
         code="DATE(year__c,2,29)">
         <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <testcase name="testIfANDFunc" devName="testIfANDFunc"
         labelName="testIfANDFunc" dataType="DateOnly" dataFile="ifAndOrFunc"
         scale="2" precision="12"
         code="IF(AND(customcheckbox1__c,customcheckbox2__c),customformula1__c,DATE(customnumber1__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateOnly"
             code="IF(customcheckbox3__c,customdate1__c,customdate2__c)">
             <referencefield devName="customcheckbox3"
                 labelName="customcheckbox3" dataType="Boolean" length="255"/>
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfORFunc" devName="testIfORFunc"
         labelName="testIfORFunc" dataType="DateOnly" dataFile="ifAndOrFunc"
         scale="2" precision="12"
         code="IF(OR(customcheckbox1__c,customcheckbox2__c),IF(customcheckbox3__c,customdate1__c,customdate2__c),customformula2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testBooleanAND" devName="testBooleanAND"
         labelName="testBooleanAND" dataType="Boolean" dataFile="ifAndOrFunc"
         code="AND(customformula1__c,OR(customcheckbox1__c,customcheckbox2__c))">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testBooleanEq" devName="testBooleanEq"
         labelName="testBooleanEq" dataType="Boolean" dataFile="ifAndOrFunc"
         code="customformula1__c = OR(customcheckbox1__c,customcheckbox2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testBooleanNeq" devName="testBooleanNeq"
         labelName="testBooleanNeq" dataType="Boolean" dataFile="ifAndOrFunc"
         code="customformula1__c != OR(customcheckbox1__c,customcheckbox2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testIfDateCompareGreaterThan" labels="extended" compareTemplate="formula"
         devName="testIfDateCompareGreaterThan"
         labelName="testIfDateCompareGreaterThan" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&gt;customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <!-- FOUND: BUG ID: 63962 - http://bugforce/bug/bugDetail.jsp?id=100000000000Htw -->
     <testcase name="testIfDateTimeCompareGreaterThan" labels="extended" compareTemplate="formula"
         devName="testIfDateTimeCompareGreaterThan"
         labelName="testIfDateTimeCompareGreaterThan" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c&gt;customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>

     <!-- NOTES: TESTCASES for Contains() function -->
     <testcase name="testIfContainsUsesText" devName="testIfContainsUsesText"
         labelName="testIfContainsUsesText" dataType="Currency"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesTextArea" labels="extended"
         devName="testIfContainsUsesTextArea"
         labelName="testIfContainsUsesTextArea" dataType="Double"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesEmail" devName="testIfContainsUsesEmail"
         labelName="testIfContainsUsesEmail" dataType="Percent"
         dataFile="ifContainsUsesEmail" scale="2" precision="12"
         code="IF(CONTAINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesPhone" devName="testIfContainsUsesPhone" labels="extended"
         labelName="testIfContainsUsesPhone" dataType="Currency"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>

        <!-- NOTES: TESTCASES for Begins() function -->
        <testcase name="testIfBeginsUsesText" devName="testIfBeginsUsesText"
         labelName="testIfBeginsUsesText" dataType="Currency"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customtext2" labelName="customtext2"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesTextArea" labels="extended"
            devName="testIfBeginsUsesTextArea"
            labelName="testIfBeginsUsesTextArea" dataType="Double"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)">
            <referencefield devName="customtextarea1" labelName="customtextarea1"
                dataType="textarea" length="255"/>           
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customcurrency1" labelName="customcurrency1"
                dataType="Currency" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesEmail" devName="testIfBeginsUsesEmail"
            labelName="testIfBeginsUsesEmail" dataType="Percent"
            dataFile="ifBeginsUsesEmail" scale="2" precision="12"
            code="IF(BEGINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)">
            <referencefield devName="customemail1" labelName="customemail1"
                dataType="email" length="255"/>
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="customcurrency1" labelName="customcurrency1"
                dataType="Currency" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesPhone" devName="testIfBeginsUsesPhone" labels="extended"
            labelName="testIfBeginsUsesPhone" dataType="Currency"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)">
            <referencefield devName="customphone1" labelName="customphone1"
                dataType="phone" length="255"/>
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>

     <!-- NOTES: TESTCASES for Substitute() function -->
     <testcase name="testSimpleSubstitute"
         devName="testSimpleSubstitute" labelName="testSimpleSubstitute"
         dataType="Text" dataFile="simpleSubstitute" length="1024"
         code="SUBSTITUTE(customtext1__c,customtext2__c,customtext3__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customtext3" labelName="customtext3"
             dataType="Text" length="255"/>
     </testcase>

     <!-- Test Text(num) see bug 120969 -->
     <testcase name="testTextNum" devName="testTextNum"
         labelName="testTextNum" dataType="Text" dataFile="singleNumericField"
         code="Text(customnumber1__c)" length='500' compareType="number">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="1" precision="15"/>
     </testcase>
     <testcase name="testTextNum2" devName="testTextNum2"
         labelName="testTextNum2" dataType="Text" dataFile="singleNumericField"
         code="Text(customnumber1__c)" length='500' compareType="number">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="0" precision="15"/>
     </testcase>


     <!-- NOTES: TESTCASES FOR ABS() FUNCTION -->
     <testcase  name="testAbsCurr" devName="testAbsCurr" labels="extended"
         labelName="testAbsCurr" dataType="Currency" dataFile="absData"
         scale="2" precision="12" code="ABS(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsSwapTypes" devName="testAbsSwapTypes" labels="extended"
         labelName="testAbsSwapTypes" dataType="Double" dataFile="absData"
         swapTypes="true" scale="2" precision="12" code="ABS(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesExp" devName="testAbsUsesExp" labels="math"
         labelName="testAbsUsesExp" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="ABS(EXP(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesCeiling" devName="testAbsUsesCeiling" labels="extended"
         labelName="testAbsUsesCeiling" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="ABS(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesFloor" devName="testAbsUsesFloor" labels="extended"
         labelName="testAbsUsesFloor" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="ABS(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesAbs" devName="testAbsUsesAbs" labels="extended"
         labelName="testAbsUsesAbs" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="ABS(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesLog" devName="testAbsUsesLog" labels="extended"
         labelName="testAbsUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="ABS(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesLn" devName="testAbsUsesLn" labels="extended"
         labelName="testAbsUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="ABS(LN(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesSqrt" devName="testAbsUsesSqrt" labels="extended"
         labelName="testAbsUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="ABS(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesRound" devName="testAbsUsesRound" labels="extended"
         labelName="testAbsUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="ABS(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesTrunc" devName="testAbsUsesRound" labels="extended"
         labelName="testAbsUsesTrunc" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="ABS(TRUNC(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesMOD" devName="testAbsUsesMOD" labels="extended"
         labelName="testAbsUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="ABS(MOD(customnumber1__c,customnumber2__c))" compareType="approximate">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesIf" devName="testAbsUsesIf" labels="extended"
         labelName="testAbsUsesIf" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="ABS(IF(true,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesCase" devName="testAbsUsesCase" labels="extended"
         labelName="testAbsUsesCase" dataType="Double"
         dataFile="caseCompareDateReturnNum" scale="2" precision="12"
         code="ABS(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesLen" devName="testAbsUsesLen" labels="extended"
         labelName="testAbsUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="ABS(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testAbsUsesValue" devName="testAbsUsesValue" labels="extended"
         labelName="testAbsUsesValue" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="ABS(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testAbsUsesMinus" devName="testAbsUsesMinus" labels="extended"
         labelName="testAbsUsesMinus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="ABS((custompercent1__c-customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAbsUsesPlus" devName="testAbsUsesPlus" labels="extended"
         labelName="testAbsUsesPlus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="ABS((custompercent1__c+customnumber1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR ROUND() FUNCTION -->
     <!-- simple testcases with pos and neg versions of same things....-->
     <testcase name="testRoundSimple"
         devName="testRoundSimple" labelName="testRoundSimple" labels="math"
         dataType="Double" dataFile="roundData2" scale="4"
         precision="12" code="ROUND(customnumber1__c,customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="4" precision="12"/>
     </testcase>
     <testcase name="testRoundSwapTypes"
         devName="testRoundSwapTypes" labelName="testRoundSwapTypes" labels="math"
         dataType="Double" dataFile="roundData" scale="2"
         precision="12" code="ROUND(customnumber1__c,customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesExp" devName="testRoundUsesExp" labels="math"
         labelName="testRoundUsesExp" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="ROUND(EXP(customnumber1__c),CEILING(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesFloorAbs" devName="testRoundUsesFloorAbs" labels="math"
         labelName="testRoundUsesFloorAbs" dataType="Double"
         dataFile="roundData" scale="2" precision="12"
         code="ROUND(FLOOR(customnumber1__c),ABS(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesLog" devName="testRoundUsesLog" labels="math"
         labelName="testRoundUsesLog" dataType="Double"
         dataFile="roundUsesLogLn" scale="2" precision="12"
         code="ROUND(LOG(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesLn" devName="testRoundUsesLn" labels="math"
         labelName="testRoundUsesLn" dataType="Double"
         dataFile="roundUsesLogLn" scale="2" precision="12"
         code="ROUND(LN(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesSqrt" devName="testRoundUsesSqrt" labels="math"
         labelName="testRoundUsesSqrt" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="ROUND(SQRT(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesRoundMinus" devName="testRoundUsesRoundMinus" labels="math"
         labelName="testRoundUsesRoundMinus" dataType="Double" accuracyIssue="needHp"
         dataFile="fourNumericData" scale="2" precision="12"
         code="ROUND(ROUND(custompercent1__c,customnumber1__c),customformula1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customcurrency1__c-customcurrency2__c)">
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency2"
                 labelName="customcurrency2" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
     </testcase>
     <!-- Huge negative rounding is an error without HP -->
     <testcase name="testRoundUsesIf" devName="testRoundUsesIf" labels="math"
         labelName="testRoundUsesIf" dataType="Double" dataFile="ifUsesInfix"
         scale="2" precision="12" accuracyIssue="needHp"
         code="ROUND(IF(customcheckbox1__c,customnumber1__c,customnumber2__c),customnumber3__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testRoundUsesCase" devName="testRoundUsesCase"
         labelName="testRoundUsesCase" dataType="Double"
         dataFile="caseUsesCase" scale="2" precision="12"
         code="ROUND(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c),customformula1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="CASE(customdatetime1__c,customdatetime2__c,customnumber4__c,customdatetime3__c,customnumber5__c,customnumber6__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="customdatetime2"
                 labelName="customdatetime2" dataType="DateTime"/>
             <referencefield devName="customnumber4" labelName="customnumber4"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customdatetime3"
                 labelName="customdatetime3" dataType="DateTime"/>
             <referencefield devName="customnumber5" labelName="customnumber5"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber6" labelName="customnumber6"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <!-- NOTES: TESTCASES FOR TRUNC() FUNCTION -->
     <!-- simple testcases with pos and neg versions of same things....-->
     <testcase name="testTruncSimple"
         devName="testTruncSimple" labelName="testTruncSimple" labels="math"
         dataType="Double" dataFile="roundData2" scale="4"
         precision="12" code="TRUNC(customnumber1__c,customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="4" precision="12"/>
     </testcase>
     <testcase name="testTruncSwapTypes"
         devName="testTruncSwapTypes" labelName="testTruncSwapTypes" labels="math"
         dataType="Double" dataFile="roundData" scale="2"
         precision="12" code="TRUNC(customnumber1__c,customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesExp" devName="testTruncUsesExp" labels="math"
         labelName="testTruncUsesExp" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="TRUNC(EXP(customnumber1__c),CEILING(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesFloorAbs" devName="testTruncUsesFloorAbs" labels="math"
         labelName="testTruncUsesFloorAbs" dataType="Double"
         dataFile="roundData" scale="2" precision="12"
         code="TRUNC(FLOOR(customnumber1__c),ABS(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesLog" devName="testTruncUsesLog" labels="math"
         labelName="testTruncUsesLog" dataType="Double"
         dataFile="roundUsesLogLn" scale="2" precision="12"
         code="TRUNC(LOG(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesLn" devName="testTruncUsesLn" labels="math"
         labelName="testTruncUsesLn" dataType="Double"
         dataFile="roundUsesLogLn" scale="2" precision="12"
         code="TRUNC(LN(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesSqrt" devName="testTruncUsesSqrt" labels="math"
         labelName="testTruncUsesSqrt" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="TRUNC(SQRT(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testTruncUsesTruncMinus" devName="testTruncUsesTruncMinus" labels="math"
         labelName="testTruncUsesTruncMinus" dataType="Double" accuracyIssue="needHp"
         dataFile="fourNumericData" scale="2" precision="12"
         code="TRUNC(TRUNC(custompercent1__c,customnumber1__c),customformula1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customcurrency1__c-customcurrency2__c)">
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency2"
                 labelName="customcurrency2" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
     </testcase>
     <!-- Huge negative truncing is an error without HP -->
     <testcase name="testTruncUsesIf" devName="testTruncUsesIf" labels="math"
         labelName="testTruncUsesIf" dataType="Double" dataFile="ifUsesInfix"
         scale="2" precision="12" accuracyIssue="needHp"
         code="TRUNC(IF(customcheckbox1__c,customnumber1__c,customnumber2__c),customnumber3__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>


     <!-- NOTES: TESTCASES FOR SQRT() FUNCTION -->
     <testcase name="testSqrtSwap" devName="testSqrtSwap" labels="extended"
         labelName="testSqrtSwap" dataType="Double" dataFile="sqrtData"
         swapTypes="true" scale="2" precision="12"
         code="SQRT(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>


     <!-- Found BUG ID: 64427 - http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000I2G -->
     <testcase name="testSqrtUsesExp" devName="testSqrtUsesExp" labels="extended"
         labelName="testSqrtUsesExp" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="SQRT(EXP(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesFloor" devName="testSqrtUsesFloor" labels="extended"
         labelName="testSqrtUsesFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="SQRT(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesLog" devName="testSqrtUsesLog" labels="extended"
         labelName="testSqrtUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="ROUND(SQRT(LOG(customnumber1__c)),15)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesCeil" devName="testSqrtUsesCeil" labels="extended"
         labelName="testSqrtUsesCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="SQRT(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesSqrt" devName="testSqrtUsesSqrt" labels="extended"
         labelName="testSqrtUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="SQRT(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesMinus" devName="testSqrtUsesMinus" labels="extended"
         labelName="testSqrtUsesMinus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="SQRT((customcurrency1__c-customcurrency2__c))">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testSqrtUsesPlus" devName="testSqrtUsesPlus" labels="math"
         labelName="testSqrtUsesPlus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="SQRT(customformula0__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(customnumber1__c+customnumber2__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testSqrtUsesCase" devName="testSqrtUsesCase" labels="extended"
         labelName="testSqrtUsesCase" dataType="Double"
         dataFile="caseDateNumber" scale="2" precision="12"
         code="SQRT(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR LEN() FUNCTION -->
     <testcase name="testLenSimple" devName="testLenSimple"
         labelName="testLenSimple" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="LEN(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLenUsesText" devName="testLenUsesText"
         labelName="testLenUsesText" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="LEN(Text(customnumber1__c))" compareType="none">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <testcase name="testTrim" devName="testTrim"
         labelName="testTrim" dataType="Text"
         dataFile="singleTextFieldData" 
         code="TRIM(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR EXP() FUNCTION -->
     <testcase name="testExpSimple" devName="testExpSimple" labels="math"
         labelName="testExpSimple" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesAbs" devName="testExpUsesAbs" labels="math"
         labelName="testExpUsesAbs" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesCeil" devName="testExpUsesCeil" labels="math"
         labelName="testExpUsesCeil" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesFloor" devName="testExpUsesFloor" labels="math"
         labelName="testExpUsesFloor" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesLog" devName="testExpUsesLog" labels="math"
         labelName="testExpUsesLog" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesLn" devName="testExpUsesLn" labels="math"
         labelName="testExpUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="ROUND(EXP(LN(customnumber1__c)), 0)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesSqrt" devName="testExpUsesSqrt" labels="math"
         labelName="testExpUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="EXP(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesRound" devName="testExpUsesRound" labels="extended"
         labelName="testExpUsesRound" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesMOD" devName="testExpUsesMOD" labels="extended"
         labelName="testExpUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="EXP(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesIf" devName="testExpUsesIf" labels="extended"
         labelName="testExpUsesIf" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP(IF(true,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesLen" devName="testExpUsesLen" labels="extended"
         labelName="testExpUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="EXP(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testExpUsesValue" devName="testExpUsesValue" labels="math"
         labelName="testExpUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testExpUsesMinus" devName="testExpUsesMinus" labels="math"
         labelName="testExpUsesMinus" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP((custompercent1__c-customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesPlus" devName="testExpUsesPlus" labels="math"
         labelName="testExpUsesPlus" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12" code="EXP(customformula0__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c+customnumber1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <!-- NOTES: TESTCASES FOR FLOOR() FUNCTION -->
     <testcase name="testFloorSimple" devName="testFloorSimple" labels="math"
         labelName="testFloorSimple" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="FLOOR(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMFloorSimple" devName="testMFloorSimple" labels="math"
         labelName="testMFloorSimple" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="MFLOOR(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorRound" devName="testFloorRound" labels="math" whyIgnoreSql="Psql precision differences"
         labelName="testFloorRound" dataType="Double" dataFile="floorCeilRoundData"
         scale="2" precision="12" code="FLOOR((customnumber1__c/customnumber2__c)*customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMFloorRound" devName="testMFloorRound" whyIgnoreSql="Psql precision differences"
         labelName="testMFloorRound" dataType="Double" dataFile="floorCeilRoundData"
         scale="2" precision="12" code="MFLOOR((customnumber1__c/customnumber2__c)*customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>        <testcase name="testFloorUsesAbs" devName="testFloorUsesAbs"
         labelName="testFloorUsesAbs" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="FLOOR(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesCeil" devName="testFloorUsesCeil" labels="math"
         labelName="testFloorUsesCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="FLOOR(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesFloor" devName="testFloorUsesFloor" labels="extended"
         labelName="testFloorUsesFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="FLOOR(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesLog" devName="testFloorUsesLog" labels="extended"
         labelName="testFloorUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="FLOOR(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesLn" devName="testFloorUsesLn" labels="extended"
         labelName="testFloorUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="FLOOR(LN(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesSqrt" devName="testFloorUsesSqrt" labels="extended"
         labelName="testFloorUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="FLOOR(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesRound" devName="testFloorUsesRound" labels="extended"
         labelName="testFloorUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="FLOOR(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesMOD" devName="testFloorUsesMOD" labels="extended"
         labelName="testFloorUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="FLOOR(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesIf" devName="testFloorUsesIf" labels="extended"
         labelName="testFloorUsesIf" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="FLOOR(IF(true,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesCase" devName="testFloorUsesCase" labels="extended"
         labelName="testFloorUsesCase" dataType="Double"
         dataFile="caseCompareDateReturnNum" scale="2" precision="12"
         code="FLOOR(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testFloorUsesLen" devName="testFloorUsesLen" labels="extended"
         labelName="testFloorUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="FLOOR(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testFloorUsesValue" devName="testFloorUsesValue" labels="extended"
         labelName="testFloorUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="FLOOR(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testFloorUsesMultiply" devName="testFloorUsesMultiply" labels="extended"
         labelName="testFloorUsesMultiply" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="FLOOR(customformula0__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c*customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testFloorUsesMinus" devName="testFloorUsesMinus" labels="extended"
         labelName="testFloorUsesMinus" dataType="Double" accuracyIssue="needHp"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="FLOOR((custompercent1__c-customnumber1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR CEIL() FUNCTION -->
     <testcase name="testCeilSimple" devName="testCeilSimple" labels="math"
         labelName="testCeilSimple" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="CEILING(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMCeilSimple" devName="testMCeilSimple" labels="math"
         labelName="testMCeilSimple" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="MCEILING(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilRound" devName="testCeilRound" labels="math" whyIgnoreSql="Psql precision differences"
         labelName="testCeilRound" dataType="Double" dataFile="floorCeilRoundData"
         scale="2" precision="12" code="CEILING((customnumber1__c/customnumber2__c)*customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMCeilRound" devName="testMCeilRound" labels="math" whyIgnoreSql="Psql precision differences"
         labelName="testMCeilRound" dataType="Double" dataFile="floorCeilRoundData"
         scale="2" precision="12" code="MCEILING((customnumber1__c/customnumber2__c)*customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesAbs" devName="testCeilUsesAbs" labels="math"
         labelName="testCeilUsesAbs" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="CEILING(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesCeil" devName="testCeilUsesCeil" labels="extended"
         labelName="testCeilUsesCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="CEILING(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesFloor" devName="testCeilUsesFloor" labels="extended"
         labelName="testCeilUsesFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="CEILING(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMCeilUsesMFloor" devName="testMCeilUsesMFloor" labels="extended"
         labelName="testMCeilUsesMFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="MCEILING(MFLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesLog" devName="testCeilUsesLog" labels="extended"
         labelName="testCeilUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="CEILING(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesLn" devName="testCeilUsesLn" labels="extended"
         labelName="testCeilUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="CEILING(LN(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesSqrt" devName="testCeilUsesSqrt" labels="extended"
         labelName="testCeilUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="CEILING(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesRound" devName="testCeilUsesRound" labels="extended"
         labelName="testCeilUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="CEILING(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testMCeilUsesRound" devName="testMCeilUsesRound" labels="extended"
         labelName="testMCeilUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="MCEILING(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesMOD" devName="testCeilUsesMOD" labels="extended"
         labelName="testCeilUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="CEILING(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesIf" devName="testCeilUsesIf" labels="extended"
         labelName="testCeilUsesIf" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="CEILING(IF(true,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesCase" devName="testCeilUsesCase" labels="extended"
         labelName="testCeilUsesCase" dataType="Double"
         dataFile="caseCompareDateReturnNum" scale="2" precision="12"
         code="CEILING(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testCeilUsesLen" devName="testCeilUsesLen" labels="extended"
         labelName="testCeilUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="CEILING(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testCeilUsesValue" devName="testCeilUsesValue" labels="extended"
         labelName="testCeilUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="CEILING(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testCeilUsesMultiply" devName="testCeilUsesMultiply"
         labelName="testCeilUsesMultiply" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="CEILING((custompercent1__c*customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <!-- Need high precision for this one due to .0000000001 -->
     <testcase name="testCeilUsesPlus" devName="testCeilUsesPlus" labels="math"
         labelName="testCeilUsesPlus" dataType="Double" accuracyIssue="needHp"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="CEILING((custompercent1__c+customnumber1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR MOD() FUNCTION -->
     <testcase name="testModSwapTypes" devName="testModSwapTypes" labels="math"
         labelName="testModSwapTypes" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="MOD(customnumber1__c,customnumber2__c)" compareType="approximate" >
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesExpCeil" devName="testModUsesExpCeil" labels="math"
         labelName="testModUsesExpCeil" dataType="Double"
         dataFile="modUsesExp" scale="2" precision="12"
         code="MOD(EXP(customnumber1__c),CEILING(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesFloorAbs" devName="testModUsesFloorAbs" labels="extended"
         labelName="testModUsesFloorAbs" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="MOD(FLOOR(customnumber1__c),ABS(customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesLog" devName="testModUsesLog" labels="extended"
         labelName="testModUsesLog" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="MOD(LOG(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesLn" devName="testModUsesLn" labels="extended"
         labelName="testModUsesLn" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="MOD(LN(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesSqrt" devName="testModUsesSqrt" labels="extended"
         labelName="testModUsesSqrt" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="MOD(SQRT(customnumber1__c),customnumber2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- Huge negative rounding is an error without HP -->
     <testcase name="testModUsesRoundPlus" devName="testModUsesRoundPlus" labels="extended"
         labelName="testModUsesRoundPlus" dataType="Double" accuracyIssue="needHp"
         dataFile="fourNumericData" scale="2" precision="12"
         code="MOD(ROUND(custompercent1__c,customnumber1__c),(customcurrency1__c+customcurrency2__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesIf" devName="testModUsesIf" labels="extended"
         labelName="testModUsesIf" dataType="Double" dataFile="ifUsesInfix"
         scale="2" precision="12"
         code="MOD(IF(customcheckbox1__c,customnumber1__c,customnumber2__c),customnumber3__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testModUsesCase" devName="testModUsesCase" labels="extended"
         labelName="testModUsesCase" dataType="Double" dataFile="caseUsesCase"
         scale="2" precision="12"
         code="MOD(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c),customformula1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="CASE(customdatetime1__c,customdatetime2__c,customnumber4__c,customdatetime3__c,customnumber5__c,customnumber6__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="customdatetime2"
                 labelName="customdatetime2" dataType="DateTime"/>
             <referencefield devName="customnumber4" labelName="customnumber4"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customdatetime3"
                 labelName="customdatetime3" dataType="DateTime"/>
             <referencefield devName="customnumber5" labelName="customnumber5"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber6" labelName="customnumber6"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testModRounding" devName="testModRounding" labels="extended"
         labelName="testModRounding" dataType="Double"
         dataFile="testModRounding" scale="2" precision="12"
         code="MOD(customnumber1__c * 10000, 2)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="6" precision="12"/>
     </testcase>

     <testcase name="testModRoundingNoScale" devName="testModRounding" labels="extended"
         labelName="testModRounding" dataType="Double"
         dataFile="testModRounding" scale="0" precision="12"
         code="MOD(customnumber1__c * 10000, 2)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="6" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR LOG() FUNCTION -->
     <testcase name="testLogSimple" devName="testLogSimple" labels="math"
         labelName="testLogSimple" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="Log(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesAbs" devName="testLogUsesAbs" labels="math"
         labelName="testLogUsesAbs" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="Log(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesCeil" devName="testLogUsesCeil" labels="math"
         labelName="testLogUsesCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="Log(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesMCeil" devName="testLogUsesMCeil" labels="math"
         labelName="testLogUsesMCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="Log(MCEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesFloor" devName="testLogUsesFloor" labels="extended"
         labelName="testLogUsesFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="Log(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesLog" devName="testLogUsesLog" labels="extended"
         labelName="testLogUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="Log(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesLn" devName="testLogUsesLn" labels="extended"
         labelName="testLogUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="Log(LN(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesSqrt" devName="testLogUsesSqrt" labels="extended"
         labelName="testLogUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="Log(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesRound" devName="testLogUsesRound" labels="extended"
         labelName="testLogUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="Log(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesMOD" devName="testLogUsesMOD" labels="extended"
         labelName="testLogUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="Log(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesIf" devName="testLogUsesIf" labels="extended"
         labelName="testLogUsesIf" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="Log(IF(false,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesCase" devName="testLogUsesCase" labels="extended"
         labelName="testLogUsesCase" dataType="Double"
         dataFile="caseCompareDateReturnNum" scale="2" precision="12"
         code="Log(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesLen" devName="testLogUsesLen" labels="extended"
         labelName="testLogUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="Log(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLogUsesValue" devName="testLogUsesValue" labels="extended"
         labelName="testLogUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="Log(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLogUsesMinus" devName="testLogUsesMinus" labels="extended"
         labelName="testLogUsesMinus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="Log((custompercent1__c-customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLogUsesMultiply" devName="testLogUsesMultiply" labels="extended"
         labelName="testLogUsesMultiply" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="Log((custompercent1__c*customnumber1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR LN() FUNCTION -->
     <testcase name="testLNSimple" devName="testLNSimple" labels="math"
         labelName="testLNSimple" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="LN(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesAbs" devName="testLNUsesAbs" labels="extended"
         labelName="testLNUsesAbs" dataType="Double" dataFile="absData"
         scale="2" precision="12" code="LN(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesCeil" devName="testLNUsesCeil" labels="extended"
         labelName="testLNUsesCeil" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="LN(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesFloor" devName="testLNUsesFloor" labels="extended"
         labelName="testLNUsesFloor" dataType="Double" dataFile="fcData"
         scale="2" precision="12" code="LN(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesLog" devName="testLNUsesLog" labels="extended"
         labelName="testLNUsesLog" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="LN(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesLn" devName="testLNUsesLn" labels="math"
         labelName="testLNUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="LN(LN(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesSqrt" devName="testLNUsesSqrt" labels="extended"
         labelName="testLNUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="LN(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesRound" devName="testLNUsesRound" labels="extended"
         labelName="testLNUsesRound" dataType="Double" dataFile="roundData"
         scale="2" precision="12"
         code="LN(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesMOD" devName="testLNUsesMOD" labels="math"
         labelName="testLNUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="LN(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesIf" devName="testLNUsesIf" labels="math"
         labelName="testLNUsesIf" dataType="Double" dataFile="twoNumericFields"
         scale="2" precision="12"
         code="LN(IF(false,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesCase" devName="testLNUsesCase" labels="math"
         labelName="testLNUsesCase" dataType="Double"
         dataFile="caseCompareDateReturnNum" scale="2" precision="12"
         code="LN(CASE(customdate1__c,customdate2__c,customnumber1__c,customdate3__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customdate3" labelName="customdate3"
             dataType="DateOnly"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesLen" devName="testLNUsesLen" labels="math"
         labelName="testLNUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="LN(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLNUsesValue" devName="testLNUsesValue" labels="math"
         labelName="testLNUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="LN(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLNUsesPlus" devName="testLNUsesPlus" labels="extended"
         labelName="testLNUsesPlus" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12" compareTemplate="formula"
         code="LN((custompercent1__c+customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testLNUsesMultiply" devName="testLNUsesMultiply" labels="extended"
         labelName="testLNUsesMultiply" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="LN((custompercent1__c*customnumber1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- Tests for BUG:  -->
     <testcase name="testBigDivide" devName="testBigDivide" labels="math"
         labelName="testBigDivide" dataType="Double" dataFile="BigDivide"
         scale="2" precision="15"
         code="((customnumber1__c/customnumber2__c)*customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBigDivideWithFunc" labels="math"
         devName="testBigDivideWithFunc" labelName="testBigDivideWithFunc"
         dataType="Double" dataFile="threeNumericFields" scale="2"
         precision="12"
         code="( ( (customnumber1__c * customnumber2__c )/(value(text(customnumber2__c )) ^ customnumber2__c ) )*(customnumber3__c ^ customnumber3__c ))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="18"/>
     </testcase>

     <!-- Test Cases for NULLVALUE() FUNCTION -->
     <testcase name="testNVLWithNum" devName="testNVLWithNum"
         labelName="testNVLWithNum" dataType="Currency" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(customnumber1__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithCur" devName="testNVLWithCur" labels="extended"
         labelName="testNVLWithCur" dataType="Percent" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(customcurrency1__c,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithPer" devName="testNVLWithPer" labels="extended"
         labelName="testNVLWithPer" dataType="Double" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(custompercent1__c,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithText" devName="testNVLWithText"
         labelName="testNVLWithText" dataType="Text" dataFile="NVLText" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customtext1__c,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithTextArea"
         devName="testNVLWithTextArea" labelName="testNVLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="NULLVALUE(customtextarea1__c,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testNVLWithPhone" devName="testNVLWithPhone"
         labelName="testNVLWithPhone" dataType="Text" dataFile="NVLPhone" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customphone1__c,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithEmail" devName="testNVLWithEmail" labels="extended"
         labelName="testNVLWithEmail" dataType="Text" dataFile="NVLEmail" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customemail1__c,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithUrl" devName="testNVLWithUrl" labels="extended"
         labelName="testNVLWithUrl" dataType="Text" dataFile="NVLUrl" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customurl1__c,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithDate" devName="testNVLWithDate"
         labelName="testNVLWithDate" dataType="DateOnly" dataFile="TwoDateFields"
         length="1300" code="NULLVALUE(customdate1__c,customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testNVLWithDateTime"
         devName="testNVLWithDateTime" labelName="testNVLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="NULLVALUE(customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testNVLWithError" devName="testNVLWithError"
         labelName="testNVLWithError" dataType="Double"
         dataFile="threeNumericFields" scale="2" precision="18"
         code="NULLVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- Test Cases for BLANKVALUE() FUNCTION -->
     <testcase name="testBVLWithNum" devName="testBVLWithNum"
         labelName="testBVLWithNum" dataType="Currency" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(customnumber1__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithCur" devName="testBVLWithCur" labels="extended"
         labelName="testBVLWithCur" dataType="Percent" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(customcurrency1__c,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithPer" devName="testBVLWithPer" labels="extended"
         labelName="testBVLWithPer" dataType="Double" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(custompercent1__c,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithText" devName="testBVLWithText"
         labelName="testBVLWithText" dataType="Text" dataFile="NVLText"
         length="1300" code="BLANKVALUE(customtext1__c,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithTextArea"
         devName="testBVLWithTextArea" labelName="testBVLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300"
         code="BLANKVALUE(customtextarea1__c,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testBVLWithPhone" devName="testBVLWithPhone"
         labelName="testBVLWithPhone" dataType="Text" dataFile="NVLPhone"
         length="1300" code="BLANKVALUE(customphone1__c,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithEmail" devName="testBVLWithEmail" labels="extended"
         labelName="testBVLWithEmail" dataType="Text" dataFile="NVLEmail"
         length="1300" code="BLANKVALUE(customemail1__c,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithUrl" devName="testBVLWithUrl" compareContezts="formula" labels="extended"
         labelName="testBVLWithUrl" dataType="Text" dataFile="NVLUrl"
         length="1300" code="BLANKVALUE(customurl1__c,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithDate" devName="testBVLWithDate"
         labelName="testBVLWithDate" dataType="DateOnly" dataFile="TwoDateFields"
         length="1300" code="BLANKVALUE(customdate1__c,customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testBVLWithDateFormulaNull" devName="testBVLWithDate"
         labelName="testBVLWithDate" dataType="DateOnly"
         length="1300" code="BLANKVALUE(customformula0__c,date(2000,1,1))">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateOnly" length="255"
             code="NULL"/>
     </testcase>
     <testcase name="testBVLWithDateTime"
         devName="testBVLWithDateTime" labelName="testBVLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="BLANKVALUE(customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testBVLWithError" devName="testBVLWithError"
         labelName="testBVLWithError" dataType="Double"
         dataFile="threeNumericFields" scale="2" precision="18"
         code="BLANKVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <testcase name="testIfDateTimeCompareEqual"
         devName="testIfDateTimeCompareEqual"
         labelName="testIfDateTimeCompareEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareEqual"
         devName="testIfDateCompareEqual" labelName="testIfDateCompareEqual"
         dataType="DateTime" dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareLessThan" compareTemplate="formula"
         devName="testIfDateTimeCompareLessThan"
         labelName="testIfDateTimeCompareLessThan" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &lt;customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareLessThan" compareTemplate="formula"
         devName="testIfDateCompareLessThan"
         labelName="testIfDateCompareLessThan" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&lt;customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareLessThanOrEqual" compareTemplate="formula"
         devName="testIfDateTimeCompareLessThanOrEqual"
         labelName="testIfDateTimeCompareLessThanOrEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &lt;=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareLessThanOrEqual" compareTemplate="formula"
         devName="testIfDateCompareLessThanOrEqual"
         labelName="testIfDateCompareLessThanOrEqual" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&lt;=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareGtThanOrEqual" labels="extended" compareTemplate="formula"
         devName="testIfDateTimeCompareGtThanOrEqual"
         labelName="testIfDateTimeCompareGtThanOrEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &gt;=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareGreaterThanOrEqual" labels="extended" compareTemplate="formula"
         devName="testIfDateCompareGreaterThanOrEqual"
         labelName="testIfDateCompareGreaterThanOrEqual" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&gt;=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <!-- TESTCASES FOR COMMENTS /* */ IN FORMULAS -->
     <testcase name="testCommentsInsideFormula"
         devName="testCommentsInsideFormula" labelName="testCommentsInsideFormula"
         dataType="Double" dataFile="dummyRow" scale="2" precision="12"
         code="/* comment */ IF /* comment */(YEAR(TODAY()) = 2009 /* comment */, 0,0) /** comment **/">
     </testcase>

     <!-- TESTCASES for ISNULL() FUNCTION -->
     <testcase name="testISNULLWithNum"
         devName="testISNULLWithNum" labelName="testISNULLWithNum"
         dataType="Currency" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(customnumber1__c), 0,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithCur"
         devName="testISNULLWithCur" labelName="testISNULLWithCur"
         dataType="Percent" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(customcurrency1__c),0,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithPer"
         devName="testISNULLWithPer" labelName="testISNULLWithPer"
         dataType="Double" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(custompercent1__c), 0,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithText"
         devName="testISNULLWithText" labelName="testISNULLWithText"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="if(isnull(customtext1__c),&quot;NULL&quot;,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithTextArea"
         devName="testISNULLWithTextArea" labelName="testISNULLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="if(isnull(customtextarea1__c),null,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testISNULLWithPhone"
         devName="testISNULLWithPhone" labelName="testISNULLWithPhone"
         dataType="Text" dataFile="NVLPhone" length="1300" compareTemplate="visualforce"
         code="if(isnull(customphone1__c),null,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithEmail"
         devName="testISNULLWithEmail" labelName="testISNULLWithEmail"
         dataType="Text" dataFile="NVLEmail" length="1300" compareTemplate="visualforce"
         code="if(isnull(customemail1__c),null,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithUrl"
         devName="testISNULLWithUrl" labelName="testISNULLWithUrl"
         dataType="Text" dataFile="NVLUrl" length="1300" compareTemplate="visualforce"
         code="if(isnull(customurl1__c),null,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithDate"
         devName="testISNULLWithDate" labelName="testISNULLWithDate"
         dataType="DateOnly" dataFile="TwoDateFields" length="1300"
         code="if(isnull(customdate1__c),customdate2__c,null)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testISNULLWithDateTime"
         devName="testISNULLWithDateTime" labelName="testISNULLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="if(isnull(customdatetime1__c),customdatetime2__c,null)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testISNULLWithError"
         devName="testISNULLWithError" labelName="testISNULLWithError"
         dataType="Double" dataFile="threeNumericFields" scale="2"
         precision="18"
         code="if(isnull(customnumber1__c/customnumber2__c),null,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- TESTCASES for ISBLANK() FUNCTION -->
     <testcase name="testISBLANKWithNum"
         devName="testISBLANKWithNum" labelName="testISBLANKWithNum"
         dataType="Currency" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(customnumber1__c), 0,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithCur"
         devName="testISBLANKWithCur" labelName="testISBLANKWithCur"
         dataType="Percent" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(customcurrency1__c),0,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithPer"
         devName="testISBLANKWithPer" labelName="testISBLANKWithPer"
         dataType="Double" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(custompercent1__c), 0,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithText"
         devName="testISBLANKWithText" labelName="testISBLANKWithText"
         dataType="Text" dataFile="NVLText" length="1300"
         code="if(isblank(customtext1__c),&quot;NULL&quot;,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithTextArea"
         devName="testISBLANKWithTextArea" labelName="testISBLANKWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300"
         code="if(isblank(customtextarea1__c),null,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithPhone"
         devName="testISBLANKWithPhone" labelName="testISBLANKWithPhone"
         dataType="Text" dataFile="NVLPhone" length="1300"
         code="if(isblank(customphone1__c),null,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithEmail"
         devName="testISBLANKWithEmail" labelName="testISBLANKWithEmail"
         dataType="Text" dataFile="NVLEmail" length="1300"
         code="if(isblank(customemail1__c),null,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithUrl"
         devName="testISBLANKWithUrl" labelName="testISBLANKWithUrl"
         dataType="Text" dataFile="NVLUrl" length="1300"
         code="if(isblank(customurl1__c),null,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>

     <testcase name="testISBLANKWithDate"
         devName="testISBLANKWithDate" labelName="testISBLANKWithDate"
         dataType="DateOnly" dataFile="TwoDateFields" length="1300"
         code="if(isblank(customdate1__c),customdate2__c,null)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithDateTime"
         devName="testISBLANKWithDateTime" labelName="testISBLANKWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="if(isblank(customdatetime1__c),customdatetime2__c,null)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testISBLANKWithError"
         devName="testISBLANKWithError" labelName="testISBLANKWithError"
         dataType="Double" dataFile="threeNumericFields" scale="2"
         precision="18"
         code="if(isblank(customnumber1__c/customnumber2__c),null,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- TESTCASES for DATEVALUE() FUNCTION -->
     <testcase name="testDATEVALUEWithString"
         devName="testDATEVALUEWithString" labelName="testDATEVALUEWithString"
         dataType="DateOnly" dataFile="singleTextFieldDateData"
         code="datevalue(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <!-- TESTCASES for VALUE() -->
     <!--  TODO SLT: Decimal fails on '+1' -->
     <testcase name="testVALUE" devName="testVALUE"
         labelName="testVALUE" dataType="Double" scale="2" dataFile="valueFunctionData"
         code="value(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <!-- TESTCASES for ISNUMBER() -->
     <!-- TODO SLT: Ignore because isNan('&dash;&dash;1234') is wrong in Nashorn.. Note the double dash is two - -->
     <testcase name="testISNUMBER" devName="testISNUMBER"
         labelName="testISNUMBER" dataType="Double" scale="2" dataFile="valueFunctionData"
         code="if(ISNUMBER(customtext1__c),1,0)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <!-- TESTCASE for Bug 85686: IF(blah, NULL, NULL) with return datatype of Date or DateTime -->
     <testcase name="testIfReturningNullForDateType"
         devName="testIfReturningNullForDateType"
         labelName="testIfReturningNullForDateType" dataType="DateOnly"
         code="if(true, if(false, null, null), TODAY())"/>
     <testcase name="testIfReturningNullForDateTimeType"
         devName="testIfReturningNullForDateTimeType"
         labelName="testIfReturningNullForDateTimeType" dataType="DateTime"
         code="if(true, if(false, null, null), NOW())"/>


     <!-- TESTCASE for Bug 89122: IF(blah, NULL, NULL) with return datatype of Number -->
     <testcase name="testIfReturningNullForNumericType"
         devName="testIfReturningNullForNumericType"
         labelName="testIfReturningNullForNumericType" dataType="Double" scale="2"
         code="if(true, if(false, null, null), 999)"/>

     <!-- TESTCASE for Bug W-600480: Short-circuiting with null terms-->
     <testcase name="testShortCircuitingWithNullTerms" compareTemplate="formula"
         devName="testShortCircuitingWithNullTerms"
         labelName="testShortCircuitingWithNullTerms" dataType="Text" dataFile = "dateAndNumber"
         code="if(and(customdate1__c >date(2000,1,1), value(customtext1__c )>0),'True','False')">
         <referencefield devName="customdate1" labelName="customdate1" dataType="DateOnly"/>
         <referencefield devName="customtext1" labelName="customtext1" dataType="Text" length="255"/>
     </testcase>

     <!-- simple exponentiation test cases -->
     <testcase labels="math" name="testExponentiationOperator"
         devName="testExponentiationOperator"
         labelName="testExponentiationOperator" dataType="Double"
         dataFile="twoNumericFields" precision="15" scale="3"
         code="customNumber1__c ^ customNumber2__c">
         <referencefield devName="customNumber1" labelName="customNumber1"
             dataType="Double" precision="13" scale="3"/>
         <referencefield devName="customNumber2" labelName="customNumber2"
             dataType="Double" precision="15" scale="3"/>
     </testcase>

     <!-- no operations -->
     <testcase labels="basic" name="testSimpleRef" devName="testSimpleRef" labelName="testSimpleRef"
            dataType="Double" code="customNumber1__c" dataFile="singleNumericField" precision="16" scale="2" >
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="3" precision="15" />
     </testcase>
     <testcase name="testSimpleRefText" devName="testSimpleRefText" labelName="testSimpleRefText"
            dataType="Text" code="customText1__c" dataFile="singleTextFieldData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>

     <testcase name="testLpad" devName="testLpad" labelName="testLpad"
            dataType="Text" code="lpad(customText1__c,customNumber1__c)" dataFile="padData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
     </testcase>
     <testcase name="testRpad" devName="testRpad" labelName="testRpad"
            dataType="Text" code="rpad(customText1__c,customNumber1__c)" dataFile="padData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
     </testcase>
     <testcase name="testLpad2" devName="testLpad2" labelName="testLpad2"
            dataType="Text" code="lpad(customText1__c,customNumber1__c,customText2__c)" dataFile="padData2" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
         <referencefield devName="customText2" labelName="customText2" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testRpad2" devName="testRpad2" labelName="testRpad2"
            dataType="Text" code="rpad(customText1__c,customNumber1__c,customText2__c)" dataFile="padData2" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testUpper" labels="basic" devName="testUpper" labelName="testUpper" whyIgnoreSql="Postgres ICU support"
            dataType="Text" code="upper(customText1__c)" dataFile="upperCaseData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <!-- Nashorn doesn't do toLocaleLowerCase/toLocaleUpperCase correctly.  It also creates a combining dotted mark for İ -->
     <testcase name="testLower" labels="basic" devName="testLower" labelName="testLower" whyIgnoreSql="Postgres ICU support"
            dataType="Text" code="lower(customText1__c)" dataFile="upperCaseData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testUpperLocale" devName="testUpperLocale" labelName="testUpperLocale" whyIgnoreSql="Postgres ICU support"
            dataType="Text" code="upper(customText1__c,customText2__c)" dataFile="upperCaseLocaleData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testLowerLocale" devName="testLowerLocale" labelName="testLowerLocale" whyIgnoreSql="Postgres ICU support"
            dataType="Text" code="lower(customText1__c,customText2__c)" dataFile="upperCaseLocaleData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>

     <testcase name="testConstDoubleNegation" devName="testConstDoubleNegation" labels="math"
         labelName="testConstDoubleNegation" dataType="Double"
         dataFile="oneNumericField" scale="2"
         precision="12" code="customnumber__c -- 2 + customnumber__c - (2-4) + customnumber__c - (-2)">
         <referencefield devName="customnumber" labelName="customnumber"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <testcase name="testFindOnText" devName="testFindOnText"
         labelName="testFindOnText" dataType="Double"
         scale="2" precision="12"
         dataFile="findOnText" code="FIND(&quot;Text&quot;, customText1__c)">
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testFindOnTextWithIndex" devName="testFindOnTextWithIndex" labelName="testFindOnTextWithIndex"
         dataType="Double" code="FIND(customText1__c, customText2__c, customNumber__c)" dataFile="findOnTextWithIndex" scale="2" precision="12">
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber" labelName="customNumber" dataType="Double" scale="2" precision="12" />
     </testcase>
    
    <testcase name="testAddHoursWithTwoCustFields" devName="testAddHoursWithTwoCustFields"
        labelName="testAddHoursWithTwoCustFields" dataType="TimeOnly" eval="formula,template" dataFile="timeAndHours"
        scale="2" precision="12"
        code="TimeValue(timeString__c) + customnumber1__c">
        <referencefield devName="timeString" labelName="timeString" dataType="Text" length="50"/>
        <referencefield devName="customnumber1" labelName="customnumber1" dataType="Double" scale="2" precision="12"/>
    </testcase>
    <testcase name="testSubtractTwoTimeFields" devName="testSubtractTwoTimeFields"
        labelName="testSubtractTwoTimeFields" dataType="Double" eval="formula,template" dataFile="twoTimeFields"
        scale="2" precision="12"
        code="TimeValue(timeString2__c) - TimeValue(timeString1__c)">
        <referencefield devName="timeString1" labelName="timeString1" dataType="Text" length="50"/>
        <referencefield devName="timeString2" labelName="timeString2" dataType="Text" length="50"/>
    </testcase>

    <testcase name="testDistance" devName="testDistance"
        labelName="testDistance" dataType="Double" eval="formula,template" dataFile="twoLatLong"
        scale="2" precision="12" labels="extended"
        code="DISTANCE(GEOLOCATION(customNumber1__c,customNumber2__c),GEOLOCATION(33.37088,-122.61715),'mi')">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
         <referencefield devName="customNumber2" labelName="customNumber2" dataType="Double" scale="2" precision="12" />
      </testcase>
    <testcase name="testFormatCurrency" devName="testFormatCurrency"
        labelName="testFormatCurrency" dataType="Text" dataFile="formatCurrency" labels="extended"
        code="FORMATCURRENCY(isocode__c, customNumber1__c)">
        <referencefield devName="isocode" labelName="timeString" dataType="Text" length="50"/>
         <referencefield devName="customNumber1" labelName="customNumber2" dataType="Double" scale="2" precision="12" />
      </testcase>
</formula-test>
