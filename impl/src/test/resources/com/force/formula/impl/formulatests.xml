<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2004 salesforce.com,Inc. All rights reserved. Company Confidential.

This document contains the inventory of testCase descriptions to be used to
build dynamic ftests using specific data templates.


author: Srikanth Yendluri/Doug Chasman
-->
<formula-test>
    <!--  Include math tests from the separate file -->
     <include href="formulatests-math.xml"/>

     <testcase name="testDateTimeValueWithInvalidString" devName="testDateTimeValueWithInvalidString"
         labelName="testDateTimeValueWithInvalidString" dataType="DateOnly" eval="formula,template"
         scale="2" precision="12"
         code="DATETIMEVALUE(&quot;sample &quot;)">
     </testcase>
      <testcase name="testDateTimeValueWithValidString" devName="testDateTimeValueWithValidString"
         labelName="testDateTimeValueWithValidString" dataType="DateOnly" eval="formula,template"
         scale="2" precision="12"
         code="DATETIMEVALUE(&quot;2005-11-15 17:00:00 &quot;)">
     </testcase>
      <testcase name="testDateTimeValueWithValidInValid" devName="testDateTimeValueWithValidInValid"
         labelName="testDateTimeValueWithValidInValid" dataType="DateOnly" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="DATETIMEVALUE(dateString__c)">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <qatestcase subject="Date time value with various valid and invalid strings. valid strings first and then invalid " description="https://gus.salesforce.com/a07B0000000EriSIAS"
         userStory="Increase SQL limits for formula fields + enhancements - Part 2" hierarchy="Declarative App Builder.Formula Engine.DateTimeValue function"
         priority="Medium" expectedResults=""/>
      </testcase>
      
     <testcase name="testTimeValueWithValidString" devName="testTimeValueWithValidString"
         labelName="testTimeValueWithValidString" dataType="TimeOnly" eval="formula,template"
         scale="2" precision="12"
         code="TIMEVALUE(&quot;10:40:55.666&quot;)">
     </testcase>
     
      <testcase name="testHourWithValidString" devName="testHourWithValidString"
         labelName="testHourWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Hour(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testMinuteWithValidString" devName="testMinuteWithValidString"
         labelName="testMinuteWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Minute(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testSecondWithValidString" devName="testSecondWithValidString"
         labelName="testSecondWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Second(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
     
     <testcase name="testMillisecWithValidString" devName="testMillisecWithValidString"
         labelName="testMillisecWithValidString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="MilliSecond(TIMEVALUE(&quot;10:40:55.666&quot;))">
     </testcase>
          
     <testcase name="testMillisecWithValidDateTimeString" devName="testMillisecWithValidDateTimeString"
         labelName="testMillisecWithValidDateTimeString" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="MilliSecond(TIMEVALUE(&quot;2015-03-17 17:00:00&quot;))">
     </testcase>
     
     <testcase name="testTimeValueWithValidInValid" devName="testTimeValueWithValidInValid"
         labelName="testTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(DATETIMEVALUE(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="16">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
     
     <testcase name="testHourWithAddOperator" devName="testHourWithAddOperator"
         labelName="testHourWithAddOperator" dataType="Double" eval="formula,template"
         scale="2" precision="12"
         code="Hour(TIMEVALUE(&quot;10:40:55.666&quot;)+3600000)">
     </testcase>
     
     <testcase name="testAddTimeValueWithValidInValid" devName="testAddTimeValueWithValidInValid"
         labelName="testAddTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) + 7200000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="4">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
      <testcase name="testAddBigTimeValueWithValidInValid" devName="testAddBigTimeValueWithValidInValid"
         labelName="testAddBigTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) + 93600000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="4">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
      <testcase name="testSubtractTimeValueWithValidInValid" devName="testSubtractTimeValueWithValidInValid"
         labelName="testSubtractTimeValueWithValidInValid" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) - 7200000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testSubtractBigTimeValue" devName="testSubtractBigTimeValue"
         labelName="testSubtractBigTimeValue" dataType="TimeOnly" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="TimeValue(dateString__c) - 180000000">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
      
      <testcase name="testTextTimeValueWithValidInValid" devName="testTextTimeValueWithValidInValid"
         labelName="testTextTimeValueWithValidInValid" dataType="Text" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="Text(TimeValue(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase> 
     
     <testcase name="testSecondValueWithValidInValid" devName="testSecondValueWithValidInValid"
         labelName="testSecondValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Second(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="16">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
     <testcase name="testMillisecondValueWithValidInValid" devName="testMilliecondValueWithValidInValid"
         labelName="testSecondValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"  labels="extended"
         code="MilliSecond(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="20">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
      <testcase name="testMinuteValueWithValidInValid" devName="testMinuteValueWithValidInValid"
         labelName="testMinuteValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Minute(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="16">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
      <testcase name="testHourValueWithValidInValid" devName="testHourValueWithValidInValid"
         labelName="testHourValueWithValidInValid" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="Hour(TimeValue(DATETIMEVALUE(dateString__c)))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="16">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      
      <testcase name="testUnixTimestampWithDateTime" devName="testUnixTimestampWithDateTime" labels="extended"
         labelName="testUnixTimestampWithDateTime" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="UnixTimestamp(DATETIMEVALUE(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" numFailures="16">datetimevalue is strict in sqlite</whyIgnoreSql>             
      </testcase>
      <testcase name="testFromUnixTime" devName="testFromUnixTime" labels="extended"
         labelName="testFromUnixTime" dataType="DateTime" eval="formula,template" dataFile="unixtimestamp"
         scale="3" precision="15" 
         code="FromUnixTime(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="mysql,mariadb" numFailures="4">no negative timestamp support</whyIgnoreSql>
      </testcase>
      <testcase name="testUnixTimestampWithTime" devName="testUnixTimestampWithTime" labels="extended"
         labelName="testUnixTimestampWithTime" dataType="Double" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         scale="2" precision="12"
         code="UnixTimestamp(TimeValue(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
      </testcase>
            
      <testcase name="testIsoWeekWithDateTime" devName="testIsoWeekWithDateTime" labels="extended"
         labelName="testIsoWeekWithDateTime" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="ISOWEEK(DATETIMEVALUE(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" unimplemented="true"/>             
      </testcase>        
      <testcase name="testIsoWeekWithDate" devName="testIsoWeekWithDate" labels="extended"
         labelName="testIsoWeekWithDate" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="ISOWEEK(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="sqlite3" unimplemented="true"/>             
     </testcase>     
      <testcase name="testIsoYearWithDateTime" devName="testIsoYearWithDateTime" labels="extended"
         labelName="testIsoYearWithDateTime" dataType="Double" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         scale="2" precision="12"
         code="ISOYEAR(DATETIMEVALUE(dateString__c))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="sqlite3" unimplemented="true"/>             
      </testcase>        
      <testcase name="testIsoYearWithDate" devName="testIsoYearWithDate" labels="extended"
         labelName="testIsoYearWithDate" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="ISOYEAR(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="sqlite3" unimplemented="true"/>             
     </testcase>                   
      <!--  
      <testcase name="testUrlEncodingInWebLinks" devName="testUrlEncodingInWebLinks"
         labelName="testUrlEncodingInWebLinks" dataType="Text" encoding="UTF-8"
         dataFile="weblinksEncoding" eval="formula, template" code="{!IF((customcflag__c), customurl1__c, customurl2__c)}">
         <referencefield devName="customcflag" labelName="customcflag"
             dataType="Boolean"/>
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customurl2" labelName="customurl2"
             dataType="url" length="255"/>
     </testcase>
    -->
     <testcase name="testTextFunctionWithDate" devName="testTextFunctionWithDate" eval="formula,template"
         labelName="testTextFunctionWithDate" dataType="Text" length="130" compareTemplate="formula"
         code="TEXT(DATE(2013,12,31))">
         <!-- VF doesn't support Date function and therefore testing only custom field and template(Custom buttons and links) context -->
     </testcase>

    <testcase name="testTextFunctionWithCustomDate" devName="testTextFunctionWithCustomDate" eval="formula,template"
              labelName="testTextFunctionWithCustomDate" dataType="Text" length="130" compareTemplate="formula"
              code="TEXT(customdate1__c)">
        <referencefield devName="customdate1" labelName="customdate1"
                        dataType="DateOnly"/>
    </testcase>

     <testcase name="testTextFunctionWithDateTime" devName="testTextFunctionWithDateTime"
         labelName="testTextFunctionWithDateTime" dataType="Text" length="130" compareTemplate="formula"
         code="TEXT(DATETIMEVALUE('2013-12-31 01:02:03'))">
     </testcase>

     <testcase name="testFunctionRight" devName="testFunctionRight"
         labelName="testFunctionRight" dataType="Text"
         dataFile="functionright" length="255"
         code="RIGHT(customtext__c, customnumber__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber" labelName="customnumber"
             dataType="Double" scale="4" precision="14"/>
         <whyIgnoreSql db="spanner,trino,sqlite3" unimplemented="true">RIGHT() isn't in these dbs, and the SUBSTR version has very different semantics</whyIgnoreSql>
     </testcase>
     <testcase name="testFunctionLeft" devName="testFunctionLeft"
         labelName="testFunctionLeft" dataType="Text"
         dataFile="functionright" length="255"
         code="LEFT(customtext__c, customnumber__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber" labelName="customnumber"
             dataType="Double" scale="4" precision="14"/>
     </testcase>
     <testcase name="testAddConcatSimple" devName="testAddConcatSimple"
         labelName="testAddConcatSimple" dataType="Text"
         dataFile="ifTextCompareReturnText" length="255"
         code="(customtext1__c+customtext2__c)">
         <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testAddWithCaseExpr" devName="testAddWithCaseExpr" labels="extended"
         labelName="testAddWithCaseExpr" dataType="Double"
         dataFile="addWithCaseExpr" scale="2" precision="12"
         code="(customformula0__c+customcurrency2__c+customformula1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="CASE(customtext1__c,customtext2__c,custompercent1__c,customtext3__c,customcurrency1__c,customnumber1__c)">
             <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
             <referencefield devName="customtext2" labelName="customtext2"
                 dataType="Text" length="255"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customtext3" labelName="customtext3"
                 dataType="Text" length="255"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Percent" scale="2" precision="12"
             code="(custompercent2__c+customnumber2__c)">
             <referencefield devName="custompercent2"
                 labelName="custompercent2" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testAddWithIfExpr" devName="testAddWithIfExpr" labels="extended"
         labelName="testAddWithIfExpr" dataType="Double"
         dataFile="addWithIfExpr" scale="2" precision="12"
         code="(customformula0__c+customformula1__c+customnumber3__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Currency" scale="2" precision="12"
             code="IF(true,customnumber1__c,custompercent1__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customcurrency1__c+customnumber2__c)">
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddWithTextFunc"
         devName="testAddWithTextFunc" labelName="testAddWithTextFunc"
         dataType="Double" dataFile="addWithTextFunc" scale="2" precision="12"
         code="(customnumber1__c+customformula0__c+customnumber2__c+customformula1__c+customformula2__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="VALUE(customtext1__c)">
             <referencefield devName="customtext1" labelName="customtext1"
                 dataType="Text" length="255"/>
         </referencefield>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="LEN(customtext2__c)">
             <referencefield devName="customtext2" labelName="customtext2"
                 dataType="Text" length="255"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c*customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testAddWithDateFunc" devName="testAddWithDateFunc" labels="extended"
         labelName="testAddWithDateFunc" dataType="Double"
         dataFile="addWithDateFunc" scale="2" precision="12"
         code="(customformula0__c+customformula1__c+customnumber1__c+customformula2__c+custompercent1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="DAY(customdate1__c)">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="YEAR(customdate2__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="Double" scale="2" precision="12"
             code="MONTH(customdate3__c)">
             <referencefield devName="customdate3" labelName="customdate3"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDate" devName="testAddDate"
         labelName="testAddDate" dataType="DateOnly" dataFile="addDate" swap="true"
         scale="2" precision="12" code="(customdate1__c+customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddMonths" devName="testAddMonths" labels="extended"
         labelName="testAddMonths" dataType="DateTime" dataFile="addMonths" 
         scale="2" precision="12" code="ADDMONTHS(customdate1__c,customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="8">Leap Day Issues</whyIgnoreSql>         
         <whyIgnoreSql db="mysql,mariadb,mssql" numFailures="12">leap day</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="2">Leap Day Issues</whyIgnoreSql>         
     </testcase>
     <testcase name="testAddMonthsDate" devName="testAddMonthsDate" labels="extended"
         labelName="testAddMonthsDate" dataType="DateOnly" dataFile="addMonths" 
         scale="2" precision="12" code="ADDMONTHS(customdate1__c,customnumber1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="mysql,mariadb,mssql" numFailures="12">leap day</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="2">Leap Day Issues</whyIgnoreSql>         
     </testcase>
     <testcase name="testWeekday" devName="testWeekday"
         labelName="testWeekday" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="WEEKDAY(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDayOfYear" devName="testDayOfYear" labels="extended"
         labelName="testDayOfYear" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="DAYOFYEAR(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testUnixTimestampWithDate" devName="testUnixTimestampWithDate"
         labelName="testUnixTimestampWithDate" dataType="Double" dataFile="addDate"
         scale="2" precision="12" code="UNIXTIMESTAMP(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="mysql,mariadb" numFailures="6">no negative timestamp support</whyIgnoreSql>
     </testcase>     
     <testcase name="testAddDateWithExpr" devName="testAddDateWithExpr"
         labelName="testAddDateWithExpr" dataType="DateOnly"
         dataFile="addDateWithExpr" scale="2" precision="12"
         code="(customformula0__c+customnumber1__c+customformula1__c+customcurrency1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateOnly" code="(customdate1__c+custompercent1__c)">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customdate2__c-customdate3__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
             <referencefield devName="customdate3" labelName="customdate3"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTime" devName="testAddDateTime"
         labelName="testAddDateTime" dataType="DateTime" dataFile="addDateTime"
         swap="true" scale="2" precision="12"
         code="(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddMonthsDateTime" devName="testAddMonthsDateTime"
         labelName="testAddMonthsDateTime" dataType="DateTime" dataFile="addDateTime"
         scale="2" precision="12"  
         code="ADDMONTHS(customdatetime1__c,customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="mysql,mariadb,mssql" numFailures="4">leap day</whyIgnoreSql>
     </testcase>
     <testcase name="testAddDateTimeMinutes" devName="testAddDateTimeMinutes"
         labelName="testAddDateTimeMinutes" dataType="DateTime" dataFile="addDateTimeMinutes"
         swap="false" scale="2" precision="12"
         code="customdatetime1__c+(customnumber1__c/(24*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="trino" numFailures="26">Unknown issue with math and date_add</whyIgnoreSql>
         <whyIgnoreSql db="h2" numFailures="2">Overflow</whyIgnoreSql>
     </testcase>
     <!-- this one should be invalid but is currently accepted-->
     <testcase name="testAddDateTimeGivingDate"  labels="extended"
         devName="testAddDateTimeGivingDate"
         labelName="testAddDateTimeGivingDate" dataType="DateOnly"
         dataFile="addDateTime" swap="true" scale="2" precision="12"
         code="(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTimeGivingDateValue" labels="extended"
         devName="testAddDateTimeGivingDateValue"
         labelName="testAddDateTimeGivingDateValue" dataType="DateOnly"
         dataFile="addDateTime" swap="true" scale="2" precision="12"
         code="DateValue(customdatetime1__c+customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testAddDateTimeWithExpr" devName="testAddDateTimeWithExpr"
         labelName="testAddDateTimeWithExpr" dataType="DateTime" compareTemplate="formula"
         dataFile="addDateTimeWithExpr" scale="2" precision="12"
         code="(customformula0__c+custompercent2__c+customformula1__c+LEN(customtext1__c))">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateTime"
             code="(customdatetime1__c+custompercent1__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="custompercent2" labelName="custompercent2"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Double" scale="2" precision="12"
             code="(customdatetime2__c-customdatetime3__c)">
             <referencefield devName="customdatetime2"
                 labelName="customdatetime2" dataType="DateTime"/>
             <referencefield devName="customdatetime3"
                 labelName="customdatetime3" dataType="DateTime"/>
         </referencefield>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <testcase name="testSubDate" devName="testSubDate"
         labelName="testSubDate" dataType="Double" dataFile="subDate"
         swap="true" scale="2" precision="12"
         code="(customdate1__c-customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testSubDateTime" devName="testSubDateTime"
         labelName="testSubDateTime" dataType="Double" dataFile="subDateTime"
         swap="true" scale="2" precision="12"
         code="(customdatetime1__c-customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <!-- The high precision numbers in decimal got confused when dividing (since floor/ceiling goes to 3 decimal places).  Low precision has floor issues too -->
     <testcase name="testSubDateTimeCorners1" devName="testSubDateTimeCorners1" accuracyIssue="badDecimal"
         labelName="testSubDateTimeCorners1" dataType="Double" dataFile="subDateTimeCornersData"
         swap="true" scale="2" precision="12"
         code="(floor((customdatetime1__c-customdatetime2__c)*1440*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testSubDateTimeCorners2" devName="testSubDateTimeCorners2" accuracyIssue="floorCeiling"
         labelName="testSubDateTimeCorners2" dataType="Double" dataFile="subDateTimeCornersData"
         swap="true" scale="2" precision="12"
         code="(ceiling((customdatetime1__c-customdatetime2__c)*1440*60))">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testSubDateTimeGivingDateTime" labels="extended"
         devName="testSubDateTimeGivingDate"
         labelName="testSubDateTimeGivingDate" dataType="DateTime"
         dataFile="addDateTime" scale="2" precision="12"
         code="(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- this should be invalid -->
     <testcase name="testSubDateTimeGivingDate" labels="extended"
         devName="testSubDateTimeGivingDate"
         labelName="testSubDateTimeGivingDate" dataType="DateOnly"
         dataFile="addDateTime" scale="2" precision="12"
         code="(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- here the SQL operation seems to be incorrect -->
     <testcase name="testSubDateTimeGivingDateValue" labels="extended"
         devName="testSubDateTimeGivingDateValue"
         labelName="testSubDateTimeGivingDateValue" dataType="DateOnly"
         dataFile="addDateTime" scale="2" precision="12"  compareType="none"
         code="DateValue(customdatetime1__c-customnumber1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase labels="basic" name="testOriginDateTime"
         devName="testOriginDateTime" labelName="testOriginDateTime"
         dataType="DateTime" scale="2" precision="12"
         code="$System.originDateTime">
     </testcase>
     <testcase name="testDateTimeText" devName="testDateTimeText"
         labelName="testDateTimeText" dataType="Text" dataFile="addDateTime"
         scale="2" precision="12" code="Text(customdatetime1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testMonths" devName="testMonths" labels="extended"
               labelName="testMonths" dataType="Double" dataFile="months"
               scale="2" precision="12" code="month(customdate1__c)">
         <referencefield devName="customdate1" labelName="customdate1"
                         dataType="DateOnly"/>
     </testcase>
     <testcase name="testMultiplySimple" devName="testMultiplySimple"
         labelName="testMultiplySimple" dataType="Double"
         dataFile="multiplySimple" scale="2"
         precision="12" code="(customcurrency1__c*customcurrency2__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>

     <testcase name="testMultiplyWithDivideExpr" labels="extended"
         devName="testMultiplyWithDivideExpr"
         labelName="testMultiplyWithDivideExpr" dataType="Currency"
         dataFile="multiplyWithDivideExpr" scale="2" precision="12"
         code="(customformula0__c*customnumber1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="3" precision="12"
             code="(custompercent1__c/customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- this is same as above, except for scale of the nested formula field.
         This version results in different value in merge templates because of rounding of
         the operand, which doesn't occur in pure formula field case.
         So compare turned off here -->
     <testcase name="testMultiplyWithDivideExpr2" labels="extended"
         devName="testMultiplyWithDivideExpr2"
         labelName="testMultiplyWithDivideExpr2" dataType="Currency"
         dataFile="multiplyWithDivideExpr" scale="2" precision="12"
         code="(customformula0__c*customnumber1__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c/customcurrency1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- NOTE: TESTCASES For IF function() and comparision operators -->
     <testcase name="testIfTextCompareNotEqualReturnNum"
         devName="testIfTextCompareNotEqualReturnNum"
         labelName="testIfTextCompareNotEqualReturnNum" dataType="Currency"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customtext1__c&lt;&gt;customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>


     <!-- FOUND: BUG ID: 63679 - http://bugforce/bug/bugDetail.jsp?id=100000000000HpF -->
     <testcase name="testIfTextCompareEqualReturnNum"
         devName="testIfTextCompareEqualReturnNum"
         labelName="testIfTextCompareEqualReturnNum" dataType="Percent"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customtext1__c=customtext2__c),customnumber1__c,customcurrency1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnDate" labels="extended"
         devName="testIfTextCompareEqualReturnDate"
         labelName="testIfTextCompareEqualReturnDate" dataType="DateOnly"
         dataFile="ifTextCompareReturnDate" scale="2" precision="12"
         code="IF((customtext1__c=customemail1__c),customdate1__c,customformula1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateOnly" code="(customdate2__c+customnumber1__c)">
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnDateTime" labels="extended"
         devName="testIfTextCompareEqualReturnDateTime"
         labelName="testIfTextCompareEqualReturnDateTime" dataType="DateTime"
         dataFile="ifTextCompareReturnDateTime" scale="2" precision="12"
         code="IF((customphone1__c=customphone2__c),customformula1__c,customdatetime2__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customphone2" labelName="customphone2"
             dataType="phone" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateTime"
             code="(customdatetime1__c-customcurrency1__c)">
             <referencefield devName="customdatetime1"
                 labelName="customdatetime1" dataType="DateTime"/>
             <referencefield devName="customcurrency1"
                 labelName="customcurrency1" dataType="Currency" scale="9"
                 precision="18"/>
         </referencefield>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>
     <testcase name="testIfTextCompareEqualReturnText"
         devName="testIfTextCompareEqualReturnText"
         labelName="testIfTextCompareEqualReturnText" dataType="Text"
         dataFile="ifTextCompareReturnText" scale="2" precision="12"
         code="IF((customtext1__c=customtext2__c), &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfUsesTrue" devName="testIfUsesTrue"
         labelName="testIfUsesTrue" dataType="Double"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="IF(true,1,0)"/>
     <testcase name="testIfUsesFalse" devName="testIfUsesFalse"
         labelName="testIfUsesFalse" dataType="Percent"
         dataFile="twoNumericFields" scale="2" precision="12"
         code="IF(false,1,0)"/>


     <!-- Bug 118791 http://bugforce.eng.salesforce.com/bug/bugDetail.jsp?id=100000000000XJu -->
     <testcase name="testIfIf" devName="testIfIf" labelName="testIfIf"
         dataType="Text" scale="2" dataFile="ifTextCompareReturnText"
         precision="12"
         code="if( if (customtext1__c=customtext2__c, true, false),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNullThenIf" devName="testIfNullThenIf" labels="extended"
         labelName="testIfNullThenIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, null, false),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNullElseIf" devName="testIfNullElseIf" labels="extended"
         labelName="testIfNullElseIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, true, null),  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <!-- really dumb case... -->
     <testcase name="testIfNullNullIf" devName="testIfNullNullIf" labels="extended"
         labelName="testIfNullNullIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, null, null) = 0,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <whyIgnoreSql db="postgres" numFailures="14">incorrectly converts null to text for number comparison</whyIgnoreSql>             
     </testcase>
     <testcase name="testIfNotNull" devName="testIfNotNull" labels="extended"
         labelName="testIfNotNull" dataType="Text" scale="2" precision="12"
         code="if (not(null), &quot;True&quot;, &quot;False&quot;)">
     </testcase>
     <testcase name="testIfAndNull" devName="testIfAndNull" labels="extended"
         labelName="testIfAndNull" dataType="Text" scale="2" precision="12"
         dataFile="singleBooleanFieldData"
         code="IF(AND(null,customcheckbox1__c),&quot;T&quot;,&quot;F&quot;) &amp; IF(AND(customcheckbox1__c,null),&quot;T&quot;,&quot;F&quot;)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
     </testcase>
     <testcase name="testIfOrNull" devName="testIfOrNull" labels="extended"
         labelName="testIfOrNull" dataType="Text" scale="2" precision="12"
         dataFile="singleBooleanFieldData"
         code="IF(OR(null,customcheckbox1__c),&quot;T&quot;,&quot;F&quot;) &amp; IF(OR(customcheckbox1__c,null),&quot;T&quot;,&quot;F&quot;)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
     </testcase>
     <testcase name="testIfNumIf" devName="testIfNumIf" labelName="testIfNumIf" labels="extended"
         dataType="Text" scale="2" dataFile="ifTextCompareReturnText"
         precision="12"
         code="if( if (customtext1__c=customtext2__c, 1, 2) = 1,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testIfNumNullIf" devName="testIfNumNullIf" labels="extended"
         labelName="testIfNumNullIf" dataType="Text" scale="2"
         dataFile="ifTextCompareReturnText" precision="12"
         code="if( if (customtext1__c=customtext2__c, 1, null) = 1,  &quot;true&quot;, &quot;false&quot;)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
     </testcase>

     <!-- null == null in Javascript, and fixing that for low precision JS isn't a priority right now.  -->
     <testcase name="testIfNumCompareEqual" labels="extended" compareTemplate="formula"
         devName="testIfNumCompareEqual" labelName="testIfNumCompareEqual" accuracyIssue="needHp"
         dataType="Text" dataFile="ifCompare" scale="2" precision="12"
         code="IF((customnumber1__c=customcurrency1__c),customtext1__c,customphone1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
     </testcase>
     <testcase name="testIfNumCompareLess" labels="extended"
         devName="testIfNumCompareLess" labelName="testIfNumCompareLess"
         dataType="Percent" dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfNumCompareLessOrEqual" labels="extended"
         devName="testIfNumCompareLessOrEqual"
         labelName="testIfNumCompareLessOrEqual" dataType="Currency"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;=customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <!-- Same issue as CompareEqual with number equality when using low precision numbers -->
     <testcase name="testIfNumCompareNotEqual" labels="extended"
         devName="testIfNumCompareNotEqual"
         labelName="testIfNumCompareNotEqual" dataType="Double"  accuracyIssue="needHp"
         dataFile="ifCompare" scale="2" precision="12"
         code="IF((customcurrency1__c&lt;&gt;customcurrency2__c),customcurrency3__c,customnumber1__c)">
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency2" labelName="customcurrency2"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customcurrency3" labelName="customcurrency3"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <!-- FOUND: BUG ID: 63777 - http://bugforce/bug/bugDetail.jsp?id=100000000000Hqp    -->
     <testcase name="testIfContainsFunc"
         devName="testIfContainsFunc" labelName="testIfContainsFunc"
         dataType="Double" dataFile="ifCompare" scale="2" precision="12"
         code="IF(CONTAINS(customtext1__c,customtext2__c),ABS(customnumber1__c),FLOOR(customnumber2__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDate" devName="testDate"
         labelName="testDate" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="2">Last Day test overflows with 12-01-9999</whyIgnoreSql>
         <whyIgnoreSql db="h2" numFailures="2">H2 corrects for gregorian calendar for old dates (1000)</whyIgnoreSql>
     </testcase>
     <testcase name="testDateConstVarVar" devName="testDateConstVarVar"
         labelName="testDateConstVarVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,customnumber2__c,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateVarConstVar" devName="testDateVarConstVar"
         labelName="testDateVarConstVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,12,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="h2" numFailures="2">H2 corrects for gregorian calendar for old dates (1000)</whyIgnoreSql>
     </testcase>
     <testcase name="testDateVarVarConst" devName="testDateVarVarConst"
         labelName="testDateVarVarConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,customnumber2__c,28)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="2">Last Day test overflows with 12-01-9999</whyIgnoreSql>
         <whyIgnoreSql db="h2" numFailures="2">H2 corrects for gregorian calendar for old dates (1000)</whyIgnoreSql>
     </testcase>
     <testcase name="testDateVarConstConst" devName="testDateVarConstConst"
         labelName="testDateVarConstConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(customnumber1__c,11,25)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="h2" numFailures="2">H2 corrects for gregorian calendar for old dates (1000)</whyIgnoreSql>
     </testcase>
     <testcase name="testDateConstVarConst" devName="testDateConstVarConst"
         labelName="testDateConstVarConst" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,customnumber2__c,28)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateConstConstVar" devName="testDateConstConstVar"
         labelName="testDateConstConstVar" dataType="DateOnly" dataFile="functiondate"
         scale="2" precision="12"
         code="DATE(2012,11,customnumber3__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateLeapYear" devName="testDateLeapYear"
         labelName="testDateLeapYear" dataType="DateOnly" dataFile="functiondate-days"
         scale="2" precision="12"
         code="DATE(2012,2,day__c)">
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateNonLeapYear" devName="testDateNonLeapYear"
         labelName="testDateNonLeapYear" dataType="DateOnly" dataFile="functiondate-days"
         scale="2" precision="12"
         code="DATE(2011,2,day__c)">
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateLeapYear2" devName="testDateLeapYear2"
         labelName="testDateLeapYear2" dataType="DateOnly" dataFile="functiondate-months"
         scale="2" precision="12"
         code="DATE(2012,month__c,29)">
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateNonLeapYear2" devName="testDateNonLeapYear2"
         labelName="testDateNonLeapYear2" dataType="DateOnly" dataFile="functiondate-months"
         scale="2" precision="12"
         code="DATE(2011,month__c,29)">
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
    <testcase name="testDateLeapConstantMonth" devName="testDateLeapConstantMonth"
         labelName="testDateLeapConstantMonth" dataType="DateOnly" dataFile="functiondate-yearday"
         scale="2" precision="12"
         code="DATE(year__c,2,day__c)">
         <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="day" labelName="day"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateLeapConstantDay" devName="testDateLeapConstantDay"
         labelName="testDateLeapConstantDay" dataType="DateOnly" dataFile="functiondate-yearmonths"
         scale="2" precision="12"
         code="DATE(year__c,month__c,29)">
          <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="month" labelName="month"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testDateAllConstants" devName="testDateAllConstants"
         labelName="testDateAllConstants" dataType="DateOnly"
         scale="2" precision="12"
         code="DATE(2012,2,29)">
     </testcase>
    <testcase name="testDateAllConstantsNonLeap" devName="testDateAllConstantsNonLeap"
         labelName="testDateAllConstantsNonLeap" dataType="DateOnly"
         scale="2" precision="12"
         code="DATE(2011,2,29)">
     </testcase>
     <testcase name="testDateVariableYear" devName="testDateVariableYear"
         labelName="testDateVariableYear" dataType="DateOnly" dataFile="functiondate-years"
         scale="2" precision="12"
         code="DATE(year__c,2,29)">
         <referencefield devName="year" labelName="year"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <testcase name="testIfANDFunc" devName="testIfANDFunc"
         labelName="testIfANDFunc" dataType="DateOnly" dataFile="ifAndOrFunc"
         scale="2" precision="12"
         code="IF(AND(customcheckbox1__c,customcheckbox2__c),customformula1__c,DATE(customnumber1__c,customnumber2__c,customnumber3__c))">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="DateOnly"
             code="IF(customcheckbox3__c,customdate1__c,customdate2__c)">
             <referencefield devName="customcheckbox3"
                 labelName="customcheckbox3" dataType="Boolean" length="255"/>
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfORFunc" devName="testIfORFunc"
         labelName="testIfORFunc" dataType="DateOnly" dataFile="ifAndOrFunc"
         scale="2" precision="12"
         code="IF(OR(customcheckbox1__c,customcheckbox2__c),IF(customcheckbox3__c,customdate1__c,customdate2__c),customformula2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
         <whyIgnoreSql db="spanner" numFailures="1">TODO: Google LastDay logic treats a null month as 0 and fails.</whyIgnoreSql>         
     </testcase>

     <testcase name="testBooleanAND" devName="testBooleanAND"
         labelName="testBooleanAND" dataType="Boolean" dataFile="ifAndOrFunc"
         code="AND(customformula1__c,OR(customcheckbox1__c,customcheckbox2__c))">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testBooleanEq" devName="testBooleanEq"
         labelName="testBooleanEq" dataType="Boolean" dataFile="ifAndOrFunc"
         code="customformula1__c = OR(customcheckbox1__c,customcheckbox2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testBooleanNeq" devName="testBooleanNeq"
         labelName="testBooleanNeq" dataType="Boolean" dataFile="ifAndOrFunc"
         code="customformula1__c != OR(customcheckbox1__c,customcheckbox2__c)">
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox2" labelName="customcheckbox2"
             dataType="Boolean" length="255"/>
         <referencefield devName="customcheckbox3" labelName="customcheckbox3"
             dataType="Boolean" length="255"/>
         <referencefield devName="customformula1" labelName="customformula1"
             dataType="Boolean"
             code="customdate1__c > customdate2__c">
             <referencefield devName="customdate1" labelName="customdate1"
                 dataType="DateOnly"/>
             <referencefield devName="customdate2" labelName="customdate2"
                 dataType="DateOnly"/>
         </referencefield>
         <referencefield devName="customformula2" labelName="customformula2"
             dataType="DateOnly"
             code="DATE(customnumber1__c,customnumber2__c,customnumber3__c)">
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber2" labelName="customnumber2"
                 dataType="Double" scale="9" precision="18"/>
             <referencefield devName="customnumber3" labelName="customnumber3"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>

     <testcase name="testIfDateCompareGreaterThan" labels="extended" compareTemplate="formula"
         devName="testIfDateCompareGreaterThan"
         labelName="testIfDateCompareGreaterThan" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&gt;customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <!-- FOUND: BUG ID: 63962 - http://bugforce/bug/bugDetail.jsp?id=100000000000Htw -->
     <testcase name="testIfDateTimeCompareGreaterThan" labels="extended" compareTemplate="formula"
         devName="testIfDateTimeCompareGreaterThan"
         labelName="testIfDateTimeCompareGreaterThan" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c&gt;customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>

     <!-- NOTES: TESTCASES for Contains() function -->
     <testcase name="testIfContainsUsesText" devName="testIfContainsUsesText"
         labelName="testIfContainsUsesText" dataType="Currency"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesTextArea" labels="extended"
         devName="testIfContainsUsesTextArea"
         labelName="testIfContainsUsesTextArea" dataType="Double"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesEmail" devName="testIfContainsUsesEmail"
         labelName="testIfContainsUsesEmail" dataType="Percent"
         dataFile="ifContainsUsesEmail" scale="2" precision="12"
         code="IF(CONTAINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testIfContainsUsesPhone" devName="testIfContainsUsesPhone" labels="extended"
         labelName="testIfContainsUsesPhone" dataType="Currency"
         dataFile="ifContainsUsesText" scale="2" precision="12"
         code="IF(CONTAINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
     </testcase>

        <!-- NOTES: TESTCASES for Begins() function -->
        <testcase name="testIfBeginsUsesText" devName="testIfBeginsUsesText"
         labelName="testIfBeginsUsesText" dataType="Currency"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customtext2" labelName="customtext2"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesTextArea" labels="extended"
            devName="testIfBeginsUsesTextArea"
            labelName="testIfBeginsUsesTextArea" dataType="Double"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customtextarea1__c,customtext1__c),customcurrency1__c,custompercent1__c)">
            <referencefield devName="customtextarea1" labelName="customtextarea1"
                dataType="textarea" length="255"/>           
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customcurrency1" labelName="customcurrency1"
                dataType="Currency" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesEmail" devName="testIfBeginsUsesEmail"
            labelName="testIfBeginsUsesEmail" dataType="Percent"
            dataFile="ifBeginsUsesEmail" scale="2" precision="12"
            code="IF(BEGINS(customemail1__c,customtext1__c),customnumber1__c,customcurrency1__c)">
            <referencefield devName="customemail1" labelName="customemail1"
                dataType="email" length="255"/>
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="customcurrency1" labelName="customcurrency1"
                dataType="Currency" scale="2" precision="12"/>
        </testcase>
        <testcase name="testIfBeginsUsesPhone" devName="testIfBeginsUsesPhone" labels="extended"
            labelName="testIfBeginsUsesPhone" dataType="Currency"
            dataFile="ifBeginsUsesText" scale="2" precision="12"
            code="IF(BEGINS(customphone1__c,customtext1__c),customnumber1__c,custompercent1__c)">
            <referencefield devName="customphone1" labelName="customphone1"
                dataType="phone" length="255"/>
            <referencefield devName="customtext1" labelName="customtext1"
                dataType="Text" length="255"/>
            <referencefield devName="customnumber1" labelName="customnumber1"
                dataType="Double" scale="2" precision="12"/>
            <referencefield devName="custompercent1" labelName="custompercent1"
                dataType="Percent" scale="2" precision="12"/>
        </testcase>

     <!-- NOTES: TESTCASES for Substitute() function -->
     <testcase name="testSimpleSubstitute"
         devName="testSimpleSubstitute" labelName="testSimpleSubstitute"
         dataType="Text" dataFile="simpleSubstitute" length="1024"
         code="SUBSTITUTE(customtext1__c,customtext2__c,customtext3__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtext2" labelName="customtext2"
             dataType="Text" length="255"/>
         <referencefield devName="customtext3" labelName="customtext3"
             dataType="Text" length="255"/>
     </testcase>

     <!-- Test Text(num) see bug 120969 -->
     <testcase name="testTextNum" devName="testTextNum"
         labelName="testTextNum" dataType="Text" dataFile="singleNumericField"
         code="Text(customnumber1__c)" length='500' compareType="number">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="1" precision="15"/>
     </testcase>
     <testcase name="testTextNum2" devName="testTextNum2"
         labelName="testTextNum2" dataType="Text" dataFile="singleNumericField"
         code="Text(customnumber1__c)" length='500' compareType="number">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="0" precision="15"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR LEN() FUNCTION -->
     <testcase name="testLenSimple" devName="testLenSimple"
         labelName="testLenSimple" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="LEN(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testLenUsesText" devName="testLenUsesText" compareType="none"
         labelName="testLenUsesText" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="LEN(Text(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

     <testcase name="testTrim" devName="testTrim"
         labelName="testTrim" dataType="Text"
         dataFile="singleTextFieldData" 
         code="TRIM(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <testcase name="testInitCap" devName="testInitCap" labels="extended"
         labelName="testInitCap" dataType="Text"
         dataFile="initCap" 
         code="INITCAP(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <whyIgnoreSql db="spanner,mysql,mariadb,mssql,sqlite3,h2" unimplemented="true"/>
         <whyIgnoreSql db="trino" numFailures="6">dotted i</whyIgnoreSql>
     </testcase>

     <testcase name="testChr" devName="testChr" labels="extended"
         labelName="testChr" dataType="Text"
         dataFile="unicodePoints" 
         code="CHR(customnumber__c)">
         <referencefield devName="customnumber" labelName="customnumber"
             dataType="Double" scale="2" precision="12"/>     
         <whyIgnoreSql db="trino" numFailures="2">rounding halfup not halfeven</whyIgnoreSql>
     </testcase>

     <testcase name="testAscii" devName="testAscii" labels="extended"
         labelName="testAscii" dataType="Double"
         dataFile="unicodeChars" 
         scale="2" precision="12" code="ASCII(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>

     <!-- NOTES: TESTCASES FOR EXP() FUNCTION -->
     <testcase name="testExpSimple" devName="testExpSimple" labels="math"
         labelName="testExpSimple" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(customnumber1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="2">Spanner's jdbc decimal limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesAbs" devName="testExpUsesAbs" labels="math"
         labelName="testExpUsesAbs" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(ABS(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="4">Spanner's jdbc decimal limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesCeil" devName="testExpUsesCeil" labels="math"
         labelName="testExpUsesCeil" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(CEILING(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="2">Spanner's jdbc decimal limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesFloor" devName="testExpUsesFloor" labels="math"
         labelName="testExpUsesFloor" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(FLOOR(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="2">Spanner's jdbc decimal limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesLog" devName="testExpUsesLog" labels="math"
         labelName="testExpUsesLog" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(LOG(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesLn" devName="testExpUsesLn" labels="math"
         labelName="testExpUsesLn" dataType="Double" dataFile="lnLogData"
         scale="2" precision="12" code="ROUND(EXP(LN(customnumber1__c)), 0)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesSqrt" devName="testExpUsesSqrt" labels="math"
         labelName="testExpUsesSqrt" dataType="Double" dataFile="sqrtData"
         scale="2" precision="12" code="EXP(SQRT(customnumber1__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <whyIgnoreSql db="spanner" numFailures="8">Spanner's jdbc limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesRound" devName="testExpUsesRound" labels="extended"
         labelName="testExpUsesRound" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP(ROUND(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesMOD" devName="testExpUsesMOD" labels="extended"
         labelName="testExpUsesMOD" dataType="Double" dataFile="modData"
         scale="2" precision="12"
         code="EXP(MOD(customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesIf" devName="testExpUsesIf" labels="extended"
         labelName="testExpUsesIf" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP(IF(true,customnumber1__c,customnumber2__c))">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesLen" devName="testExpUsesLen" labels="extended"
         labelName="testExpUsesLen" dataType="Double"
         dataFile="singleTextFieldData" scale="2" precision="12"
         code="EXP(LEN(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testExpUsesValue" devName="testExpUsesValue" labels="math"
         labelName="testExpUsesValue" dataType="Double" dataFile="expData"
         scale="2" precision="12" code="EXP(VALUE(customtext1__c))">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <whyIgnoreSql db="spanner" numFailures="2">Spanner's jdbc decimal limit of 38 is absolute, not relative, so Exp(110) breaks</whyIgnoreSql>
     </testcase>
     <testcase name="testExpUsesMinus" devName="testExpUsesMinus" labels="math"
         labelName="testExpUsesMinus" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12"
         code="EXP((custompercent1__c-customcurrency1__c))">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="12"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="12"/>
     </testcase>
     <testcase name="testExpUsesPlus" devName="testExpUsesPlus" labels="math"
         labelName="testExpUsesPlus" dataType="Double" dataFile="roundUsesExp"
         scale="2" precision="12" code="EXP(customformula0__c)">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="Double" scale="2" precision="12"
             code="(custompercent1__c+customnumber1__c)">
             <referencefield devName="custompercent1"
                 labelName="custompercent1" dataType="Percent" scale="9"
                 precision="18"/>
             <referencefield devName="customnumber1" labelName="customnumber1"
                 dataType="Double" scale="9" precision="18"/>
         </referencefield>
     </testcase>


     <!-- Test Cases for NULLVALUE() FUNCTION -->
     <testcase name="testNVLWithNum" devName="testNVLWithNum"
         labelName="testNVLWithNum" dataType="Currency" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(customnumber1__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithCur" devName="testNVLWithCur" labels="extended"
         labelName="testNVLWithCur" dataType="Percent" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(customcurrency1__c,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithPer" devName="testNVLWithPer" labels="extended"
         labelName="testNVLWithPer" dataType="Double" dataFile="NVLNum"
         scale="2" precision="12"
         code="NULLVALUE(custompercent1__c,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testNVLWithText" devName="testNVLWithText"
         labelName="testNVLWithText" dataType="Text" dataFile="NVLText" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customtext1__c,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithTextArea"
         devName="testNVLWithTextArea" labelName="testNVLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="NULLVALUE(customtextarea1__c,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testNVLWithPhone" devName="testNVLWithPhone"
         labelName="testNVLWithPhone" dataType="Text" dataFile="NVLPhone" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customphone1__c,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithEmail" devName="testNVLWithEmail" labels="extended"
         labelName="testNVLWithEmail" dataType="Text" dataFile="NVLEmail" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customemail1__c,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithUrl" devName="testNVLWithUrl" labels="extended"
         labelName="testNVLWithUrl" dataType="Text" dataFile="NVLUrl" compareTemplate="visualforce"
         length="1300" code="NULLVALUE(customurl1__c,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testNVLWithDate" devName="testNVLWithDate"
         labelName="testNVLWithDate" dataType="DateOnly" dataFile="TwoDateFields"
         length="1300" code="NULLVALUE(customdate1__c,customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testNVLWithDateTime"
         devName="testNVLWithDateTime" labelName="testNVLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="NULLVALUE(customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testNVLWithError" devName="testNVLWithError"
         labelName="testNVLWithError" dataType="Double"
         dataFile="threeNumericFields" scale="2" precision="18"
         code="NULLVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- Test Cases for BLANKVALUE() FUNCTION -->
     <testcase name="testBVLWithNum" devName="testBVLWithNum"
         labelName="testBVLWithNum" dataType="Currency" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(customnumber1__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithCur" devName="testBVLWithCur" labels="extended"
         labelName="testBVLWithCur" dataType="Percent" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(customcurrency1__c,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithPer" devName="testBVLWithPer" labels="extended"
         labelName="testBVLWithPer" dataType="Double" dataFile="NVLNum"
         scale="2" precision="12"
         code="BLANKVALUE(custompercent1__c,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testBVLWithText" devName="testBVLWithText"
         labelName="testBVLWithText" dataType="Text" dataFile="NVLText"
         length="1300" code="BLANKVALUE(customtext1__c,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithTextArea"
         devName="testBVLWithTextArea" labelName="testBVLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300"
         code="BLANKVALUE(customtextarea1__c,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testBVLWithPhone" devName="testBVLWithPhone"
         labelName="testBVLWithPhone" dataType="Text" dataFile="NVLPhone"
         length="1300" code="BLANKVALUE(customphone1__c,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithEmail" devName="testBVLWithEmail" labels="extended"
         labelName="testBVLWithEmail" dataType="Text" dataFile="NVLEmail"
         length="1300" code="BLANKVALUE(customemail1__c,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithUrl" devName="testBVLWithUrl" compareContezts="formula" labels="extended"
         labelName="testBVLWithUrl" dataType="Text" dataFile="NVLUrl"
         length="1300" code="BLANKVALUE(customurl1__c,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testBVLWithDate" devName="testBVLWithDate"
         labelName="testBVLWithDate" dataType="DateOnly" dataFile="TwoDateFields"
         length="1300" code="BLANKVALUE(customdate1__c,customdate2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testBVLWithDateFormulaNull" devName="testBVLWithDate"
         labelName="testBVLWithDate" dataType="DateOnly"
         length="1300" code="BLANKVALUE(customformula0__c,date(2000,1,1))">
         <referencefield devName="customformula0" labelName="customformula0"
             dataType="DateOnly" length="255"
             code="NULL"/>
     </testcase>
     <testcase name="testBVLWithDateTime"
         devName="testBVLWithDateTime" labelName="testBVLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="BLANKVALUE(customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testBVLWithError" devName="testBVLWithError"
         labelName="testBVLWithError" dataType="Double"
         dataFile="threeNumericFields" scale="2" precision="18"
         code="BLANKVALUE(customnumber1__c/customnumber2__c,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <testcase name="testIfDateTimeCompareEqual"
         devName="testIfDateTimeCompareEqual"
         labelName="testIfDateTimeCompareEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareEqual"
         devName="testIfDateCompareEqual" labelName="testIfDateCompareEqual"
         dataType="DateTime" dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareLessThan" compareTemplate="formula"
         devName="testIfDateTimeCompareLessThan"
         labelName="testIfDateTimeCompareLessThan" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &lt;customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareLessThan" compareTemplate="formula"
         devName="testIfDateCompareLessThan"
         labelName="testIfDateCompareLessThan" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&lt;customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareLessThanOrEqual" compareTemplate="formula"
         devName="testIfDateTimeCompareLessThanOrEqual"
         labelName="testIfDateTimeCompareLessThanOrEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &lt;=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareLessThanOrEqual" compareTemplate="formula"
         devName="testIfDateCompareLessThanOrEqual"
         labelName="testIfDateCompareLessThanOrEqual" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&lt;=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <testcase name="testIfDateTimeCompareGtThanOrEqual" labels="extended" compareTemplate="formula"
         devName="testIfDateTimeCompareGtThanOrEqual"
         labelName="testIfDateTimeCompareGtThanOrEqual" dataType="DateOnly"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdatetime1__c &gt;=customdatetime2__c),customdate1__c,customdate2__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
     </testcase>
     <testcase name="testIfDateCompareGreaterThanOrEqual" labels="extended" compareTemplate="formula"
         devName="testIfDateCompareGreaterThanOrEqual"
         labelName="testIfDateCompareGreaterThanOrEqual" dataType="DateTime"
         dataFile="ifDateCompareReturnDate"
         code="IF((customdate1__c&gt;=customdate2__c),customdatetime1__c,customdatetime2__c)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly"/>
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime"/>
     </testcase>

     <!-- TESTCASES FOR COMMENTS /* */ IN FORMULAS -->
     <testcase name="testCommentsInsideFormula"
         devName="testCommentsInsideFormula" labelName="testCommentsInsideFormula"
         dataType="Double" dataFile="dummyRow" scale="2" precision="12"
         code="/* comment */ IF /* comment */(YEAR(TODAY()) = 2009 /* comment */, 0,0) /** comment **/">
     </testcase>

     <!-- TESTCASES for ISNULL() FUNCTION -->
     <testcase name="testISNULLWithNum"
         devName="testISNULLWithNum" labelName="testISNULLWithNum"
         dataType="Currency" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(customnumber1__c), 0,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithCur"
         devName="testISNULLWithCur" labelName="testISNULLWithCur"
         dataType="Percent" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(customcurrency1__c),0,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithPer"
         devName="testISNULLWithPer" labelName="testISNULLWithPer"
         dataType="Double" dataFile="NVLNum" scale="2" precision="12"
         code="if(isnull(custompercent1__c), 0,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISNULLWithText"
         devName="testISNULLWithText" labelName="testISNULLWithText"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="if(isnull(customtext1__c),&quot;NULL&quot;,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithTextArea"
         devName="testISNULLWithTextArea" labelName="testISNULLWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300" compareTemplate="visualforce"
         code="if(isnull(customtextarea1__c),null,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testISNULLWithPhone"
         devName="testISNULLWithPhone" labelName="testISNULLWithPhone"
         dataType="Text" dataFile="NVLPhone" length="1300" compareTemplate="visualforce"
         code="if(isnull(customphone1__c),null,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithEmail"
         devName="testISNULLWithEmail" labelName="testISNULLWithEmail"
         dataType="Text" dataFile="NVLEmail" length="1300" compareTemplate="visualforce"
         code="if(isnull(customemail1__c),null,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithUrl"
         devName="testISNULLWithUrl" labelName="testISNULLWithUrl"
         dataType="Text" dataFile="NVLUrl" length="1300" compareTemplate="visualforce"
         code="if(isnull(customurl1__c),null,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISNULLWithDate"
         devName="testISNULLWithDate" labelName="testISNULLWithDate"
         dataType="DateOnly" dataFile="TwoDateFields" length="1300"
         code="if(isnull(customdate1__c),customdate2__c,null)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testISNULLWithDateTime"
         devName="testISNULLWithDateTime" labelName="testISNULLWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="if(isnull(customdatetime1__c),customdatetime2__c,null)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testISNULLWithError"
         devName="testISNULLWithError" labelName="testISNULLWithError"
         dataType="Double" dataFile="threeNumericFields" scale="2"
         precision="18"
         code="if(isnull(customnumber1__c/customnumber2__c),null,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- TESTCASES for ISBLANK() FUNCTION -->
     <testcase name="testISBLANKWithNum"
         devName="testISBLANKWithNum" labelName="testISBLANKWithNum"
         dataType="Currency" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(customnumber1__c), 0,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithCur"
         devName="testISBLANKWithCur" labelName="testISBLANKWithCur"
         dataType="Percent" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(customcurrency1__c),0,custompercent1__c)">

         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithPer"
         devName="testISBLANKWithPer" labelName="testISBLANKWithPer"
         dataType="Double" dataFile="NVLNum" scale="2" precision="12"
         code="if(isblank(custompercent1__c), 0,customnumber1__c)">
         <referencefield devName="custompercent1" labelName="custompercent1"
             dataType="Percent" scale="2" precision="18"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
     </testcase>
     <testcase name="testISBLANKWithText"
         devName="testISBLANKWithText" labelName="testISBLANKWithText"
         dataType="Text" dataFile="NVLText" length="1300"
         code="if(isblank(customtext1__c),&quot;NULL&quot;,customtextarea1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithTextArea"
         devName="testISBLANKWithTextArea" labelName="testISBLANKWithTextArea"
         dataType="Text" dataFile="NVLText" length="1300"
         code="if(isblank(customtextarea1__c),null,customtext1__c)">
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithPhone"
         devName="testISBLANKWithPhone" labelName="testISBLANKWithPhone"
         dataType="Text" dataFile="NVLPhone" length="1300"
         code="if(isblank(customphone1__c),null,customtextarea1__c)">
         <referencefield devName="customphone1" labelName="customphone1"
             dataType="phone" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithEmail"
         devName="testISBLANKWithEmail" labelName="testISBLANKWithEmail"
         dataType="Text" dataFile="NVLEmail" length="1300"
         code="if(isblank(customemail1__c),null,customtextarea1__c)">
         <referencefield devName="customemail1" labelName="customemail1"
             dataType="email" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithUrl"
         devName="testISBLANKWithUrl" labelName="testISBLANKWithUrl"
         dataType="Text" dataFile="NVLUrl" length="1300"
         code="if(isblank(customurl1__c),null,customtextarea1__c)">
         <referencefield devName="customurl1" labelName="customurl1"
             dataType="url" length="255"/>
         <referencefield devName="customtextarea1" labelName="customtextarea1"
             dataType="textarea" length="255"/>
     </testcase>

     <testcase name="testISBLANKWithDate"
         devName="testISBLANKWithDate" labelName="testISBLANKWithDate"
         dataType="DateOnly" dataFile="TwoDateFields" length="1300"
         code="if(isblank(customdate1__c),customdate2__c,null)">
         <referencefield devName="customdate1" labelName="customdate1"
             dataType="DateOnly" length="255"/>
         <referencefield devName="customdate2" labelName="customdate2"
             dataType="DateOnly" length="255"/>
     </testcase>
     <testcase name="testISBLANKWithDateTime"
         devName="testISBLANKWithDateTime" labelName="testISBLANKWithDateTime"
         dataType="DateTime" dataFile="TwoDateFields" length="1300"
         code="if(isblank(customdatetime1__c),customdatetime2__c,null)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
     </testcase>

     <testcase name="testISBLANKWithError"
         devName="testISBLANKWithError" labelName="testISBLANKWithError"
         dataType="Double" dataFile="threeNumericFields" scale="2"
         precision="18"
         code="if(isblank(customnumber1__c/customnumber2__c),null,customcurrency1__c)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customcurrency1" labelName="customcurrency1"
             dataType="Currency" scale="2" precision="18"/>
     </testcase>

     <!-- TESTCASES for DATEVALUE() FUNCTION -->
     <testcase name="testDATEVALUEWithString"
         devName="testDATEVALUEWithString" labelName="testDATEVALUEWithString"
         dataType="DateOnly" dataFile="singleTextFieldDateData"
         code="datevalue(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <whyIgnoreSql db="h2" numFailures="2">H2 corrects for gregorian calendar for old dates (1 CE)</whyIgnoreSql>
     </testcase>

     <!-- TESTCASE for Bug 85686: IF(blah, NULL, NULL) with return datatype of Date or DateTime -->
     <testcase name="testIfReturningNullForDateType"
         devName="testIfReturningNullForDateType"
         labelName="testIfReturningNullForDateType" dataType="DateOnly"
         code="if(true, if(false, null, null), TODAY())">
         <whyIgnoreSql db="spanner" unimplemented="true">JDBC driver assumes NULL is Int64</whyIgnoreSql>         
     </testcase>
     <testcase name="testIfReturningNullForDateTimeType"
         devName="testIfReturningNullForDateTimeType"
         labelName="testIfReturningNullForDateTimeType" dataType="DateTime"
         code="if(true, if(false, null, null), NOW())">
         <whyIgnoreSql db="spanner" unimplemented="true">JDBC driver assumes NULL is Int64</whyIgnoreSql>         
     </testcase>        


     <!-- TESTCASE for Bug 89122: IF(blah, NULL, NULL) with return datatype of Number -->
     <testcase name="testIfReturningNullForNumericType"
         devName="testIfReturningNullForNumericType"
         labelName="testIfReturningNullForNumericType" dataType="Double" scale="2"
         code="if(true, if(false, null, null), 999)"/>

     <!-- TESTCASE for Bug W-600480: Short-circuiting with null terms-->
     <testcase name="testShortCircuitingWithNullTerms" compareTemplate="formula"
         devName="testShortCircuitingWithNullTerms"
         labelName="testShortCircuitingWithNullTerms" dataType="Text" dataFile = "dateAndNumber"
         code="if(and(customdate1__c >date(2000,1,1), value(customtext1__c )>0),'True','False')">
         <referencefield devName="customdate1" labelName="customdate1" dataType="DateOnly"/>
         <referencefield devName="customtext1" labelName="customtext1" dataType="Text" length="255"/>
     </testcase>

     <!-- no operations -->
     <testcase labels="basic" name="testSimpleRef" devName="testSimpleRef" labelName="testSimpleRef"
            dataType="Double" code="customNumber1__c" dataFile="singleNumericField" precision="16" scale="2" >
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="3" precision="15" />
     </testcase>
     <testcase name="testSimpleRefText" devName="testSimpleRefText" labelName="testSimpleRefText"
            dataType="Text" code="customText1__c" dataFile="singleTextFieldData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>

     <testcase name="testLpad" devName="testLpad" labelName="testLpad"
            dataType="Text" code="lpad(customText1__c,customNumber1__c)" dataFile="padData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
     </testcase>
     <testcase name="testRpad" devName="testRpad" labelName="testRpad"
            dataType="Text" code="rpad(customText1__c,customNumber1__c)" dataFile="padData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
     </testcase>
     <testcase name="testLpad2" devName="testLpad2" labelName="testLpad2"
            dataType="Text" code="lpad(customText1__c,customNumber1__c,customText2__c)" dataFile="padData2" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
         <referencefield devName="customText2" labelName="customText2" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="h2" unimplemented="true">H2 does single char padding only</whyIgnoreSql>
     </testcase>
     <testcase name="testRpad2" devName="testRpad2" labelName="testRpad2"
            dataType="Text" code="rpad(customText1__c,customNumber1__c,customText2__c)" dataFile="padData2" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" precision="13" scale="3"/>
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="h2" unimplemented="true">H2 does single char padding only</whyIgnoreSql>
     </testcase>
     <testcase name="testUpper" labels="basic" devName="testUpper" labelName="testUpper" 
            dataType="Text" code="upper(customText1__c)" dataFile="upperCaseData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="postgres" numFailures="2">ICU Support</whyIgnoreSql>
         <whyIgnoreSql db="mysql,mariadb,mssql,trino" numFailures="2">Double S</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="6">No unicode support</whyIgnoreSql>
     </testcase>
     <testcase name="testLower" labels="basic" devName="testLower" labelName="testLower" 
            dataType="Text" code="lower(customText1__c)" dataFile="upperCaseData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="postgres" numFailures="2">ICU Support</whyIgnoreSql>
         <whyIgnoreSql db="mysql,mariadb,mssql,trino" numFailures="2">Double S</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="4">No unicode support</whyIgnoreSql>
     </testcase>
     <testcase name="testUpperLocale" devName="testUpperLocale" labelName="testUpperLocale"
            dataType="Text" code="upper(customText1__c,customText2__c)" dataFile="upperCaseLocaleData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="spanner,h2" numFailures="4">No collate supported</whyIgnoreSql>
         <whyIgnoreSql db="postgres,trino" numFailures="12">ICU Support</whyIgnoreSql>
         <whyIgnoreSql db="oracle" numFailures="4">turkish java diff</whyIgnoreSql>
         <whyIgnoreSql db="mysql,mariadb,mssql" numFailures="12">No collate supported</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="28">No unicode support</whyIgnoreSql>
     </testcase>
     <testcase name="testLowerLocale" devName="testLowerLocale" labelName="testLowerLocale" 
            dataType="Text" code="lower(customText1__c,customText2__c)" dataFile="upperCaseLocaleData" length="100" precision="16" scale="2" >
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <whyIgnoreSql db="mysql,mariadb,mssql,spanner,h2" numFailures="8">No collate supported</whyIgnoreSql>
         <whyIgnoreSql db="postgres,trino" numFailures="8">ICU Support</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="20">No unicode support</whyIgnoreSql>
     </testcase>

     <testcase name="testFindOnText" devName="testFindOnText"
         labelName="testFindOnText" dataType="Double"
         scale="2" precision="12"
         dataFile="findOnText" code="FIND(&quot;Text&quot;, customText1__c)">
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
     </testcase>
     <testcase name="testFindOnTextWithIndex" devName="testFindOnTextWithIndex" labelName="testFindOnTextWithIndex"
         dataType="Double" code="FIND(customText1__c, customText2__c, customNumber__c)" dataFile="findOnTextWithIndex" scale="2" precision="12">
         <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customText2" labelName="customText" dataType="Text" length="100" scale="3" precision="15" />
         <referencefield devName="customNumber" labelName="customNumber" dataType="Double" scale="2" precision="12" />
     </testcase>
     <testcase name="testNullCompareWithEmptyString" devName="testNullCompareWithEmptyString"
                labelName="testNullSpanCompareWithEmptyString" dataType="Boolean" eval="formula"
                dataFile="findOnText" code="customText1__c = ''">
          <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" />
      </testcase>
      <testcase name="testNullNotEqualEmptyString" devName="testNullNotEqualEmptyString"
                labelName="testNullSpanNotEqualEmptyString" dataType="Boolean" eval="formula"
                dataFile="findOnText" code="customText1__c != ''">
          <referencefield devName="customText1" labelName="customText" dataType="Text" length="100" />
      </testcase>
    
    <testcase name="testAddHoursWithTwoCustFields" devName="testAddHoursWithTwoCustFields"
        labelName="testAddHoursWithTwoCustFields" dataType="TimeOnly" eval="formula,template" dataFile="timeAndHours"
        scale="2" precision="12"
        code="TimeValue(timeString__c) + customnumber1__c">
        <referencefield devName="timeString" labelName="timeString" dataType="Text" length="50"/>
        <referencefield devName="customnumber1" labelName="customnumber1" dataType="Double" scale="2" precision="12"/>
    </testcase>
    <testcase name="testSubtractTwoTimeFields" devName="testSubtractTwoTimeFields"
        labelName="testSubtractTwoTimeFields" dataType="Double" eval="formula,template" dataFile="twoTimeFields"
        scale="2" precision="12"
        code="TimeValue(timeString2__c) - TimeValue(timeString1__c)">
        <referencefield devName="timeString1" labelName="timeString1" dataType="Text" length="50"/>
        <referencefield devName="timeString2" labelName="timeString2" dataType="Text" length="50"/>
        <whyIgnoreSql db="mariadb" numFailures="8">Timediff is ABS, and subtime doesn't work in mariadb on time fields</whyIgnoreSql>
    </testcase>

    <testcase name="testDistance" devName="testDistance"
        labelName="testDistance" dataType="Double" eval="formula,template" dataFile="twoLatLong"
        scale="2" precision="12" labels="extended"
        code="DISTANCE(GEOLOCATION(customNumber1__c,customNumber2__c),GEOLOCATION(33.37088,-122.61715),'mi')">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
         <referencefield devName="customNumber2" labelName="customNumber2" dataType="Double" scale="2" precision="12" />
      </testcase>
    <testcase name="testFormatCurrency" devName="testFormatCurrency"
        labelName="testFormatCurrency" dataType="Text" dataFile="formatCurrency" labels="extended"
        code="FORMATCURRENCY(isocode__c, customNumber1__c)">
        <referencefield devName="isocode" labelName="timeString" dataType="Text" length="50"/>
        <referencefield devName="customNumber1" labelName="customNumber2" dataType="Double" scale="2" precision="12" />
         <whyIgnoreSql db="sqlite3" numFailures="20">Sqlite3 doesn't support group separators in decimals</whyIgnoreSql>             
      </testcase>
      
     <testcase name="testIfTextCompareLessThan" labels="extended"
          devName="testIfTextCompareLessThan"
         labelName="testIfTextCompareLessThan" dataType="Boolean"
         dataFile="twoTextFields"
         code="text1__c&lt;text2__c">
        <referencefield devName="text1" labelName="text2" dataType="Text" length="50"/>
        <referencefield devName="text2" labelName="text2" dataType="Text" length="50"/>
     </testcase>      
     <testcase name="testIfTextCompareGreaterThan" labels="extended"
         devName="testIfTextCompareGreaterThan"
         labelName="testIfTextCompareGreaterThan" dataType="Boolean"
         dataFile="twoTextFields"
         code="text1__c&gt;text2__c">
        <referencefield devName="text1" labelName="text2" dataType="Text" length="50"/>
        <referencefield devName="text2" labelName="text2" dataType="Text" length="50"/>
     </testcase>      
     <testcase name="testIfTextCompareLessEqual" labels="extended"
         devName="testIfTextCompareLessEqual"
         labelName="testIfTextCompareLessEqual" dataType="Boolean"
         dataFile="twoTextFields"
         code="text1__c&lt;=text2__c">
        <referencefield devName="text1" labelName="text2" dataType="Text" length="50"/>
        <referencefield devName="text2" labelName="text2" dataType="Text" length="50"/>
     </testcase>      
     <testcase name="testIfTextCompareGreaterEqual" labels="extended"
         devName="testIfTextCompareGreaterEqual"
         labelName="testIfTextCompareGreaterEqual" dataType="Boolean"
         dataFile="twoTextFields"
         code="text1__c&gt;=text2__c">
        <referencefield devName="text1" labelName="text2" dataType="Text" length="50"/>
        <referencefield devName="text2" labelName="text2" dataType="Text" length="50"/>
     </testcase>      

    <testcase name="testFormatDurationTime" devName="testFormatDurationTime" labels="extended"
        labelName="testFormatDurationTime" dataType="Text" eval="formula,template" dataFile="twoTimeFields"
        code="FORMATDURATION(TimeValue(timeString2__c),TimeValue(timeString1__c))">
        <referencefield devName="timeString1" labelName="timeString1" dataType="Text" length="50"/>
        <referencefield devName="timeString2" labelName="timeString2" dataType="Text" length="50"/>
        <whyIgnoreSql db="sqlite3" numFailures="2">Millisecond differences ignored in diff</whyIgnoreSql>
    </testcase>
    <testcase name="testFormatDurationDateTime" devName="testFormatDurationDateTime" labels="extended"
        labelName="testFormatDurationDateTime" dataType="Text" eval="formula,template" dataFile="TwoDateFields"
        code="FORMATDURATION(customdatetime2__c,customdatetime1__c)">
         <referencefield devName="customdatetime1" labelName="customdatetime1"
             dataType="DateTime" length="255"/>
         <referencefield devName="customdatetime2" labelName="customdatetime2"
             dataType="DateTime" length="255"/>
    </testcase>
    <testcase name="testFormatDurationSecondsBool" devName="testFormatDurationSecondsBool" labels="extended"
        labelName="testFormatDurationSecondsBool" dataType="Text" eval="formula,template" dataFile="formatDurationNumberBool"
        code="FORMATDURATION(customNumber1__c, customcheckbox1__c)">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
         <referencefield devName="customcheckbox1" labelName="customcheckbox1"
             dataType="Boolean" length="255"/>
    </testcase>
    <testcase name="testFormatDurationSeconds" devName="testFormatDurationSeconds" labels="extended"
        labelName="testFormatDurationSeconds" dataType="Text" eval="formula,template" dataFile="formatDurationNumber"
        code="FORMATDURATION(customNumber1__c)">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
    </testcase>

     <testcase name="testFormatDurationWithTrue" devName="testFormatDurationWithTrue"
         labelName="testFormatDurationWithTrue" dataType="Text" length="130" compareTemplate="formula" dataFile="formatDurationNumber"
         code="FORMATDURATION(customNumber1__c,TRUE)">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
     </testcase>
     <testcase name="testFormatDurationWithFalse" devName="testFormatDurationWithFalse"
         labelName="testFormatDurationWithFalse" dataType="Text" length="130"  dataFile="formatDurationNumber"
         code="FORMATDURATION(customNumber1__c,FALSE)">
         <referencefield devName="customNumber1" labelName="customNumber1" dataType="Double" scale="2" precision="12" />
     </testcase>             
     
     
     <testcase name="testIfErrorDateTimeValueWithInvalidString" devName="testIfErrorDateTimeValueWithInvalidString" labels="extended"
         labelName="testIfErrorDateTimeValueWithInvalidString" dataType="DateOnly" eval="formula,template"
         code="IFERROR(DATETIMEVALUE(&quot;sample &quot;),DATETIMEVALUE(&quot;2005-11-15 17:00:00 &quot;))">
     </testcase>
     <testcase name="testIfErrorDateTimeValueWithBadElse" devName="testIfErrorDateTimeValueWithBadElse" labels="ignore"
         labelName="testIfErrorDateTimeValueWithBadElse" dataType="DateOnly" eval="formula,template"
         code="IFERROR(DATETIMEVALUE(&quot;sample &quot;),DATETIMEVALUE(&quot;sample &quot;))">
     </testcase>
      <testcase name="testIfErrorDateTimeValueWithValidInValid" devName="testIfErrorDateTimeValueWithValidInValid" labels="extended"
         whyIgnoreJs="24:00 works for time"
         labelName="testIfErrorDateTimeValueWithValidInValid" dataType="DateOnly" eval="formula,template" dataFile="functiondatevalue-dateandtime"
         code="IFERROR(DATETIMEVALUE(dateString__c),DATETIMEVALUE(&quot;2005-11-15 17:00:00 &quot;))">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="mssql,mysql,mariadb,spanner,sqlite3,trino" unimplemented="true">IfError not implemented correctly for Dates</whyIgnoreSql>
      </testcase>
     <testcase name="testIfErrorSqrt" devName="testIfErrorSqrt" labels="math"
         labelName="testIfErrorSqrt" dataType="Double" dataFile="oneNumericField"
         scale="2" precision="12"
         whyIgnoreJs="nullAsNull difference in sqrt returning -1"
         code="IFERROR(SQRT(customnumber1__c),-1)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="12"/>
     </testcase>

      <testcase name="testIfErrorTextTimeValueWithValidInValid" devName="testIfErrorTextTimeValueWithValidInValid" labels="extended"
         labelName="testIfErrorTextTimeValueWithValidInValid" dataType="Text" eval="formula,template" dataFile="functiontimevalue-dateandtime"
         whyIgnoreJs="Invalid times work with isocode"
         code="IFERROR(Text(TimeValue(dateString__c)),NULL)">
         <referencefield devName="dateString" labelName="dateString"
             dataType="Text"  length="50"/>
         <whyIgnoreSql db="mssql,mysql,mariadb,spanner,sqlite3,trino" unimplemented="true">IfError not implemented correctly for Dates </whyIgnoreSql>
     </testcase>                       

     <testcase name="testIfErrorBigDivide" devName="testIfErrorBigDivide" labels="math"
         labelName="testIfErrorBigDivide" dataType="Double" dataFile="BigDivide"
         scale="2" precision="15"
         whyIgnoreJs="nullAsNull returns 0 for NaN"
         code="IFERROR(((customnumber1__c/customnumber2__c)*customnumber3__c),0)">
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="2" precision="18"/>
         <referencefield devName="customnumber3" labelName="customnumber3"
             dataType="Double" scale="2" precision="18"/>
         <whyIgnoreSql db="spanner" unimplemented="true">IfError not implemented correctly for Google</whyIgnoreSql>
         <whyIgnoreSql db="trino" numFailures="4">Precision Differences</whyIgnoreSql>
     </testcase>


    <testcase name="testJsonValue" devName="testJsonValue" labels="extended"
        labelName="testJsonValue" dataType="Text"
        dataFile="functionjsonvalue" length="255"
        code="JSONVALUE(customjson__c, 'Temperature')">
        <referencefield devName="customjson" labelName="customjson"
                dataType="Text" length="255"/>
        <referencefield devName="customtext" labelName="customtext"
                dataType="Text" length="255"/>
         <whyIgnoreSql db="spanner" unimplemented="true">JsonValue requires a literal json path</whyIgnoreSql>
         <whyIgnoreSql db="h2" unimplemented="true">H2 does not support json queries</whyIgnoreSql>
    </testcase>
    <testcase name="testJsonPathValue" devName="testJsonPathValue" labels="extended"
        labelName="testJsonPathValue" dataType="Text"
        dataFile="functionjsonpathvalue" length="255"
        code="JSONPATHVALUE(customjson__c, '$.Temperature')">
        <referencefield devName="customjson" labelName="customjson"
                dataType="Text" length="255"/>
        <referencefield devName="customtext" labelName="customtext"
                dataType="Text" length="255"/>
         <whyIgnoreSql db="h2" unimplemented="true">H2 does not support json queries</whyIgnoreSql>
    </testcase>
    
    <testcase name="testReverse" devName="testReverse"
         labelName="testReverse" dataType="Text"
         dataFile="singleTextFieldData" length="255"
         code="REVERSE(customtext1__c)">
         <referencefield devName="customtext1" labelName="customtext1"
             dataType="Text" length="255"/>
         <whyIgnoreSql db="h2" unimplemented="true">Reverse not in h2</whyIgnoreSql>
     </testcase>
     <testcase name="testMid" devName="testMid"
         labelName="testMid" dataType="Text"
         dataFile="functionSubstr3" length="255"
         code="MID(customtext__c, customnumber1__c, customnumber2__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="14"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="4" precision="14"/>
         <whyIgnoreSql db="postgres,h2" numFailures="2">Null start treated as zero with GREATEST.</whyIgnoreSql>
     </testcase>     
     <testcase name="testSubstr2" devName="testSubstr2"
         labelName="testSubstr2" dataType="Text"
         dataFile="functionSubstr2" length="255"
         whyIgnoreJs="negative start greater than length works in js"
         code="SUBSTR(customtext__c, customnumber1__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="14"/>
         <whyIgnoreSql db="spanner,sqlite3,h2" numFailures="8">negative start greater than length works.</whyIgnoreSql>
     </testcase>     
     <testcase name="testSubstr3" devName="testSubstr3"
         labelName="testSubstr3" dataType="Text"
         dataFile="functionSubstr3" length="255"
         whyIgnoreJs="negative start greater than length works in js"
         code="SUBSTR(customtext__c, customnumber1__c, customnumber2__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customnumber1" labelName="customnumber1"
             dataType="Double" scale="4" precision="14"/>
         <referencefield devName="customnumber2" labelName="customnumber2"
             dataType="Double" scale="4" precision="14"/>
         <whyIgnoreSql db="spanner" numFailures="4">negative start greater than length works.</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3,h2" numFailures="2">negative start greater than length works.</whyIgnoreSql>
     </testcase>     
  
     <testcase name="testRegex" devName="testRegex" labels="extended"
         labelName="testRegex" dataType="Text"
         dataFile="functionRegex" length="255"
         whyIgnoreJs="negative start greater than length works in js"
         code="if(REGEX(customtext__c, customexpr__c),'TRUE','FALSE')">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customexpr" labelName="customexpr"
                 dataType="Text" length="255"/>
         <whyIgnoreSql db="mssql" unimplemented="true">Sqlserver doesn't allow regexp in SQL</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" unimplemented="true">Not all sqlites support regexp</whyIgnoreSql>
         <whyIgnoreSql db="oracle" numFailures="4">Oracle treats empty string like null, so regexp_like doesn't match ".*"</whyIgnoreSql>
     </testcase>     

    
     <testcase name="testLike" devName="testRegex" labels="extended"
         labelName="testLike" dataType="Text"
         dataFile="functionLike" length="255"
         code="if(LIKE(customtext__c, customexpr__c),'TRUE','FALSE')">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customexpr" labelName="customexpr"
                 dataType="Text" length="255"/>
         <whyIgnoreSql db="oracle,trino" numFailures="2">Invalid escape character with \s, difficult to validate</whyIgnoreSql>
         <whyIgnoreSql db="sqlite3" numFailures="6">Sqlite is case sensitive without a global pragma</whyIgnoreSql>
     </testcase>     
    
     <!--  Test IN(...) -->
     <testcase name="testIn2Text" devName="testIn2Text" labels="extended"
         labelName="testIn2Text" dataType="Boolean"
         dataFile="twoTextFields" 
         code="IN(customtext__c, customin1__c)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customin1" labelName="customin1"
                 dataType="Text" length="255"/>
         <whyIgnoreSql db="mssql" numFailures="2">ss vs ß compares the same with standard TransactSQL Hook</whyIgnoreSql>
     </testcase>     
     <testcase name="testIn2TextNull" devName="testIn2TextNull" labels="extended"
         labelName="testIn2TextNull" dataType="Boolean"
         dataFile="twoTextFields" 
         code="IN(customtext__c, customin1__c, NULL)">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customin1" labelName="customin1"
                 dataType="Text" length="255"/>
         <whyIgnoreSql db="mssql" numFailures="2">ss vs ß compares the same with standard TransactSQL Hook</whyIgnoreSql>
     </testcase>     
     <testcase name="testIn2TextFoo" devName="testIn2TextFoo" labels="extended"
         labelName="testIn2TextFoo" dataType="Boolean"
         dataFile="twoTextFields" 
         code="IN(customtext__c, customin1__c, 'Foo')">
         <referencefield devName="customtext" labelName="customtext"
                 dataType="Text" length="255"/>
         <referencefield devName="customin1" labelName="customin1"
                 dataType="Text" length="255"/>
         <whyIgnoreSql db="mssql" numFailures="2">ss vs ß compares the same with standard TransactSQL Hook</whyIgnoreSql>
     </testcase>                   
    
     <testcase name="testIn2Num" devName="testIn2Num" labels="extended"
         labelName="testIn2Num" dataType="Boolean"
         dataFile="twoNumericFields" 
         code="IN(customnum__c, customin1__c)">
         <referencefield devName="customnum" labelName="customnum"
             dataType="Double" scale="4" precision="14"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="Double" scale="4" precision="14"/>
     </testcase>     
     <testcase name="testIn2NumNull" devName="testIn2NumNull" labels="extended"
         labelName="testIn2NumNull" dataType="Boolean"
         dataFile="twoNumericFields" 
         code="IN(customnum__c, customin1__c, NULL)">
         <referencefield devName="customnum" labelName="customnum"
             dataType="Double" scale="4" precision="14"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="Double" scale="4" precision="14"/>
     </testcase>     
     <testcase name="testIn2Date" devName="testIn2Date" labels="extended"
         labelName="testIn2Date" dataType="Boolean"
         dataFile="TwoDateFields" 
         code="IN(customdate__c, customin1__c)">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateOnly"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateOnly"/>
     </testcase>     
     <testcase name="testIn2DateNull" devName="testIn2DateNull" labels="extended"
         labelName="testIn2DateNull" dataType="Boolean"
         dataFile="TwoDateFields" 
         code="IN(customdate__c, customin1__c, NULL)">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateOnly"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateOnly"/>
     </testcase>     
     <testcase name="testIn2DateNullConst" devName="testIn2DateNull" labels="extended"
         labelName="testIn2DateNull" dataType="Boolean"
         dataFile="TwoDateFields" 
         code="IN(customdate__c, customin1__c, DATE(2004,2,28))">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateOnly"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateOnly"/>
     </testcase>     
     <testcase name="testIn2DateTime" devName="testIn2DateTime" labels="extended"
         labelName="testIn2DateTime" dataType="Boolean"
         dataFile="twoDateTimeFields" 
         code="IN(customdate__c, customin1__c)">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateTime"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateTime"/>
     </testcase>     
     <testcase name="testIn2DateTimeNull" devName="testIn2DateTimeNull" labels="extended"
         labelName="testIn2DateTimeNull" dataType="Boolean"
         dataFile="twoDateTimeFields" 
         code="IN(customdate__c, customin1__c, NULL)">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateTime"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateTime"/>
     </testcase>     
     <testcase name="testIn2DateTimeConst" devName="testIn2DateTimeConst" labels="extended"
         labelName="testIn2DateTimeConst" dataType="Boolean"
         dataFile="twoDateTimeFields" 
         code="IN(customdate__c, customin1__c, DATETIMEVALUE('2004-02-28 11:00:00'))">
         <referencefield devName="customdate" labelName="customdate"
             dataType="DateTime"/>
         <referencefield devName="customin1" labelName="customin1"
             dataType="DateTime"/>
     </testcase>          

</formula-test>
