<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testIfContainsUsesText">
   <testInstance formula="IF(CONTAINS(customtext1__c,customtext2__c),customnumber1__c,custompercent1__c)" returntype="Currency" precision="12" scale="2">
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN (($!s0s!$.customtext2__c IS NULL) OR (STRPOS($!s0s!$.customtext1__c, $!s0s!$.customtext2__c) &gt;= 1)) THEN COALESCE($!s0s!$.customnumber1__c, 0) ELSE COALESCE(($!s0s!$.custompercent1__c / 100.0), 0) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN (($!s0s!$.customtext2__c IS NULL) OR (STRPOS($!s0s!$.customtext1__c, $!s0s!$.customtext2__c) &gt;= 1)) THEN $!s0s!$.customnumber1__c ELSE ($!s0s!$.custompercent1__c / 100.0) END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">((!context.record.customtext2__c||(($F.nvl(context.record.customtext1__c,'')).indexOf(context.record.customtext2__c)&gt;=0))?$F.nvl(context.record.customnumber1__c,new $F.Decimal('0')):$F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c.div(100)):null,new $F.Decimal('0')))</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">((!context.record.customtext2__c||(($F.nvl(context.record.customtext1__c,'')).indexOf(context.record.customtext2__c)&gt;=0))?context.record.customnumber1__c:(context.record.custompercent1__c!=null?(context.record.custompercent1__c.div(100)):null))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">((!context.record.customtext2__c||(($F.nvl(context.record.customtext1__c,'')).indexOf(context.record.customtext2__c)&gt;=0))?$F.nvl(context.record.customnumber1__c,0):$F.nvl((context.record.custompercent1__c!=null)?(context.record.custompercent1__c/100.0):null,0))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">((!context.record.customtext2__c||(($F.nvl(context.record.customtext1__c,'')).indexOf(context.record.customtext2__c)&gt;=0))?context.record.customnumber1__c:(context.record.custompercent1__c!=null?(context.record.custompercent1__c/100.0):null))</JsOutput>
      <result>
      <inputvalues>[Golden File, Gold, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Golden File, File, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Golden File, n F, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Golden File, gold, 200, 300]</inputvalues>
         <formula>3</formula>
         <sql>3.00000000000000000000000000000000</sql>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <sqlNullAsNull>3.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Golden File, n f, 200, 300]</inputvalues>
         <formula>3</formula>
         <sql>3.00000000000000000000000000000000</sql>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <sqlNullAsNull>3.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this, contract, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[This is a very long text and works very well with this type of test and works better with more department wise contract and @ this # this $ this % this ^ this &amp; this * this ( this ) this) this, Works, 200, 300]</inputvalues>
         <formula>3</formula>
         <sql>3.00000000000000000000000000000000</sql>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <sqlNullAsNull>3.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Hello World!, !, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Works Great and \&quot; and Works Greate Twoo \\, \\, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[510 797 4647, 510 797 4647, 200, 300]</inputvalues>
         <formula>200</formula>
         <sql>200.00000000000000000000000000000000</sql>
         <javascript>200</javascript>
         <javascriptLp>200</javascriptLp>
         <formulaNullAsNull>200</formulaNullAsNull>
         <sqlNullAsNull>200.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>200</javascriptNullAsNull>
         <javascriptLpNullAsNull>200</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[510-797-4647, 510 797 4647, 200, 300]</inputvalues>
         <formula>3</formula>
         <sql>3.00000000000000000000000000000000</sql>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <sqlNullAsNull>3.00000000000000000000000000000000</sqlNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
