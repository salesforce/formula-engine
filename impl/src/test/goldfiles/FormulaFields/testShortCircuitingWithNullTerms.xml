<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testShortCircuitingWithNullTerms">
   <testInstance formula="if(and(customdate1__c &gt;date(2000,1,1), value(customtext1__c )&gt;0),'True','False')" returntype="Text">
    <SqlOutput psql="true" nullAsNull="true">
       <Sql>CASE WHEN (($!s0s!$.customdate1__c&gt;TO_DATE(2000 || '-' || 1 || '-' || 1, 'YYYY-MM-DD')) AND (TO_NUMBER($!s0s!$.customtext1__c)&gt;0)) THEN 'True' ELSE 'False' END</Sql><Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')       </Guard>
</SqlOutput>
    <SqlOutput psql="true" nullAsNull="false">
       <Sql>CASE WHEN (($!s0s!$.customdate1__c&gt;TO_DATE(2000 || '-' || 1 || '-' || 1, 'YYYY-MM-DD')) AND (TO_NUMBER($!s0s!$.customtext1__c)&gt;0)) THEN 'True' ELSE 'False' END</Sql><Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="true">
       <Sql>CASE WHEN (($!s0s!$.customdate1__c&gt;TO_DATE(2000 || '-' || 1 || '-' || 1, 'YYYY-MM-DD')) AND (TO_NUMBER($!s0s!$.customtext1__c)&gt;0)) THEN 'True' ELSE 'False' END</Sql><Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="false">
       <Sql>CASE WHEN (($!s0s!$.customdate1__c&gt;TO_DATE(2000 || '-' || 1 || '-' || 1, 'YYYY-MM-DD')) AND (TO_NUMBER($!s0s!$.customtext1__c)&gt;0)) THEN 'True' ELSE 'False' END</Sql><Guard>NOT REGEXP_LIKE(REGEXP_REPLACE($!s0s!$.customtext1__c,'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$')       </Guard>
</SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">(context.record.customtext1__c!=null&amp;&amp;(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(new $F.Decimal('2000').toNumber(),new $F.Decimal('1').toNumber()-1,new $F.Decimal('1').toNumber()))):null)!=null &amp;&amp; (((($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(new $F.Decimal('2000').toNumber(),new $F.Decimal('1').toNumber()-1,new $F.Decimal('1').toNumber()))):null))&amp;&amp;(($F.Decimal(context.record.customtext1__c)&gt;new $F.Decimal('0'))))?&quot;True&quot;:&quot;False&quot;)</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customtext1__c!=null&amp;&amp;(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(new $F.Decimal('2000').toNumber(),new $F.Decimal('1').toNumber()-1,new $F.Decimal('1').toNumber()))):null)!=null &amp;&amp; (((($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(new $F.Decimal('2000').toNumber(),new $F.Decimal('1').toNumber()-1,new $F.Decimal('1').toNumber()))):null))&amp;&amp;(($F.Decimal(context.record.customtext1__c)&gt;new $F.Decimal('0'))))?&quot;True&quot;:&quot;False&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(context.record.customtext1__c!=null&amp;&amp;(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(2000,1-1,1))):null)!=null &amp;&amp; (((($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(2000,1-1,1))):null))&amp;&amp;((Number(context.record.customtext1__c)&gt;0)))?&quot;True&quot;:&quot;False&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customtext1__c!=null&amp;&amp;(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(2000,1-1,1))):null)!=null &amp;&amp; (((($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))!=null?(($F.anl([context.record.customdate1__c])?null:new Date(new Date(context.record.customdate1__c).setUTCHours(0,0,0,0)))&gt;new Date(Date.UTC(2000,1-1,1))):null))&amp;&amp;((Number(context.record.customtext1__c)&gt;0)))?&quot;True&quot;:&quot;False&quot;)</JsOutput>
      <result>
      <inputvalues>[2005:12:31, 4]</inputvalues>
         <formula>True</formula>
         <javascript>True</javascript>
         <javascriptLp>True</javascriptLp>
         <formulaNullAsNull>True</formulaNullAsNull>
         <javascriptNullAsNull>True</javascriptNullAsNull>
         <javascriptLpNullAsNull>True</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[2005:12:31, 0]</inputvalues>
         <formula>False</formula>
         <javascript>False</javascript>
         <javascriptLp>False</javascriptLp>
         <formulaNullAsNull>False</formulaNullAsNull>
         <javascriptNullAsNull>False</javascriptNullAsNull>
         <javascriptLpNullAsNull>False</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[2005:12:31, abc]</inputvalues>
         <formula>Error: com.force.formula.impl.InvalidNumericValueException</formula>
         <javascript>Error: Error: [DecimalError] Invalid argument: abc</javascript>
         <javascriptLp>False</javascriptLp>
         <formulaNullAsNull>Error: com.force.formula.impl.InvalidNumericValueException</formulaNullAsNull>
         <javascriptNullAsNull>Error: Error: [DecimalError] Invalid argument: abc</javascriptNullAsNull>
         <javascriptLpNullAsNull>False</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, 4]</inputvalues>
         <formula>False</formula>
         <javascript>False</javascript>
         <javascriptLp>False</javascriptLp>
         <formulaNullAsNull>False</formulaNullAsNull>
         <javascriptNullAsNull>False</javascriptNullAsNull>
         <javascriptLpNullAsNull>False</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
