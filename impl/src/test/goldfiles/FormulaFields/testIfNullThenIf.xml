<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testIfNullThenIf">
   <testInstance formula="if( if (customtext1__c=customtext2__c, null, false),  &quot;true&quot;, &quot;false&quot;)" returntype="Text">
    <SqlOutput psql="true" nullAsNull="true">
       <Sql>CASE WHEN (CASE WHEN (nvl($!s0s!$.customtext1__c, $!s0s!$.customtext2__c||'x')=nvl($!s0s!$.customtext2__c, $!s0s!$.customtext1__c||'x')) THEN 0 ELSE 0 END) = 1 THEN 'true' ELSE 'false' END</Sql><Guard>null       </Guard>
</SqlOutput>
    <SqlOutput psql="true" nullAsNull="false">
       <Sql>CASE WHEN (CASE WHEN (nvl($!s0s!$.customtext1__c, $!s0s!$.customtext2__c||'x')=nvl($!s0s!$.customtext2__c, $!s0s!$.customtext1__c||'x')) THEN 0 ELSE 0 END) = 1 THEN 'true' ELSE 'false' END</Sql><Guard>null       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="true">
       <Sql>CASE WHEN (CASE WHEN (nvl($!s0s!$.customtext1__c, $!s0s!$.customtext2__c||'x')=nvl($!s0s!$.customtext2__c, $!s0s!$.customtext1__c||'x')) THEN 0 ELSE 0 END) = 1 THEN 'true' ELSE 'false' END</Sql><Guard>null       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="false">
       <Sql>CASE WHEN (CASE WHEN (nvl($!s0s!$.customtext1__c, $!s0s!$.customtext2__c||'x')=nvl($!s0s!$.customtext2__c, $!s0s!$.customtext1__c||'x')) THEN 0 ELSE 0 END) = 1 THEN 'true' ELSE 'false' END</Sql><Guard>null       </Guard>
</SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:false)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:false)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:false)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:false)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
      <result>
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[aaaa, bbbb]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[aaaa, ]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, bbbb]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, ]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <javascript>false</javascript>
         <javascriptLp>false</javascriptLp>
         <formulaNullAsNull>false</formulaNullAsNull>
         <javascriptNullAsNull>false</javascriptNullAsNull>
         <javascriptLpNullAsNull>false</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
