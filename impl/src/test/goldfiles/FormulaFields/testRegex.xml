<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testRegex">
   <testInstance formula="if(REGEX(customtext__c, customexpr__c),'TRUE','FALSE')" returntype="Text">
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN COALESCE($!s0s!$.customtext__c,'') ~ CONCAT(CONCAT('^', $!s0s!$.customexpr__c), '$') THEN 'TRUE' ELSE 'FALSE' END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN COALESCE($!s0s!$.customtext__c,'') ~ CONCAT(CONCAT('^', $!s0s!$.customexpr__c), '$') THEN 'TRUE' ELSE 'FALSE' END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">(new RegExp(($F.anl([context.record.customexpr__c])?'^$':'^'+context.record.customexpr__c+'$')).test($F.nvl(context.record.customtext__c,''))?&quot;TRUE&quot;:&quot;FALSE&quot;)</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(new RegExp(($F.anl([context.record.customexpr__c])?'^$':'^'+context.record.customexpr__c+'$')).test($F.nvl(context.record.customtext__c,''))?&quot;TRUE&quot;:&quot;FALSE&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(new RegExp(($F.anl([context.record.customexpr__c])?'^$':'^'+context.record.customexpr__c+'$')).test($F.nvl(context.record.customtext__c,''))?&quot;TRUE&quot;:&quot;FALSE&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(new RegExp(($F.anl([context.record.customexpr__c])?'^$':'^'+context.record.customexpr__c+'$')).test($F.nvl(context.record.customtext__c,''))?&quot;TRUE&quot;:&quot;FALSE&quot;)</JsOutput>
      <result>
      <inputvalues>[F.o, F\.o]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Foo, F\\.o]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, (a*)b]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, Text]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, ext]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, Te]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, ^Text$]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Text, [T][e][x][t]]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Hello, ((]</inputvalues>
         <formula>Error: java.util.regex.PatternSyntaxException</formula>
         <sql>Error: ERROR: invalid regular expression: parentheses () not balanced</sql>
         <javascript>Error: SyntaxError: Unterminated group</javascript>
         <javascriptLp>Error: SyntaxError: Unterminated group</javascriptLp>
         <formulaNullAsNull>Error: java.util.regex.PatternSyntaxException</formulaNullAsNull>
         <sqlNullAsNull>Error: ERROR: invalid regular expression: parentheses () not balanced</sqlNullAsNull>
         <javascriptNullAsNull>Error: SyntaxError: Unterminated group</javascriptNullAsNull>
         <javascriptLpNullAsNull>Error: SyntaxError: Unterminated group</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[Hello, ]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, (a*)?]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, a+]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[aaaaaaaaaaaac, (a*)+b]</inputvalues>
         <formula>FALSE</formula>
         <sql>FALSE</sql>
         <javascript>FALSE</javascript>
         <javascriptLp>FALSE</javascriptLp>
         <formulaNullAsNull>FALSE</formulaNullAsNull>
         <sqlNullAsNull>FALSE</sqlNullAsNull>
         <javascriptNullAsNull>FALSE</javascriptNullAsNull>
         <javascriptLpNullAsNull>FALSE</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[, ]</inputvalues>
         <formula>TRUE</formula>
         <sql>TRUE</sql>
         <javascript>TRUE</javascript>
         <javascriptLp>TRUE</javascriptLp>
         <formulaNullAsNull>TRUE</formulaNullAsNull>
         <sqlNullAsNull>TRUE</sqlNullAsNull>
         <javascriptNullAsNull>TRUE</javascriptNullAsNull>
         <javascriptLpNullAsNull>TRUE</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
