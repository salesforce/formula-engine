<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testExpUsesLn">
   <testInstance formula="ROUND(EXP(LN(customnumber1__c)), 0)" returntype="Double" precision="12" scale="2">
    <SqlOutput psql="true" nullAsNull="true">
       <Sql>ROUND(EXP(LN(NVL($!s0s!$.customnumber1__c, 0))::numeric(40,20)), 0)</Sql><Guard>NVL($!s0s!$.customnumber1__c, 0)&lt;=0       </Guard>
</SqlOutput>
    <SqlOutput psql="true" nullAsNull="false">
       <Sql>ROUND(EXP(LN($!s0s!$.customnumber1__c)::numeric(40,20)), 0)</Sql><Guard>$!s0s!$.customnumber1__c&lt;=0       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="true">
       <Sql>ROUND(EXP(LN(NVL($!s0s!$.customnumber1__c, 0))), 0)</Sql><Guard>NVL($!s0s!$.customnumber1__c, 0)&lt;=0       </Guard>
</SqlOutput>
    <SqlOutput psql="false" nullAsNull="false">
       <Sql>ROUND(EXP(LN($!s0s!$.customnumber1__c)), 0)</Sql><Guard>$!s0s!$.customnumber1__c&lt;=0       </Guard>
</SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">($F.Decimal.exp(($F.nvl(context.record.customnumber1__c,new $F.Decimal('0'))).ln())).mul('1e'+new $F.Decimal('0').toFixed(0)).round().div('1e'+new $F.Decimal('0').toFixed(0))</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(context.record.customnumber1__c!=null)?(($F.Decimal.exp((context.record.customnumber1__c).ln())).mul('1e'+new $F.Decimal('0').toFixed(0)).round().div('1e'+new $F.Decimal('0').toFixed(0))):null</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">Number(Number(Math.exp(Math.log($F.nvl(context.record.customnumber1__c,0)))).toFixed(0&lt;=20?0:20))</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(context.record.customnumber1__c!=null)?(Number(Number(Math.exp(Math.log(context.record.customnumber1__c))).toFixed(0&lt;=20?0:20))):null</JsOutput>
      <result>
      <inputvalues>[1]</inputvalues>
         <formula>1</formula>
         <javascript>1</javascript>
         <javascriptLp>1</javascriptLp>
         <formulaNullAsNull>1</formulaNullAsNull>
         <javascriptNullAsNull>1</javascriptNullAsNull>
         <javascriptLpNullAsNull>1</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[2]</inputvalues>
         <formula>2</formula>
         <javascript>2</javascript>
         <javascriptLp>2</javascriptLp>
         <formulaNullAsNull>2</formulaNullAsNull>
         <javascriptNullAsNull>2</javascriptNullAsNull>
         <javascriptLpNullAsNull>2</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[3]</inputvalues>
         <formula>3</formula>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[4]</inputvalues>
         <formula>4</formula>
         <javascript>4</javascript>
         <javascriptLp>4</javascriptLp>
         <formulaNullAsNull>4</formulaNullAsNull>
         <javascriptNullAsNull>4</javascriptNullAsNull>
         <javascriptLpNullAsNull>4</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[5]</inputvalues>
         <formula>5</formula>
         <javascript>5</javascript>
         <javascriptLp>5</javascriptLp>
         <formulaNullAsNull>5</formulaNullAsNull>
         <javascriptNullAsNull>5</javascriptNullAsNull>
         <javascriptLpNullAsNull>5</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[6]</inputvalues>
         <formula>6</formula>
         <javascript>6</javascript>
         <javascriptLp>6</javascriptLp>
         <formulaNullAsNull>6</formulaNullAsNull>
         <javascriptNullAsNull>6</javascriptNullAsNull>
         <javascriptLpNullAsNull>6</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[10000]</inputvalues>
         <formula>10000</formula>
         <javascript>10000</javascript>
         <javascriptLp>10000</javascriptLp>
         <formulaNullAsNull>10000</formulaNullAsNull>
         <javascriptNullAsNull>10000</javascriptNullAsNull>
         <javascriptLpNullAsNull>10000</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[10]</inputvalues>
         <formula>10</formula>
         <javascript>10</javascript>
         <javascriptLp>10</javascriptLp>
         <formulaNullAsNull>10</formulaNullAsNull>
         <javascriptNullAsNull>10</javascriptNullAsNull>
         <javascriptLpNullAsNull>10</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[16]</inputvalues>
         <formula>16</formula>
         <javascript>16</javascript>
         <javascriptLp>16</javascriptLp>
         <formulaNullAsNull>16</formulaNullAsNull>
         <javascriptNullAsNull>16</javascriptNullAsNull>
         <javascriptLpNullAsNull>16</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[2.56]</inputvalues>
         <formula>3</formula>
         <javascript>3</javascript>
         <javascriptLp>3</javascriptLp>
         <formulaNullAsNull>3</formulaNullAsNull>
         <javascriptNullAsNull>3</javascriptNullAsNull>
         <javascriptLpNullAsNull>3</javascriptLpNullAsNull>
      </result>
      <result>
      <inputvalues>[123456789.123456789]</inputvalues>
         <formula>123456789</formula>
         <javascript>123456789</javascript>
         <javascriptLp>123456789</javascriptLp>
         <formulaNullAsNull>123456789</formulaNullAsNull>
         <javascriptNullAsNull>123456789</javascriptNullAsNull>
         <javascriptLpNullAsNull>123456789</javascriptLpNullAsNull>
      </result>
   </testInstance>
</testCase>
