<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>formula-engine-impl</artifactId>
    <name>Formula Engine Impl</name>
    <description>
      The implementation to the formula engine, with all the basics to implement
      spreadsheet style formulas and convert them to use in java, javascript, and
      multiple sql databases.
    </description>

    <parent>
        <groupId>com.salesforce.formula</groupId>
        <artifactId>formula-engine</artifactId>
        <version>0.3.9-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.salesforce.formula</groupId>
            <artifactId>formula-engine-api</artifactId>
            <version>0.3.9-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.salesforce.formula</groupId>
            <artifactId>formula-engine-test-utils</artifactId>
            <version>0.3.9-SNAPSHOT</version>
	    <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
	    <dependency>
	      <groupId>com.google.guava</groupId>
	      <artifactId>guava</artifactId>
	    </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-complete</artifactId>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
        </dependency>
        <dependency>
	  <groupId>io.zonky.test</groupId>
	  <artifactId>embedded-postgres</artifactId>
	  <scope>test</scope>
	</dependency>
	<dependency>
	  <groupId>org.testcontainers</groupId>
	  <artifactId>postgresql</artifactId>
          <version>${testcontainers.version}</version>
	  <scope>test</scope>
  	</dependency>
        <dependency>
          <groupId>org.graalvm.sdk</groupId>
          <artifactId>graal-sdk</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.9.0</version>
        </dependency>
	<dependency>
	  <groupId>jakarta.xml.bind</groupId>
	  <artifactId>jakarta.xml.bind-api</artifactId>
	  <scope>runtime</scope>
	</dependency>
	<dependency>
	  <groupId>org.glassfish.jaxb</groupId>
	  <artifactId>jaxb-runtime</artifactId>
	  <version>2.3.0</version>
	  <scope>runtime</scope>
	</dependency>


  <!--  Json Function Dependencies -->
       <dependency>
          <groupId>com.jayway.jsonpath</groupId>
          <artifactId>json-path</artifactId>
          <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
            <!-- 
            In JDK 17, use                 
                <groupId>org.omnifaces</groupId>
                <artifactId>antlr-maven-plugin</artifactId>
                <version>2.4</version>
             -->
            
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>antlr-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <grammars>*.g</grammars>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.5.3</version>
                <executions>
                    <execution>
                        <id>antlr4</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/Formula.g4</include>
                            </includes>
                            <visitor>
                                true
                            </visitor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
          
          <!-- Create a test jar for use in db-test modules -->  
          <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-jar-plugin</artifactId>
	        <version>${maven-jar-plugin.version}</version>
	        <executions>
	          <execution>
	            <goals>
	              <goal>test-jar</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>	    
            
            <!-- Run impl tests in parallel

                 Command below will run only one test. 
                 mvn test -Dtest=TestExtendedFormulas#testAddWithCaseExpr -DfailIfNoTests=false 
                 
                 Command below will run test in the debug mode. 
                 mvn test -Dtest=TestExtendedFormulas#testAddWithCaseExpr -DfailIfNoTests=false -Dmaven.surefire.debug
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
		<configuration>
 		  <forkCount>3</forkCount>
		  <reuseForks>true</reuseForks>
		</configuration>
            </plugin>
	    <!-- Add this to merge in tests from API branch -->
	    <!--
	    <plugin>
	      <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
	      <executions>
		<execution>
		  <id>merge-coverage-data</id>
		  <phase>verify</phase>
		  <goals>
		    <goal>merge</goal>
		  </goals>
		  <configuration>
		    <fileSets>
		      <fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
			<directory>${project.basedir}/..</directory>
			<includes>
			  <include>**/jacoco.exec</include>
			</includes>
		      </fileSet>
		    </fileSets>
		  </configuration>
		</execution>
	      </executions>
	    </plugin>
	    -->
	    

        </plugins>
    </build>
</project>
