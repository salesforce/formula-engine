<?xml version="1.0" encoding="UTF-8"?>
<testCase name="testIfNullNullIf">
   <testInstance formula="if( if (customtext1__c=customtext2__c, null, null) = 0,  &quot;true&quot;, &quot;false&quot;)" returntype="Text">
    <SqlOutput nullAsNull="true">
       <Sql>CASE WHEN (CASE WHEN (COALESCE($!s0s!$.customtext1__c, CONCAT($!s0s!$.customtext2__c, 'x'))=COALESCE($!s0s!$.customtext2__c, CONCAT($!s0s!$.customtext1__c, 'x'))) THEN NULL ELSE NULL END=0) THEN 'true' ELSE 'false' END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <SqlOutput nullAsNull="false">
       <Sql>CASE WHEN (CASE WHEN (COALESCE($!s0s!$.customtext1__c, CONCAT($!s0s!$.customtext2__c, 'x'))=COALESCE($!s0s!$.customtext2__c, CONCAT($!s0s!$.customtext1__c, 'x'))) THEN NULL ELSE NULL END=0) THEN 'true' ELSE 'false' END</Sql>
       <Guard>null</Guard>
    </SqlOutput>
    <JsOutput highPrec="true" nullAsNull="false">(((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:null))==(new $F.Decimal('0'))?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="true" nullAsNull="true">(((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:null))==(new $F.Decimal('0'))?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="false">(((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:null))==(0)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
    <JsOutput highPrec="false" nullAsNull="true">(((($F.noe(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),$F.nvl(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),'')+'x'))==($F.noe(($F.anl([context.record.customtext2__c])?null:context.record.customtext2__c),$F.nvl(($F.anl([context.record.customtext1__c])?null:context.record.customtext1__c),'')+'x'))?null:null))==(0)?&quot;true&quot;:&quot;false&quot;)</JsOutput>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[aaaa, bbbb]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[aaaa, ]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[, bbbb]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[, ]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
      <result>
      <!-- Test Case results don't match: SQL had an error that didn't affect Java: Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant. -->
      <inputvalues>[aaaa, aaaa]</inputvalues>
         <formula>false</formula>
         <sql>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sql>
         <formulaNullAsNull>false</formulaNullAsNull>
         <sqlNullAsNull>Error: At least one of the result expressions in a CASE specification must be an expression other than the NULL constant.</sqlNullAsNull>
      </result>
   </testInstance>
</testCase>
